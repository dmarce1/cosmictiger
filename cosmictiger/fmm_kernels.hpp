/*
CosmicTiger - A cosmological N-Body code
Copyright (C) 2021  Dominic C. Marcello

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
*/
#pragma once
#include <cosmictiger/tensor.hpp>
#include <cosmictiger/cuda.hpp>
#include <cosmictiger/ewald_indices.hpp>
#include <cosmictiger/math.hpp>
#include <cosmictiger/float2double.hpp>
template<class T>
using expansion = tensor_trless_sym<T,7>;
template<class T>
using expansion2 = tensor_trless_sym<T,2>;
template<class T>
using multipole = tensor_trless_sym<T,6>;
#define EXPANSION_SIZE 50
#define MULTIPOLE_SIZE 37
template<class T>
using pm_expansion = tensor_trless_sym<T,8>;
template<class T>
using pm_multipole = tensor_trless_sym<T,7>;
#define PM_EXPANSION_SIZE 65
#define PM_MULTIPOLE_SIZE 50
#define SCALE_FACTOR 1.000000e+00f
#define SCALE_FACTOR0 1.000000e+00f
#define SCALE_FACTOR_INV0 1.000000e+00f
#define SCALE_FACTOR1 1.000000e+00f
#define SCALE_FACTOR_INV1 1.000000e+00f
#define SCALE_FACTOR2 1.000000e+00f
#define SCALE_FACTOR_INV2 1.000000e+00f
#define SCALE_FACTOR3 1.000000e+00f
#define SCALE_FACTOR_INV3 1.000000e+00f
#define SCALE_FACTOR4 1.000000e+00f
#define SCALE_FACTOR_INV4 1.000000e+00f
#define SCALE_FACTOR5 1.000000e+00f
#define SCALE_FACTOR_INV5 1.000000e+00f
#define SCALE_FACTOR6 1.000000e+00f
#define SCALE_FACTOR_INV6 1.000000e+00f
#define SCALE_FACTOR7 1.000000e+00f
#define SCALE_FACTOR_INV7 1.000000e+00f
template<class T>
CUDA_EXPORT
inline int greens_function(tensor_trless_sym<T, 7>& D, array<T, NDIM> X, bool scale = true) {
	if( scale ) {
		X[0] *= T(SCALE_FACTOR);
		X[1] *= T(SCALE_FACTOR);
		X[2] *= T(SCALE_FACTOR);
	}
	auto r2 = sqr(X[0], X[1], X[2]);
	r2 = sqr(X[0], X[1], X[2]);
	const T r = sqrt(r2);
	const T rinv1 = -T(1) / r;
	const T rinv2 = -rinv1 * rinv1;
	const T rinv3 = -rinv2 * rinv1;
	const T rinv4 = -rinv2 * rinv2;
	const T rinv5 = -rinv3 * rinv2;
	const T rinv6 = -rinv3 * rinv3;
	const T rinv7 = -rinv4 * rinv3;
	X[0] *= rinv1;
	X[1] *= rinv1;
	X[2] *= rinv1;
	T x[50];
	x[0] = T(1);
	x[1] = X[0];
	x[2] = X[1];
	x[28] = X[2];
	x[49] = x[28] * x[28]; // 0 0 2 | 0 0 1 | 0 0 1
	x[30] = x[2] * x[28]; // 0 1 1 | 0 0 1 | 0 1 0
	x[5] = x[2] * x[2]; // 0 2 0 | 0 1 0 | 0 1 0
	x[29] = x[1] * x[28]; // 1 0 1 | 0 0 1 | 1 0 0
	x[4] = x[1] * x[2]; // 1 1 0 | 0 1 0 | 1 0 0
	x[3] = x[1] * x[1]; // 2 0 0 | 1 0 0 | 1 0 0
	x[33] = x[30] * x[2]; // 0 2 1 | 0 1 0 | 0 1 1
	x[9] = x[5] * x[2]; // 0 3 0 | 0 1 0 | 0 2 0
	x[32] = x[4] * x[28]; // 1 1 1 | 0 0 1 | 1 1 0
	x[8] = x[4] * x[2]; // 1 2 0 | 0 1 0 | 1 1 0
	x[31] = x[29] * x[1]; // 2 0 1 | 1 0 0 | 1 0 1
	x[7] = x[4] * x[1]; // 2 1 0 | 1 0 0 | 1 1 0
	x[6] = x[3] * x[1]; // 3 0 0 | 1 0 0 | 2 0 0
	x[37] = x[30] * x[5]; // 0 3 1 | 0 2 0 | 0 1 1
	x[14] = x[5] * x[5]; // 0 4 0 | 0 2 0 | 0 2 0
	x[36] = x[4] * x[30]; // 1 2 1 | 0 1 1 | 1 1 0
	x[13] = x[4] * x[5]; // 1 3 0 | 0 2 0 | 1 1 0
	x[35] = x[4] * x[29]; // 2 1 1 | 1 0 1 | 1 1 0
	x[12] = x[4] * x[4]; // 2 2 0 | 1 1 0 | 1 1 0
	x[34] = x[29] * x[3]; // 3 0 1 | 2 0 0 | 1 0 1
	x[11] = x[4] * x[3]; // 3 1 0 | 2 0 0 | 1 1 0
	x[10] = x[3] * x[3]; // 4 0 0 | 2 0 0 | 2 0 0
	x[42] = x[33] * x[5]; // 0 4 1 | 0 2 0 | 0 2 1
	x[20] = x[9] * x[5]; // 0 5 0 | 0 2 0 | 0 3 0
	x[41] = x[32] * x[5]; // 1 3 1 | 0 2 0 | 1 1 1
	x[19] = x[8] * x[5]; // 1 4 0 | 0 2 0 | 1 2 0
	x[40] = x[32] * x[4]; // 2 2 1 | 1 1 0 | 1 1 1
	x[18] = x[7] * x[5]; // 2 3 0 | 0 2 0 | 2 1 0
	x[39] = x[32] * x[3]; // 3 1 1 | 2 0 0 | 1 1 1
	x[17] = x[7] * x[4]; // 3 2 0 | 1 1 0 | 2 1 0
	x[38] = x[31] * x[3]; // 4 0 1 | 2 0 0 | 2 0 1
	x[16] = x[7] * x[3]; // 4 1 0 | 2 0 0 | 2 1 0
	x[15] = x[6] * x[3]; // 5 0 0 | 2 0 0 | 3 0 0
	x[48] = x[33] * x[9]; // 0 5 1 | 0 3 0 | 0 2 1
	x[27] = x[9] * x[9]; // 0 6 0 | 0 3 0 | 0 3 0
	x[47] = x[32] * x[9]; // 1 4 1 | 0 3 0 | 1 1 1
	x[26] = x[8] * x[9]; // 1 5 0 | 0 3 0 | 1 2 0
	x[46] = x[32] * x[8]; // 2 3 1 | 1 2 0 | 1 1 1
	x[25] = x[7] * x[9]; // 2 4 0 | 0 3 0 | 2 1 0
	x[45] = x[32] * x[7]; // 3 2 1 | 2 1 0 | 1 1 1
	x[24] = x[7] * x[8]; // 3 3 0 | 1 2 0 | 2 1 0
	x[44] = x[32] * x[6]; // 4 1 1 | 3 0 0 | 1 1 1
	x[23] = x[7] * x[7]; // 4 2 0 | 2 1 0 | 2 1 0
	x[43] = x[31] * x[6]; // 5 0 1 | 3 0 0 | 2 0 1
	x[22] = x[7] * x[6]; // 5 1 0 | 3 0 0 | 2 1 0
	x[21] = x[6] * x[6]; // 6 0 0 | 3 0 0 | 3 0 0
	D[0] = x[0];
	D[28] = x[28];
	D[49] = T(3.0000000000000000e+00) * x[49];
	D[2] = x[2];
	D[30] = T(3.0000000000000000e+00) * x[30];
	D[5] = T(3.0000000000000000e+00) * x[5];
	D[33] = T(1.5000000000000000e+01) * x[33];
	D[9] = T(1.5000000000000000e+01) * x[9];
	D[37] = T(1.0500000000000000e+02) * x[37];
	D[14] = T(1.0500000000000000e+02) * x[14];
	D[42] = T(9.4500000000000000e+02) * x[42];
	D[20] = T(9.4500000000000000e+02) * x[20];
	D[48] = T(1.0395000000000000e+04) * x[48];
	D[27] = T(1.0395000000000000e+04) * x[27];
	D[1] = x[1];
	D[29] = T(3.0000000000000000e+00) * x[29];
	D[4] = T(3.0000000000000000e+00) * x[4];
	D[32] = T(1.5000000000000000e+01) * x[32];
	D[8] = T(1.5000000000000000e+01) * x[8];
	D[36] = T(1.0500000000000000e+02) * x[36];
	D[13] = T(1.0500000000000000e+02) * x[13];
	D[41] = T(9.4500000000000000e+02) * x[41];
	D[19] = T(9.4500000000000000e+02) * x[19];
	D[47] = T(1.0395000000000000e+04) * x[47];
	D[26] = T(1.0395000000000000e+04) * x[26];
	D[3] = T(3.0000000000000000e+00) * x[3];
	D[31] = T(1.5000000000000000e+01) * x[31];
	D[7] = T(1.5000000000000000e+01) * x[7];
	D[35] = T(1.0500000000000000e+02) * x[35];
	D[12] = T(1.0500000000000000e+02) * x[12];
	D[40] = T(9.4500000000000000e+02) * x[40];
	D[18] = T(9.4500000000000000e+02) * x[18];
	D[46] = T(1.0395000000000000e+04) * x[46];
	D[25] = T(1.0395000000000000e+04) * x[25];
	D[6] = T(1.5000000000000000e+01) * x[6];
	D[34] = T(1.0500000000000000e+02) * x[34];
	D[11] = T(1.0500000000000000e+02) * x[11];
	D[39] = T(9.4500000000000000e+02) * x[39];
	D[17] = T(9.4500000000000000e+02) * x[17];
	D[45] = T(1.0395000000000000e+04) * x[45];
	D[24] = T(1.0395000000000000e+04) * x[24];
	D[10] = T(1.0500000000000000e+02) * x[10];
	D[38] = T(9.4500000000000000e+02) * x[38];
	D[16] = T(9.4500000000000000e+02) * x[16];
	D[44] = T(1.0395000000000000e+04) * x[44];
	D[23] = T(1.0395000000000000e+04) * x[23];
	D[15] = T(9.4500000000000000e+02) * x[15];
	D[43] = T(1.0395000000000000e+04) * x[43];
	D[22] = T(1.0395000000000000e+04) * x[22];
	D[21] = T(1.0395000000000000e+04) * x[21];
	D[49] -= x[0];
	D[46] = FMA(T(3.1500000000000000e+02), x[30], D[46]);
	D[5] -= x[0];
	D[25] = FMA(T(-5.6700000000000000e+03), x[12], D[25]);
	D[33] = FMA(T(-3.0000000000000000e+00), x[28], D[33]);
	D[25] = FMA(T(3.1500000000000000e+02), x[3], D[25]);
	D[9] = FMA(T(-9.0000000000000000e+00), x[2], D[9]);
	D[25] = FMA(T(-9.4500000000000000e+02), x[14], D[25]);
	D[37] = FMA(T(-4.5000000000000000e+01), x[30], D[37]);
	D[25] = FMA(T(6.3000000000000000e+02), x[5], D[25]);
	D[14] = FMA(T(-9.0000000000000000e+01), x[5], D[14]);
	D[25] = FMA(T(-4.5000000000000000e+01), x[0], D[25]);
	D[14] = FMA(T(9.0000000000000000e+00), x[0], D[14]);
	D[6] = FMA(T(-9.0000000000000000e+00), x[1], D[6]);
	D[42] = FMA(T(-6.3000000000000000e+02), x[33], D[42]);
	D[34] = FMA(T(-4.5000000000000000e+01), x[29], D[34]);
	D[42] = FMA(T(4.5000000000000000e+01), x[28], D[42]);
	D[11] = FMA(T(-4.5000000000000000e+01), x[4], D[11]);
	D[20] = FMA(T(-1.0500000000000000e+03), x[9], D[20]);
	D[39] = FMA(T(-3.1500000000000000e+02), x[32], D[39]);
	D[20] = FMA(T(2.2500000000000000e+02), x[2], D[20]);
	D[17] = FMA(T(-1.0500000000000000e+02), x[6], D[17]);
	D[48] = FMA(T(-9.4500000000000000e+03), x[37], D[48]);
	D[17] = FMA(T(-3.1500000000000000e+02), x[8], D[17]);
	D[48] = FMA(T(1.5750000000000000e+03), x[30], D[48]);
	D[17] = FMA(T(4.5000000000000000e+01), x[1], D[17]);
	D[27] = FMA(T(-1.4175000000000000e+04), x[14], D[27]);
	D[45] = FMA(T(-9.4500000000000000e+02), x[34], D[45]);
	D[27] = FMA(T(4.7250000000000000e+03), x[5], D[27]);
	D[45] = FMA(T(-2.8350000000000000e+03), x[36], D[45]);
	D[27] = FMA(T(-2.2500000000000000e+02), x[0], D[27]);
	D[45] = FMA(T(3.1500000000000000e+02), x[29], D[45]);
	D[8] = FMA(T(-3.0000000000000000e+00), x[1], D[8]);
	D[24] = FMA(T(-2.8350000000000000e+03), x[11], D[24]);
	D[36] = FMA(T(-1.5000000000000000e+01), x[29], D[36]);
	D[24] = FMA(T(-2.8350000000000000e+03), x[13], D[24]);
	D[13] = FMA(T(-4.5000000000000000e+01), x[4], D[13]);
	D[24] = FMA(T(9.4500000000000000e+02), x[4], D[24]);
	D[41] = FMA(T(-3.1500000000000000e+02), x[32], D[41]);
	D[10] = FMA(T(-9.0000000000000000e+01), x[3], D[10]);
	D[19] = FMA(T(-6.3000000000000000e+02), x[8], D[19]);
	D[10] = FMA(T(9.0000000000000000e+00), x[0], D[10]);
	D[19] = FMA(T(4.5000000000000000e+01), x[1], D[19]);
	D[38] = FMA(T(-6.3000000000000000e+02), x[31], D[38]);
	D[47] = FMA(T(-5.6700000000000000e+03), x[36], D[47]);
	D[38] = FMA(T(4.5000000000000000e+01), x[28], D[38]);
	D[47] = FMA(T(3.1500000000000000e+02), x[29], D[47]);
	D[16] = FMA(T(-6.3000000000000000e+02), x[7], D[16]);
	D[26] = FMA(T(-9.4500000000000000e+03), x[13], D[26]);
	D[16] = FMA(T(4.5000000000000000e+01), x[2], D[16]);
	D[26] = FMA(T(1.5750000000000000e+03), x[4], D[26]);
	D[44] = FMA(T(-5.6700000000000000e+03), x[35], D[44]);
	D[3] -= x[0];
	D[44] = FMA(T(3.1500000000000000e+02), x[30], D[44]);
	D[31] = FMA(T(-3.0000000000000000e+00), x[28], D[31]);
	D[23] = FMA(T(-9.4500000000000000e+02), x[10], D[23]);
	D[7] = FMA(T(-3.0000000000000000e+00), x[2], D[7]);
	D[23] = FMA(T(-5.6700000000000000e+03), x[12], D[23]);
	D[35] = FMA(T(-1.5000000000000000e+01), x[30], D[35]);
	D[23] = FMA(T(6.3000000000000000e+02), x[3], D[23]);
	D[12] = FMA(T(-1.5000000000000000e+01), x[3], D[12]);
	D[23] = FMA(T(3.1500000000000000e+02), x[5], D[23]);
	D[12] = FMA(T(-1.5000000000000000e+01), x[5], D[12]);
	D[23] = FMA(T(-4.5000000000000000e+01), x[0], D[23]);
	D[12] = FMA(T(3.0000000000000000e+00), x[0], D[12]);
	D[15] = FMA(T(-1.0500000000000000e+03), x[6], D[15]);
	D[40] = FMA(T(-1.0500000000000000e+02), x[31], D[40]);
	D[15] = FMA(T(2.2500000000000000e+02), x[1], D[15]);
	D[40] = FMA(T(-1.0500000000000000e+02), x[33], D[40]);
	D[43] = FMA(T(-9.4500000000000000e+03), x[34], D[43]);
	D[40] = FMA(T(1.5000000000000000e+01), x[28], D[40]);
	D[43] = FMA(T(1.5750000000000000e+03), x[29], D[43]);
	D[18] = FMA(T(-3.1500000000000000e+02), x[7], D[18]);
	D[22] = FMA(T(-9.4500000000000000e+03), x[11], D[22]);
	D[18] = FMA(T(-1.0500000000000000e+02), x[9], D[18]);
	D[22] = FMA(T(1.5750000000000000e+03), x[4], D[22]);
	D[18] = FMA(T(4.5000000000000000e+01), x[2], D[18]);
	D[21] = FMA(T(-1.4175000000000000e+04), x[10], D[21]);
	D[46] = FMA(T(-2.8350000000000000e+03), x[35], D[46]);
	D[21] = FMA(T(4.7250000000000000e+03), x[3], D[21]);
	D[46] = FMA(T(-9.4500000000000000e+02), x[37], D[46]);
	D[21] = FMA(T(-2.2500000000000000e+02), x[0], D[21]);
	D[0] *= rinv1;
	D[28] *= rinv2;
	D[49] *= rinv3;
	D[2] *= rinv2;
	D[30] *= rinv3;
	D[5] *= rinv3;
	D[33] *= rinv4;
	D[9] *= rinv4;
	D[37] *= rinv5;
	D[14] *= rinv5;
	D[42] *= rinv6;
	D[20] *= rinv6;
	D[48] *= rinv7;
	D[27] *= rinv7;
	D[1] *= rinv2;
	D[29] *= rinv3;
	D[4] *= rinv3;
	D[32] *= rinv4;
	D[8] *= rinv4;
	D[36] *= rinv5;
	D[13] *= rinv5;
	D[41] *= rinv6;
	D[19] *= rinv6;
	D[47] *= rinv7;
	D[26] *= rinv7;
	D[3] *= rinv3;
	D[31] *= rinv4;
	D[7] *= rinv4;
	D[35] *= rinv5;
	D[12] *= rinv5;
	D[40] *= rinv6;
	D[18] *= rinv6;
	D[46] *= rinv7;
	D[25] *= rinv7;
	D[6] *= rinv4;
	D[34] *= rinv5;
	D[11] *= rinv5;
	D[39] *= rinv6;
	D[17] *= rinv6;
	D[45] *= rinv7;
	D[24] *= rinv7;
	D[10] *= rinv5;
	D[38] *= rinv6;
	D[16] *= rinv6;
	D[44] *= rinv7;
	D[23] *= rinv7;
	D[15] *= rinv6;
	D[43] *= rinv7;
	D[22] *= rinv7;
	D[21] *= rinv7;
	return 259 + scale * NDIM;
}
template<class T>
CUDA_EXPORT
inline int greens_function(tensor_trless_sym<T, 8>& D, array<T, NDIM> X, bool scale = true) {
	if( scale ) {
		X[0] *= T(SCALE_FACTOR);
		X[1] *= T(SCALE_FACTOR);
		X[2] *= T(SCALE_FACTOR);
	}
	auto r2 = sqr(X[0], X[1], X[2]);
	r2 = sqr(X[0], X[1], X[2]);
	const T r = sqrt(r2);
	const T rinv1 = -(r > T(0)) / f_max(r, T(1e-20));
	const T rinv2 = -rinv1 * rinv1;
	const T rinv3 = -rinv2 * rinv1;
	const T rinv4 = -rinv2 * rinv2;
	const T rinv5 = -rinv3 * rinv2;
	const T rinv6 = -rinv3 * rinv3;
	const T rinv7 = -rinv4 * rinv3;
	const T rinv8 = -rinv4 * rinv4;
	X[0] *= rinv1;
	X[1] *= rinv1;
	X[2] *= rinv1;
	T x[65];
	x[0] = T(1);
	x[1] = X[0];
	x[2] = X[1];
	x[36] = X[2];
	x[64] = x[36] * x[36]; // 0 0 2 | 0 0 1 | 0 0 1
	x[38] = x[2] * x[36]; // 0 1 1 | 0 0 1 | 0 1 0
	x[5] = x[2] * x[2]; // 0 2 0 | 0 1 0 | 0 1 0
	x[37] = x[1] * x[36]; // 1 0 1 | 0 0 1 | 1 0 0
	x[4] = x[1] * x[2]; // 1 1 0 | 0 1 0 | 1 0 0
	x[3] = x[1] * x[1]; // 2 0 0 | 1 0 0 | 1 0 0
	x[41] = x[38] * x[2]; // 0 2 1 | 0 1 0 | 0 1 1
	x[9] = x[5] * x[2]; // 0 3 0 | 0 1 0 | 0 2 0
	x[40] = x[4] * x[36]; // 1 1 1 | 0 0 1 | 1 1 0
	x[8] = x[4] * x[2]; // 1 2 0 | 0 1 0 | 1 1 0
	x[39] = x[37] * x[1]; // 2 0 1 | 1 0 0 | 1 0 1
	x[7] = x[4] * x[1]; // 2 1 0 | 1 0 0 | 1 1 0
	x[6] = x[3] * x[1]; // 3 0 0 | 1 0 0 | 2 0 0
	x[45] = x[38] * x[5]; // 0 3 1 | 0 2 0 | 0 1 1
	x[14] = x[5] * x[5]; // 0 4 0 | 0 2 0 | 0 2 0
	x[44] = x[4] * x[38]; // 1 2 1 | 0 1 1 | 1 1 0
	x[13] = x[4] * x[5]; // 1 3 0 | 0 2 0 | 1 1 0
	x[43] = x[4] * x[37]; // 2 1 1 | 1 0 1 | 1 1 0
	x[12] = x[4] * x[4]; // 2 2 0 | 1 1 0 | 1 1 0
	x[42] = x[37] * x[3]; // 3 0 1 | 2 0 0 | 1 0 1
	x[11] = x[4] * x[3]; // 3 1 0 | 2 0 0 | 1 1 0
	x[10] = x[3] * x[3]; // 4 0 0 | 2 0 0 | 2 0 0
	x[50] = x[41] * x[5]; // 0 4 1 | 0 2 0 | 0 2 1
	x[20] = x[9] * x[5]; // 0 5 0 | 0 2 0 | 0 3 0
	x[49] = x[40] * x[5]; // 1 3 1 | 0 2 0 | 1 1 1
	x[19] = x[8] * x[5]; // 1 4 0 | 0 2 0 | 1 2 0
	x[48] = x[40] * x[4]; // 2 2 1 | 1 1 0 | 1 1 1
	x[18] = x[7] * x[5]; // 2 3 0 | 0 2 0 | 2 1 0
	x[47] = x[40] * x[3]; // 3 1 1 | 2 0 0 | 1 1 1
	x[17] = x[7] * x[4]; // 3 2 0 | 1 1 0 | 2 1 0
	x[46] = x[39] * x[3]; // 4 0 1 | 2 0 0 | 2 0 1
	x[16] = x[7] * x[3]; // 4 1 0 | 2 0 0 | 2 1 0
	x[15] = x[6] * x[3]; // 5 0 0 | 2 0 0 | 3 0 0
	x[56] = x[41] * x[9]; // 0 5 1 | 0 3 0 | 0 2 1
	x[27] = x[9] * x[9]; // 0 6 0 | 0 3 0 | 0 3 0
	x[55] = x[40] * x[9]; // 1 4 1 | 0 3 0 | 1 1 1
	x[26] = x[8] * x[9]; // 1 5 0 | 0 3 0 | 1 2 0
	x[54] = x[40] * x[8]; // 2 3 1 | 1 2 0 | 1 1 1
	x[25] = x[7] * x[9]; // 2 4 0 | 0 3 0 | 2 1 0
	x[53] = x[40] * x[7]; // 3 2 1 | 2 1 0 | 1 1 1
	x[24] = x[7] * x[8]; // 3 3 0 | 1 2 0 | 2 1 0
	x[52] = x[40] * x[6]; // 4 1 1 | 3 0 0 | 1 1 1
	x[23] = x[7] * x[7]; // 4 2 0 | 2 1 0 | 2 1 0
	x[51] = x[39] * x[6]; // 5 0 1 | 3 0 0 | 2 0 1
	x[22] = x[7] * x[6]; // 5 1 0 | 3 0 0 | 2 1 0
	x[21] = x[6] * x[6]; // 6 0 0 | 3 0 0 | 3 0 0
	x[63] = x[45] * x[9]; // 0 6 1 | 0 3 0 | 0 3 1
	x[35] = x[14] * x[9]; // 0 7 0 | 0 3 0 | 0 4 0
	x[62] = x[44] * x[9]; // 1 5 1 | 0 3 0 | 1 2 1
	x[34] = x[13] * x[9]; // 1 6 0 | 0 3 0 | 1 3 0
	x[61] = x[43] * x[9]; // 2 4 1 | 0 3 0 | 2 1 1
	x[33] = x[12] * x[9]; // 2 5 0 | 0 3 0 | 2 2 0
	x[60] = x[43] * x[8]; // 3 3 1 | 1 2 0 | 2 1 1
	x[32] = x[12] * x[8]; // 3 4 0 | 1 2 0 | 2 2 0
	x[59] = x[43] * x[7]; // 4 2 1 | 2 1 0 | 2 1 1
	x[31] = x[12] * x[7]; // 4 3 0 | 2 1 0 | 2 2 0
	x[58] = x[43] * x[6]; // 5 1 1 | 3 0 0 | 2 1 1
	x[30] = x[12] * x[6]; // 5 2 0 | 3 0 0 | 2 2 0
	x[57] = x[42] * x[6]; // 6 0 1 | 3 0 0 | 3 0 1
	x[29] = x[11] * x[6]; // 6 1 0 | 3 0 0 | 3 1 0
	x[28] = x[10] * x[6]; // 7 0 0 | 3 0 0 | 4 0 0
	D[0] = x[0];
	D[36] = x[36];
	D[64] = T(3.0000000000000000e+00) * x[64];
	D[2] = x[2];
	D[38] = T(3.0000000000000000e+00) * x[38];
	D[5] = T(3.0000000000000000e+00) * x[5];
	D[41] = T(1.5000000000000000e+01) * x[41];
	D[9] = T(1.5000000000000000e+01) * x[9];
	D[45] = T(1.0500000000000000e+02) * x[45];
	D[14] = T(1.0500000000000000e+02) * x[14];
	D[50] = T(9.4500000000000000e+02) * x[50];
	D[20] = T(9.4500000000000000e+02) * x[20];
	D[56] = T(1.0395000000000000e+04) * x[56];
	D[27] = T(1.0395000000000000e+04) * x[27];
	D[63] = T(1.3513500000000000e+05) * x[63];
	D[35] = T(1.3513500000000000e+05) * x[35];
	D[1] = x[1];
	D[37] = T(3.0000000000000000e+00) * x[37];
	D[4] = T(3.0000000000000000e+00) * x[4];
	D[40] = T(1.5000000000000000e+01) * x[40];
	D[8] = T(1.5000000000000000e+01) * x[8];
	D[44] = T(1.0500000000000000e+02) * x[44];
	D[13] = T(1.0500000000000000e+02) * x[13];
	D[49] = T(9.4500000000000000e+02) * x[49];
	D[19] = T(9.4500000000000000e+02) * x[19];
	D[55] = T(1.0395000000000000e+04) * x[55];
	D[26] = T(1.0395000000000000e+04) * x[26];
	D[62] = T(1.3513500000000000e+05) * x[62];
	D[34] = T(1.3513500000000000e+05) * x[34];
	D[3] = T(3.0000000000000000e+00) * x[3];
	D[39] = T(1.5000000000000000e+01) * x[39];
	D[7] = T(1.5000000000000000e+01) * x[7];
	D[43] = T(1.0500000000000000e+02) * x[43];
	D[12] = T(1.0500000000000000e+02) * x[12];
	D[48] = T(9.4500000000000000e+02) * x[48];
	D[18] = T(9.4500000000000000e+02) * x[18];
	D[54] = T(1.0395000000000000e+04) * x[54];
	D[25] = T(1.0395000000000000e+04) * x[25];
	D[61] = T(1.3513500000000000e+05) * x[61];
	D[33] = T(1.3513500000000000e+05) * x[33];
	D[6] = T(1.5000000000000000e+01) * x[6];
	D[42] = T(1.0500000000000000e+02) * x[42];
	D[11] = T(1.0500000000000000e+02) * x[11];
	D[47] = T(9.4500000000000000e+02) * x[47];
	D[17] = T(9.4500000000000000e+02) * x[17];
	D[53] = T(1.0395000000000000e+04) * x[53];
	D[24] = T(1.0395000000000000e+04) * x[24];
	D[60] = T(1.3513500000000000e+05) * x[60];
	D[32] = T(1.3513500000000000e+05) * x[32];
	D[10] = T(1.0500000000000000e+02) * x[10];
	D[46] = T(9.4500000000000000e+02) * x[46];
	D[16] = T(9.4500000000000000e+02) * x[16];
	D[52] = T(1.0395000000000000e+04) * x[52];
	D[23] = T(1.0395000000000000e+04) * x[23];
	D[59] = T(1.3513500000000000e+05) * x[59];
	D[31] = T(1.3513500000000000e+05) * x[31];
	D[15] = T(9.4500000000000000e+02) * x[15];
	D[51] = T(1.0395000000000000e+04) * x[51];
	D[22] = T(1.0395000000000000e+04) * x[22];
	D[58] = T(1.3513500000000000e+05) * x[58];
	D[30] = T(1.3513500000000000e+05) * x[30];
	D[21] = T(1.0395000000000000e+04) * x[21];
	D[57] = T(1.3513500000000000e+05) * x[57];
	D[29] = T(1.3513500000000000e+05) * x[29];
	D[28] = T(1.3513500000000000e+05) * x[28];
	D[64] -= x[0];
	D[42] = FMA(T(-4.5000000000000000e+01), x[37], D[42]);
	D[5] -= x[0];
	D[11] = FMA(T(-4.5000000000000000e+01), x[4], D[11]);
	D[41] = FMA(T(-3.0000000000000000e+00), x[36], D[41]);
	D[47] = FMA(T(-3.1500000000000000e+02), x[40], D[47]);
	D[9] = FMA(T(-9.0000000000000000e+00), x[2], D[9]);
	D[17] = FMA(T(-1.0500000000000000e+02), x[6], D[17]);
	D[45] = FMA(T(-4.5000000000000000e+01), x[38], D[45]);
	D[17] = FMA(T(-3.1500000000000000e+02), x[8], D[17]);
	D[14] = FMA(T(-9.0000000000000000e+01), x[5], D[14]);
	D[17] = FMA(T(4.5000000000000000e+01), x[1], D[17]);
	D[14] = FMA(T(9.0000000000000000e+00), x[0], D[14]);
	D[53] = FMA(T(-9.4500000000000000e+02), x[42], D[53]);
	D[50] = FMA(T(-6.3000000000000000e+02), x[41], D[50]);
	D[53] = FMA(T(-2.8350000000000000e+03), x[44], D[53]);
	D[50] = FMA(T(4.5000000000000000e+01), x[36], D[50]);
	D[53] = FMA(T(3.1500000000000000e+02), x[37], D[53]);
	D[20] = FMA(T(-1.0500000000000000e+03), x[9], D[20]);
	D[24] = FMA(T(-2.8350000000000000e+03), x[11], D[24]);
	D[20] = FMA(T(2.2500000000000000e+02), x[2], D[20]);
	D[24] = FMA(T(-2.8350000000000000e+03), x[13], D[24]);
	D[56] = FMA(T(-9.4500000000000000e+03), x[45], D[56]);
	D[24] = FMA(T(9.4500000000000000e+02), x[4], D[24]);
	D[56] = FMA(T(1.5750000000000000e+03), x[38], D[56]);
	D[60] = FMA(T(-3.1185000000000000e+04), x[47], D[60]);
	D[27] = FMA(T(-1.4175000000000000e+04), x[14], D[27]);
	D[60] = FMA(T(-3.1185000000000000e+04), x[49], D[60]);
	D[27] = FMA(T(4.7250000000000000e+03), x[5], D[27]);
	D[60] = FMA(T(8.5050000000000000e+03), x[40], D[60]);
	D[27] = FMA(T(-2.2500000000000000e+02), x[0], D[27]);
	D[32] = FMA(T(-6.2370000000000000e+04), x[17], D[32]);
	D[63] = FMA(T(-1.5592500000000000e+05), x[50], D[63]);
	D[32] = FMA(T(2.8350000000000000e+03), x[6], D[32]);
	D[63] = FMA(T(4.2525000000000000e+04), x[41], D[63]);
	D[32] = FMA(T(-3.1185000000000000e+04), x[19], D[32]);
	D[63] = FMA(T(-1.5750000000000000e+03), x[36], D[63]);
	D[32] = FMA(T(1.7010000000000000e+04), x[8], D[32]);
	D[35] = FMA(T(-2.1829500000000000e+05), x[20], D[35]);
	D[32] = FMA(T(-9.4500000000000000e+02), x[1], D[32]);
	D[35] = FMA(T(9.9225000000000000e+04), x[9], D[35]);
	D[10] = FMA(T(-9.0000000000000000e+01), x[3], D[10]);
	D[35] = FMA(T(-1.1025000000000000e+04), x[2], D[35]);
	D[10] = FMA(T(9.0000000000000000e+00), x[0], D[10]);
	D[8] = FMA(T(-3.0000000000000000e+00), x[1], D[8]);
	D[46] = FMA(T(-6.3000000000000000e+02), x[39], D[46]);
	D[44] = FMA(T(-1.5000000000000000e+01), x[37], D[44]);
	D[46] = FMA(T(4.5000000000000000e+01), x[36], D[46]);
	D[13] = FMA(T(-4.5000000000000000e+01), x[4], D[13]);
	D[16] = FMA(T(-6.3000000000000000e+02), x[7], D[16]);
	D[49] = FMA(T(-3.1500000000000000e+02), x[40], D[49]);
	D[16] = FMA(T(4.5000000000000000e+01), x[2], D[16]);
	D[19] = FMA(T(-6.3000000000000000e+02), x[8], D[19]);
	D[52] = FMA(T(-5.6700000000000000e+03), x[43], D[52]);
	D[19] = FMA(T(4.5000000000000000e+01), x[1], D[19]);
	D[52] = FMA(T(3.1500000000000000e+02), x[38], D[52]);
	D[55] = FMA(T(-5.6700000000000000e+03), x[44], D[55]);
	D[23] = FMA(T(-9.4500000000000000e+02), x[10], D[23]);
	D[55] = FMA(T(3.1500000000000000e+02), x[37], D[55]);
	D[23] = FMA(T(-5.6700000000000000e+03), x[12], D[23]);
	D[26] = FMA(T(-9.4500000000000000e+03), x[13], D[26]);
	D[23] = FMA(T(6.3000000000000000e+02), x[3], D[23]);
	D[26] = FMA(T(1.5750000000000000e+03), x[4], D[26]);
	D[23] = FMA(T(3.1500000000000000e+02), x[5], D[23]);
	D[62] = FMA(T(-1.0395000000000000e+05), x[49], D[62]);
	D[23] = FMA(T(-4.5000000000000000e+01), x[0], D[23]);
	D[62] = FMA(T(1.4175000000000000e+04), x[40], D[62]);
	D[59] = FMA(T(-1.0395000000000000e+04), x[46], D[59]);
	D[34] = FMA(T(-1.5592500000000000e+05), x[19], D[34]);
	D[59] = FMA(T(-6.2370000000000000e+04), x[48], D[59]);
	D[34] = FMA(T(4.2525000000000000e+04), x[8], D[34]);
	D[59] = FMA(T(5.6700000000000000e+03), x[39], D[59]);
	D[34] = FMA(T(-1.5750000000000000e+03), x[1], D[34]);
	D[59] = FMA(T(2.8350000000000000e+03), x[41], D[59]);
	D[3] -= x[0];
	D[59] = FMA(T(-3.1500000000000000e+02), x[36], D[59]);
	D[39] = FMA(T(-3.0000000000000000e+00), x[36], D[39]);
	D[31] = FMA(T(-3.1185000000000000e+04), x[16], D[31]);
	D[7] = FMA(T(-3.0000000000000000e+00), x[2], D[7]);
	D[31] = FMA(T(-6.2370000000000000e+04), x[18], D[31]);
	D[43] = FMA(T(-1.5000000000000000e+01), x[38], D[43]);
	D[31] = FMA(T(1.7010000000000000e+04), x[7], D[31]);
	D[12] = FMA(T(-1.5000000000000000e+01), x[3], D[12]);
	D[31] = FMA(T(2.8350000000000000e+03), x[9], D[31]);
	D[12] = FMA(T(-1.5000000000000000e+01), x[5], D[12]);
	D[31] = FMA(T(-9.4500000000000000e+02), x[2], D[31]);
	D[12] = FMA(T(3.0000000000000000e+00), x[0], D[12]);
	D[15] = FMA(T(-1.0500000000000000e+03), x[6], D[15]);
	D[48] = FMA(T(-1.0500000000000000e+02), x[39], D[48]);
	D[15] = FMA(T(2.2500000000000000e+02), x[1], D[15]);
	D[48] = FMA(T(-1.0500000000000000e+02), x[41], D[48]);
	D[51] = FMA(T(-9.4500000000000000e+03), x[42], D[51]);
	D[48] = FMA(T(1.5000000000000000e+01), x[36], D[48]);
	D[51] = FMA(T(1.5750000000000000e+03), x[37], D[51]);
	D[18] = FMA(T(-3.1500000000000000e+02), x[7], D[18]);
	D[22] = FMA(T(-9.4500000000000000e+03), x[11], D[22]);
	D[18] = FMA(T(-1.0500000000000000e+02), x[9], D[18]);
	D[22] = FMA(T(1.5750000000000000e+03), x[4], D[22]);
	D[18] = FMA(T(4.5000000000000000e+01), x[2], D[18]);
	D[58] = FMA(T(-1.0395000000000000e+05), x[47], D[58]);
	D[54] = FMA(T(-2.8350000000000000e+03), x[43], D[54]);
	D[58] = FMA(T(1.4175000000000000e+04), x[40], D[58]);
	D[54] = FMA(T(-9.4500000000000000e+02), x[45], D[54]);
	D[30] = FMA(T(-1.0395000000000000e+04), x[15], D[30]);
	D[54] = FMA(T(3.1500000000000000e+02), x[38], D[54]);
	D[30] = FMA(T(-1.0395000000000000e+05), x[17], D[30]);
	D[25] = FMA(T(-5.6700000000000000e+03), x[12], D[25]);
	D[30] = FMA(T(9.4500000000000000e+03), x[6], D[30]);
	D[25] = FMA(T(3.1500000000000000e+02), x[3], D[25]);
	D[30] = FMA(T(1.4175000000000000e+04), x[8], D[30]);
	D[25] = FMA(T(-9.4500000000000000e+02), x[14], D[25]);
	D[30] = FMA(T(-1.5750000000000000e+03), x[1], D[30]);
	D[25] = FMA(T(6.3000000000000000e+02), x[5], D[25]);
	D[21] = FMA(T(-1.4175000000000000e+04), x[10], D[21]);
	D[25] = FMA(T(-4.5000000000000000e+01), x[0], D[25]);
	D[21] = FMA(T(4.7250000000000000e+03), x[3], D[21]);
	D[61] = FMA(T(-6.2370000000000000e+04), x[48], D[61]);
	D[21] = FMA(T(-2.2500000000000000e+02), x[0], D[21]);
	D[61] = FMA(T(2.8350000000000000e+03), x[39], D[61]);
	D[57] = FMA(T(-1.5592500000000000e+05), x[46], D[57]);
	D[61] = FMA(T(-1.0395000000000000e+04), x[50], D[61]);
	D[57] = FMA(T(4.2525000000000000e+04), x[39], D[57]);
	D[61] = FMA(T(5.6700000000000000e+03), x[41], D[61]);
	D[57] = FMA(T(-1.5750000000000000e+03), x[36], D[57]);
	D[61] = FMA(T(-3.1500000000000000e+02), x[36], D[61]);
	D[29] = FMA(T(-1.5592500000000000e+05), x[16], D[29]);
	D[33] = FMA(T(-1.0395000000000000e+05), x[18], D[33]);
	D[29] = FMA(T(4.2525000000000000e+04), x[7], D[29]);
	D[33] = FMA(T(1.4175000000000000e+04), x[7], D[33]);
	D[29] = FMA(T(-1.5750000000000000e+03), x[2], D[29]);
	D[33] = FMA(T(-1.0395000000000000e+04), x[20], D[33]);
	D[28] = FMA(T(-2.1829500000000000e+05), x[15], D[28]);
	D[33] = FMA(T(9.4500000000000000e+03), x[9], D[33]);
	D[28] = FMA(T(9.9225000000000000e+04), x[6], D[28]);
	D[33] = FMA(T(-1.5750000000000000e+03), x[2], D[33]);
	D[28] = FMA(T(-1.1025000000000000e+04), x[1], D[28]);
	D[6] = FMA(T(-9.0000000000000000e+00), x[1], D[6]);
	D[0] *= rinv1;
	D[36] *= rinv2;
	D[64] *= rinv3;
	D[2] *= rinv2;
	D[38] *= rinv3;
	D[5] *= rinv3;
	D[41] *= rinv4;
	D[9] *= rinv4;
	D[45] *= rinv5;
	D[14] *= rinv5;
	D[50] *= rinv6;
	D[20] *= rinv6;
	D[56] *= rinv7;
	D[27] *= rinv7;
	D[63] *= rinv8;
	D[35] *= rinv8;
	D[1] *= rinv2;
	D[37] *= rinv3;
	D[4] *= rinv3;
	D[40] *= rinv4;
	D[8] *= rinv4;
	D[44] *= rinv5;
	D[13] *= rinv5;
	D[49] *= rinv6;
	D[19] *= rinv6;
	D[55] *= rinv7;
	D[26] *= rinv7;
	D[62] *= rinv8;
	D[34] *= rinv8;
	D[3] *= rinv3;
	D[39] *= rinv4;
	D[7] *= rinv4;
	D[43] *= rinv5;
	D[12] *= rinv5;
	D[48] *= rinv6;
	D[18] *= rinv6;
	D[54] *= rinv7;
	D[25] *= rinv7;
	D[61] *= rinv8;
	D[33] *= rinv8;
	D[6] *= rinv4;
	D[42] *= rinv5;
	D[11] *= rinv5;
	D[47] *= rinv6;
	D[17] *= rinv6;
	D[53] *= rinv7;
	D[24] *= rinv7;
	D[60] *= rinv8;
	D[32] *= rinv8;
	D[10] *= rinv5;
	D[46] *= rinv6;
	D[16] *= rinv6;
	D[52] *= rinv7;
	D[23] *= rinv7;
	D[59] *= rinv8;
	D[31] *= rinv8;
	D[15] *= rinv6;
	D[51] *= rinv7;
	D[22] *= rinv7;
	D[58] *= rinv8;
	D[30] *= rinv8;
	D[21] *= rinv7;
	D[57] *= rinv8;
	D[29] *= rinv8;
	D[28] *= rinv8;
	return 361 + scale * NDIM;
}
template<class T>
CUDA_EXPORT
#ifdef __CUDACC__
__noinline__
#endif
tensor_trless_sym<T, 7> L2L(const tensor_trless_sym<T, 7>& La, array<T,NDIM> X, bool do_phi) {
	X[0] *= T(SCALE_FACTOR);
	X[1] *= T(SCALE_FACTOR);
	X[2] *= T(SCALE_FACTOR);
	tensor_trless_sym<T, 7> Lb;
	T x[84];
	x[0] = T(1);
	x[1] = X[0];
	x[2] = X[1];
	x[3] = X[2];
	x[9] = x[3] * x[3]; // 0 0 2 | 0 0 1 | 0 0 1
	x[8] = x[2] * x[3]; // 0 1 1 | 0 0 1 | 0 1 0
	x[7] = x[2] * x[2]; // 0 2 0 | 0 1 0 | 0 1 0
	x[6] = x[1] * x[3]; // 1 0 1 | 0 0 1 | 1 0 0
	x[5] = x[1] * x[2]; // 1 1 0 | 0 1 0 | 1 0 0
	x[4] = x[1] * x[1]; // 2 0 0 | 1 0 0 | 1 0 0
	x[19] = x[9] * x[3]; // 0 0 3 | 0 0 1 | 0 0 2
	x[18] = x[8] * x[3]; // 0 1 2 | 0 0 1 | 0 1 1
	x[17] = x[8] * x[2]; // 0 2 1 | 0 1 0 | 0 1 1
	x[16] = x[7] * x[2]; // 0 3 0 | 0 1 0 | 0 2 0
	x[15] = x[6] * x[3]; // 1 0 2 | 0 0 1 | 1 0 1
	x[14] = x[5] * x[3]; // 1 1 1 | 0 0 1 | 1 1 0
	x[13] = x[5] * x[2]; // 1 2 0 | 0 1 0 | 1 1 0
	x[12] = x[6] * x[1]; // 2 0 1 | 1 0 0 | 1 0 1
	x[11] = x[5] * x[1]; // 2 1 0 | 1 0 0 | 1 1 0
	x[10] = x[4] * x[1]; // 3 0 0 | 1 0 0 | 2 0 0
	x[34] = x[9] * x[9]; // 0 0 4 | 0 0 2 | 0 0 2
	x[33] = x[8] * x[9]; // 0 1 3 | 0 0 2 | 0 1 1
	x[32] = x[8] * x[8]; // 0 2 2 | 0 1 1 | 0 1 1
	x[31] = x[8] * x[7]; // 0 3 1 | 0 2 0 | 0 1 1
	x[30] = x[7] * x[7]; // 0 4 0 | 0 2 0 | 0 2 0
	x[29] = x[6] * x[9]; // 1 0 3 | 0 0 2 | 1 0 1
	x[28] = x[5] * x[9]; // 1 1 2 | 0 0 2 | 1 1 0
	x[27] = x[5] * x[8]; // 1 2 1 | 0 1 1 | 1 1 0
	x[26] = x[5] * x[7]; // 1 3 0 | 0 2 0 | 1 1 0
	x[25] = x[6] * x[6]; // 2 0 2 | 1 0 1 | 1 0 1
	x[24] = x[5] * x[6]; // 2 1 1 | 1 0 1 | 1 1 0
	x[23] = x[5] * x[5]; // 2 2 0 | 1 1 0 | 1 1 0
	x[22] = x[6] * x[4]; // 3 0 1 | 2 0 0 | 1 0 1
	x[21] = x[5] * x[4]; // 3 1 0 | 2 0 0 | 1 1 0
	x[20] = x[4] * x[4]; // 4 0 0 | 2 0 0 | 2 0 0
	x[55] = x[19] * x[9]; // 0 0 5 | 0 0 2 | 0 0 3
	x[54] = x[18] * x[9]; // 0 1 4 | 0 0 2 | 0 1 2
	x[53] = x[17] * x[9]; // 0 2 3 | 0 0 2 | 0 2 1
	x[52] = x[17] * x[8]; // 0 3 2 | 0 1 1 | 0 2 1
	x[51] = x[17] * x[7]; // 0 4 1 | 0 2 0 | 0 2 1
	x[50] = x[16] * x[7]; // 0 5 0 | 0 2 0 | 0 3 0
	x[49] = x[15] * x[9]; // 1 0 4 | 0 0 2 | 1 0 2
	x[48] = x[14] * x[9]; // 1 1 3 | 0 0 2 | 1 1 1
	x[47] = x[14] * x[8]; // 1 2 2 | 0 1 1 | 1 1 1
	x[46] = x[14] * x[7]; // 1 3 1 | 0 2 0 | 1 1 1
	x[45] = x[13] * x[7]; // 1 4 0 | 0 2 0 | 1 2 0
	x[44] = x[12] * x[9]; // 2 0 3 | 0 0 2 | 2 0 1
	x[43] = x[14] * x[6]; // 2 1 2 | 1 0 1 | 1 1 1
	x[42] = x[14] * x[5]; // 2 2 1 | 1 1 0 | 1 1 1
	x[41] = x[11] * x[7]; // 2 3 0 | 0 2 0 | 2 1 0
	x[40] = x[12] * x[6]; // 3 0 2 | 1 0 1 | 2 0 1
	x[39] = x[14] * x[4]; // 3 1 1 | 2 0 0 | 1 1 1
	x[38] = x[11] * x[5]; // 3 2 0 | 1 1 0 | 2 1 0
	x[37] = x[12] * x[4]; // 4 0 1 | 2 0 0 | 2 0 1
	x[36] = x[11] * x[4]; // 4 1 0 | 2 0 0 | 2 1 0
	x[35] = x[10] * x[4]; // 5 0 0 | 2 0 0 | 3 0 0
	x[83] = x[19] * x[19]; // 0 0 6 | 0 0 3 | 0 0 3
	x[82] = x[18] * x[19]; // 0 1 5 | 0 0 3 | 0 1 2
	x[81] = x[17] * x[19]; // 0 2 4 | 0 0 3 | 0 2 1
	x[80] = x[17] * x[18]; // 0 3 3 | 0 1 2 | 0 2 1
	x[79] = x[17] * x[17]; // 0 4 2 | 0 2 1 | 0 2 1
	x[78] = x[17] * x[16]; // 0 5 1 | 0 3 0 | 0 2 1
	x[77] = x[16] * x[16]; // 0 6 0 | 0 3 0 | 0 3 0
	x[76] = x[15] * x[19]; // 1 0 5 | 0 0 3 | 1 0 2
	x[75] = x[14] * x[19]; // 1 1 4 | 0 0 3 | 1 1 1
	x[74] = x[14] * x[18]; // 1 2 3 | 0 1 2 | 1 1 1
	x[73] = x[14] * x[17]; // 1 3 2 | 0 2 1 | 1 1 1
	x[72] = x[14] * x[16]; // 1 4 1 | 0 3 0 | 1 1 1
	x[71] = x[13] * x[16]; // 1 5 0 | 0 3 0 | 1 2 0
	x[70] = x[12] * x[19]; // 2 0 4 | 0 0 3 | 2 0 1
	x[69] = x[14] * x[15]; // 2 1 3 | 1 0 2 | 1 1 1
	x[68] = x[14] * x[14]; // 2 2 2 | 1 1 1 | 1 1 1
	x[67] = x[14] * x[13]; // 2 3 1 | 1 2 0 | 1 1 1
	x[66] = x[11] * x[16]; // 2 4 0 | 0 3 0 | 2 1 0
	x[65] = x[12] * x[15]; // 3 0 3 | 1 0 2 | 2 0 1
	x[64] = x[14] * x[12]; // 3 1 2 | 2 0 1 | 1 1 1
	x[63] = x[14] * x[11]; // 3 2 1 | 2 1 0 | 1 1 1
	x[62] = x[11] * x[13]; // 3 3 0 | 1 2 0 | 2 1 0
	x[61] = x[12] * x[12]; // 4 0 2 | 2 0 1 | 2 0 1
	x[60] = x[14] * x[10]; // 4 1 1 | 3 0 0 | 1 1 1
	x[59] = x[11] * x[11]; // 4 2 0 | 2 1 0 | 2 1 0
	x[58] = x[12] * x[10]; // 5 0 1 | 3 0 0 | 2 0 1
	x[57] = x[11] * x[10]; // 5 1 0 | 3 0 0 | 2 1 0
	x[56] = x[10] * x[10]; // 6 0 0 | 3 0 0 | 3 0 0
	const T La000 =  (La[0]);
	const T La001 =  (La[28]);
	const T La002 =  (La[49]);
	const T La003 = -(La[31]+(La[33]));
	const T La004 =  (La[10]+FMA(T(2),La[12],(La[14])));
	const T La005 =  (La[38]+FMA(T(2),La[40],(La[42])));
	const T La006 = -(La[21]+FMA(T(3),La[23],FMA(T(3),La[25],(La[27]))));
	const T La010 =  (La[2]);
	const T La011 =  (La[30]);
	const T La012 = -(La[7]+(La[9]));
	const T La013 = -(La[35]+(La[37]));
	const T La014 =  (La[16]+FMA(T(2),La[18],(La[20])));
	const T La015 =  (La[44]+FMA(T(2),La[46],(La[48])));
	const T La020 =  (La[5]);
	const T La021 =  (La[33]);
	const T La022 = -(La[12]+(La[14]));
	const T La023 = -(La[40]+(La[42]));
	const T La024 =  (La[23]+FMA(T(2),La[25],(La[27])));
	const T La030 =  (La[9]);
	const T La031 =  (La[37]);
	const T La032 = -(La[18]+(La[20]));
	const T La033 = -(La[46]+(La[48]));
	const T La040 =  (La[14]);
	const T La041 =  (La[42]);
	const T La042 = -(La[25]+(La[27]));
	const T La050 =  (La[20]);
	const T La051 =  (La[48]);
	const T La060 =  (La[27]);
	const T La100 =  (La[1]);
	const T La101 =  (La[29]);
	const T La102 = -(La[6]+(La[8]));
	const T La103 = -(La[34]+(La[36]));
	const T La104 =  (La[15]+FMA(T(2),La[17],(La[19])));
	const T La105 =  (La[43]+FMA(T(2),La[45],(La[47])));
	const T La110 =  (La[4]);
	const T La111 =  (La[32]);
	const T La112 = -(La[11]+(La[13]));
	const T La113 = -(La[39]+(La[41]));
	const T La114 =  (La[22]+FMA(T(2),La[24],(La[26])));
	const T La120 =  (La[8]);
	const T La121 =  (La[36]);
	const T La122 = -(La[17]+(La[19]));
	const T La123 = -(La[45]+(La[47]));
	const T La130 =  (La[13]);
	const T La131 =  (La[41]);
	const T La132 = -(La[24]+(La[26]));
	const T La140 =  (La[19]);
	const T La141 =  (La[47]);
	const T La150 =  (La[26]);
	const T La200 =  (La[3]);
	const T La201 =  (La[31]);
	const T La202 = -(La[10]+(La[12]));
	const T La203 = -(La[38]+(La[40]));
	const T La204 =  (La[21]+FMA(T(2),La[23],(La[25])));
	const T La210 =  (La[7]);
	const T La211 =  (La[35]);
	const T La212 = -(La[16]+(La[18]));
	const T La213 = -(La[44]+(La[46]));
	const T La220 =  (La[12]);
	const T La221 =  (La[40]);
	const T La222 = -(La[23]+(La[25]));
	const T La230 =  (La[18]);
	const T La231 =  (La[46]);
	const T La240 =  (La[25]);
	const T La300 =  (La[6]);
	const T La301 =  (La[34]);
	const T La302 = -(La[15]+(La[17]));
	const T La303 = -(La[43]+(La[45]));
	const T La310 =  (La[11]);
	const T La311 =  (La[39]);
	const T La312 = -(La[22]+(La[24]));
	const T La320 =  (La[17]);
	const T La321 =  (La[45]);
	const T La330 =  (La[24]);
	const T La400 =  (La[10]);
	const T La401 =  (La[38]);
	const T La402 = -(La[21]+(La[23]));
	const T La410 =  (La[16]);
	const T La411 =  (La[44]);
	const T La420 =  (La[23]);
	const T La500 =  (La[15]);
	const T La501 =  (La[43]);
	const T La510 =  (La[22]);
	const T La600 =  (La[21]);
	Lb = La;
	if( do_phi ) {
		Lb[0] *= T(7.2000000000000000e+02);
		Lb[0] = FMA( x[56], La600, Lb[0]);
		Lb[0] = FMA( x[77], La060, Lb[0]);
		Lb[0] = FMA( x[83], La006, Lb[0]);
		Lb[0] *= T(1.6666666666666669e-01);
		Lb[0] = FMA( x[78], La051, Lb[0]);
		Lb[0] = FMA( x[50], La050, Lb[0]);
		Lb[0] = FMA( x[76], La105, Lb[0]);
		Lb[0] = FMA( x[82], La015, Lb[0]);
		Lb[0] = FMA( x[71], La150, Lb[0]);
		Lb[0] = FMA( x[35], La500, Lb[0]);
		Lb[0] = FMA( x[58], La501, Lb[0]);
		Lb[0] = FMA( x[57], La510, Lb[0]);
		Lb[0] = FMA( x[55], La005, Lb[0]);
		Lb[0] *= T(4.0000000000000002e-01);
		Lb[0] = FMA( x[59], La420, Lb[0]);
		Lb[0] = FMA( x[61], La402, Lb[0]);
		Lb[0] = FMA( x[70], La204, Lb[0]);
		Lb[0] = FMA( x[81], La024, Lb[0]);
		Lb[0] = FMA( x[79], La042, Lb[0]);
		Lb[0] = FMA( x[66], La240, Lb[0]);
		Lb[0] *= T(7.5000000000000000e-01);
		Lb[0] = FMA( x[62], La330, Lb[0]);
		Lb[0] = FMA( x[80], La033, Lb[0]);
		Lb[0] = FMA( x[65], La303, Lb[0]);
		Lb[0] *= T(6.6666666666666663e-01);
		Lb[0] = FMA( x[30], La040, Lb[0]);
		Lb[0] = FMA( x[45], La140, Lb[0]);
		Lb[0] = FMA( x[49], La104, Lb[0]);
		Lb[0] = FMA( x[75], La114, Lb[0]);
		Lb[0] = FMA( x[72], La141, Lb[0]);
		Lb[0] = FMA( x[34], La004, Lb[0]);
		Lb[0] = FMA( x[60], La411, Lb[0]);
		Lb[0] = FMA( x[54], La014, Lb[0]);
		Lb[0] = FMA( x[20], La400, Lb[0]);
		Lb[0] = FMA( x[36], La410, Lb[0]);
		Lb[0] = FMA( x[51], La041, Lb[0]);
		Lb[0] = FMA( x[37], La401, Lb[0]);
		Lb[0] *= T(5.0000000000000000e-01);
		Lb[0] = FMA( x[41], La230, Lb[0]);
		Lb[0] = FMA( x[73], La132, Lb[0]);
		Lb[0] = FMA( x[44], La203, Lb[0]);
		Lb[0] = FMA( x[69], La213, Lb[0]);
		Lb[0] = FMA( x[67], La231, Lb[0]);
		Lb[0] = FMA( x[63], La321, Lb[0]);
		Lb[0] = FMA( x[38], La320, Lb[0]);
		Lb[0] = FMA( x[40], La302, Lb[0]);
		Lb[0] = FMA( x[74], La123, Lb[0]);
		Lb[0] = FMA( x[64], La312, Lb[0]);
		Lb[0] = FMA( x[53], La023, Lb[0]);
		Lb[0] = FMA( x[52], La032, Lb[0]);
		Lb[0] *= T(6.6666666666666663e-01);
		Lb[0] = FMA( x[68], La222, Lb[0]);
		Lb[0] *= T(7.5000000000000000e-01);
		Lb[0] = FMA( x[26], La130, Lb[0]);
		Lb[0] = FMA( x[19], La003, Lb[0]);
		Lb[0] = FMA( x[33], La013, Lb[0]);
		Lb[0] = FMA( x[16], La030, Lb[0]);
		Lb[0] = FMA( x[31], La031, Lb[0]);
		Lb[0] = FMA( x[39], La311, Lb[0]);
		Lb[0] = FMA( x[21], La310, Lb[0]);
		Lb[0] = FMA( x[22], La301, Lb[0]);
		Lb[0] = FMA( x[10], La300, Lb[0]);
		Lb[0] = FMA( x[29], La103, Lb[0]);
		Lb[0] = FMA( x[46], La131, Lb[0]);
		Lb[0] = FMA( x[48], La113, Lb[0]);
		Lb[0] *= T(6.6666666666666663e-01);
		Lb[0] = FMA( x[23], La220, Lb[0]);
		Lb[0] = FMA( x[42], La221, Lb[0]);
		Lb[0] = FMA( x[43], La212, Lb[0]);
		Lb[0] = FMA( x[32], La022, Lb[0]);
		Lb[0] = FMA( x[47], La122, Lb[0]);
		Lb[0] = FMA( x[25], La202, Lb[0]);
		Lb[0] *= T(5.0000000000000000e-01);
		Lb[0] = FMA( x[9], La002, Lb[0]);
		Lb[0] = FMA( x[28], La112, Lb[0]);
		Lb[0] = FMA( x[18], La012, Lb[0]);
		Lb[0] = FMA( x[7], La020, Lb[0]);
		Lb[0] = FMA( x[17], La021, Lb[0]);
		Lb[0] = FMA( x[27], La121, Lb[0]);
		Lb[0] = FMA( x[4], La200, Lb[0]);
		Lb[0] = FMA( x[12], La201, Lb[0]);
		Lb[0] = FMA( x[13], La120, Lb[0]);
		Lb[0] = FMA( x[15], La102, Lb[0]);
		Lb[0] = FMA( x[11], La210, Lb[0]);
		Lb[0] = FMA( x[24], La211, Lb[0]);
		Lb[0] *= T(5.0000000000000000e-01);
		Lb[0] = FMA( x[1], La100, Lb[0]);
		Lb[0] = FMA( x[6], La101, Lb[0]);
		Lb[0] = FMA( x[3], La001, Lb[0]);
		Lb[0] = FMA( x[8], La011, Lb[0]);
		Lb[0] = FMA( x[2], La010, Lb[0]);
		Lb[0] = FMA( x[5], La110, Lb[0]);
		Lb[0] = FMA( x[14], La111, Lb[0]);
	}
	Lb[1] *= T(1.2000000000000000e+02);
	Lb[1] = FMA( x[35], La600, Lb[1]);
	Lb[1] = FMA( x[50], La150, Lb[1]);
	Lb[1] = FMA( x[55], La105, Lb[1]);
	Lb[1] *= T(2.0000000000000001e-01);
	Lb[1] = FMA( x[36], La510, Lb[1]);
	Lb[1] = FMA( x[37], La501, Lb[1]);
	Lb[1] = FMA( x[20], La500, Lb[1]);
	Lb[1] = FMA( x[45], La240, Lb[1]);
	Lb[1] = FMA( x[54], La114, Lb[1]);
	Lb[1] = FMA( x[49], La204, Lb[1]);
	Lb[1] = FMA( x[34], La104, Lb[1]);
	Lb[1] = FMA( x[51], La141, Lb[1]);
	Lb[1] = FMA( x[30], La140, Lb[1]);
	Lb[1] *= T(5.0000000000000000e-01);
	Lb[1] = FMA( x[40], La402, Lb[1]);
	Lb[1] = FMA( x[44], La303, Lb[1]);
	Lb[1] = FMA( x[41], La330, Lb[1]);
	Lb[1] = FMA( x[52], La132, Lb[1]);
	Lb[1] = FMA( x[53], La123, Lb[1]);
	Lb[1] = FMA( x[38], La420, Lb[1]);
	Lb[1] *= T(5.0000000000000000e-01);
	Lb[1] = FMA( x[16], La130, Lb[1]);
	Lb[1] = FMA( x[19], La103, Lb[1]);
	Lb[1] = FMA( x[33], La113, Lb[1]);
	Lb[1] = FMA( x[46], La231, Lb[1]);
	Lb[1] = FMA( x[26], La230, Lb[1]);
	Lb[1] = FMA( x[48], La213, Lb[1]);
	Lb[1] = FMA( x[10], La400, Lb[1]);
	Lb[1] = FMA( x[39], La411, Lb[1]);
	Lb[1] = FMA( x[29], La203, Lb[1]);
	Lb[1] = FMA( x[22], La401, Lb[1]);
	Lb[1] = FMA( x[21], La410, Lb[1]);
	Lb[1] = FMA( x[31], La131, Lb[1]);
	Lb[1] *= T(6.6666666666666663e-01);
	Lb[1] = FMA( x[42], La321, Lb[1]);
	Lb[1] = FMA( x[23], La320, Lb[1]);
	Lb[1] = FMA( x[43], La312, Lb[1]);
	Lb[1] = FMA( x[47], La222, Lb[1]);
	Lb[1] = FMA( x[32], La122, Lb[1]);
	Lb[1] = FMA( x[25], La302, Lb[1]);
	Lb[1] *= T(5.0000000000000000e-01);
	Lb[1] = FMA( x[28], La212, Lb[1]);
	Lb[1] = FMA( x[24], La311, Lb[1]);
	Lb[1] = FMA( x[11], La310, Lb[1]);
	Lb[1] = FMA( x[12], La301, Lb[1]);
	Lb[1] = FMA( x[4], La300, Lb[1]);
	Lb[1] = FMA( x[27], La221, Lb[1]);
	Lb[1] = FMA( x[13], La220, Lb[1]);
	Lb[1] = FMA( x[15], La202, Lb[1]);
	Lb[1] = FMA( x[17], La121, Lb[1]);
	Lb[1] = FMA( x[7], La120, Lb[1]);
	Lb[1] = FMA( x[18], La112, Lb[1]);
	Lb[1] = FMA( x[9], La102, Lb[1]);
	Lb[1] *= T(5.0000000000000000e-01);
	Lb[1] = FMA( x[3], La101, Lb[1]);
	Lb[1] = FMA( x[14], La211, Lb[1]);
	Lb[1] = FMA( x[5], La210, Lb[1]);
	Lb[1] = FMA( x[6], La201, Lb[1]);
	Lb[1] = FMA( x[1], La200, Lb[1]);
	Lb[1] = FMA( x[8], La111, Lb[1]);
	Lb[1] = FMA( x[2], La110, Lb[1]);
	Lb[2] *= T(1.2000000000000000e+02);
	Lb[2] = FMA( x[35], La510, Lb[2]);
	Lb[2] = FMA( x[50], La060, Lb[2]);
	Lb[2] = FMA( x[55], La015, Lb[2]);
	Lb[2] *= T(2.0000000000000001e-01);
	Lb[2] = FMA( x[36], La420, Lb[2]);
	Lb[2] = FMA( x[37], La411, Lb[2]);
	Lb[2] = FMA( x[20], La410, Lb[2]);
	Lb[2] = FMA( x[45], La150, Lb[2]);
	Lb[2] = FMA( x[54], La024, Lb[2]);
	Lb[2] = FMA( x[49], La114, Lb[2]);
	Lb[2] = FMA( x[34], La014, Lb[2]);
	Lb[2] = FMA( x[51], La051, Lb[2]);
	Lb[2] = FMA( x[30], La050, Lb[2]);
	Lb[2] *= T(5.0000000000000000e-01);
	Lb[2] = FMA( x[40], La312, Lb[2]);
	Lb[2] = FMA( x[44], La213, Lb[2]);
	Lb[2] = FMA( x[41], La240, Lb[2]);
	Lb[2] = FMA( x[52], La042, Lb[2]);
	Lb[2] = FMA( x[53], La033, Lb[2]);
	Lb[2] = FMA( x[38], La330, Lb[2]);
	Lb[2] *= T(5.0000000000000000e-01);
	Lb[2] = FMA( x[16], La040, Lb[2]);
	Lb[2] = FMA( x[19], La013, Lb[2]);
	Lb[2] = FMA( x[33], La023, Lb[2]);
	Lb[2] = FMA( x[46], La141, Lb[2]);
	Lb[2] = FMA( x[26], La140, Lb[2]);
	Lb[2] = FMA( x[48], La123, Lb[2]);
	Lb[2] = FMA( x[10], La310, Lb[2]);
	Lb[2] = FMA( x[39], La321, Lb[2]);
	Lb[2] = FMA( x[29], La113, Lb[2]);
	Lb[2] = FMA( x[22], La311, Lb[2]);
	Lb[2] = FMA( x[21], La320, Lb[2]);
	Lb[2] = FMA( x[31], La041, Lb[2]);
	Lb[2] *= T(6.6666666666666663e-01);
	Lb[2] = FMA( x[42], La231, Lb[2]);
	Lb[2] = FMA( x[23], La230, Lb[2]);
	Lb[2] = FMA( x[43], La222, Lb[2]);
	Lb[2] = FMA( x[47], La132, Lb[2]);
	Lb[2] = FMA( x[32], La032, Lb[2]);
	Lb[2] = FMA( x[25], La212, Lb[2]);
	Lb[2] *= T(5.0000000000000000e-01);
	Lb[2] = FMA( x[28], La122, Lb[2]);
	Lb[2] = FMA( x[24], La221, Lb[2]);
	Lb[2] = FMA( x[11], La220, Lb[2]);
	Lb[2] = FMA( x[12], La211, Lb[2]);
	Lb[2] = FMA( x[4], La210, Lb[2]);
	Lb[2] = FMA( x[27], La131, Lb[2]);
	Lb[2] = FMA( x[13], La130, Lb[2]);
	Lb[2] = FMA( x[15], La112, Lb[2]);
	Lb[2] = FMA( x[17], La031, Lb[2]);
	Lb[2] = FMA( x[7], La030, Lb[2]);
	Lb[2] = FMA( x[18], La022, Lb[2]);
	Lb[2] = FMA( x[9], La012, Lb[2]);
	Lb[2] *= T(5.0000000000000000e-01);
	Lb[2] = FMA( x[3], La011, Lb[2]);
	Lb[2] = FMA( x[14], La121, Lb[2]);
	Lb[2] = FMA( x[5], La120, Lb[2]);
	Lb[2] = FMA( x[6], La111, Lb[2]);
	Lb[2] = FMA( x[1], La110, Lb[2]);
	Lb[2] = FMA( x[8], La021, Lb[2]);
	Lb[2] = FMA( x[2], La020, Lb[2]);
	Lb[3] *= T(2.4000000000000000e+01);
	Lb[3] = FMA( x[20], La600, Lb[3]);
	Lb[3] = FMA( x[34], La204, Lb[3]);
	Lb[3] = FMA( x[30], La240, Lb[3]);
	Lb[3] *= T(2.5000000000000000e-01);
	Lb[3] = FMA( x[29], La303, Lb[3]);
	Lb[3] = FMA( x[21], La510, Lb[3]);
	Lb[3] = FMA( x[22], La501, Lb[3]);
	Lb[3] = FMA( x[10], La500, Lb[3]);
	Lb[3] = FMA( x[26], La330, Lb[3]);
	Lb[3] = FMA( x[31], La231, Lb[3]);
	Lb[3] = FMA( x[16], La230, Lb[3]);
	Lb[3] = FMA( x[19], La203, Lb[3]);
	Lb[3] = FMA( x[33], La213, Lb[3]);
	Lb[3] *= T(6.6666666666666663e-01);
	Lb[3] = FMA( x[23], La420, Lb[3]);
	Lb[3] = FMA( x[25], La402, Lb[3]);
	Lb[3] = FMA( x[32], La222, Lb[3]);
	Lb[3] *= T(5.0000000000000000e-01);
	Lb[3] = FMA( x[27], La321, Lb[3]);
	Lb[3] = FMA( x[9], La202, Lb[3]);
	Lb[3] = FMA( x[24], La411, Lb[3]);
	Lb[3] = FMA( x[11], La410, Lb[3]);
	Lb[3] = FMA( x[12], La401, Lb[3]);
	Lb[3] = FMA( x[4], La400, Lb[3]);
	Lb[3] = FMA( x[18], La212, Lb[3]);
	Lb[3] = FMA( x[13], La320, Lb[3]);
	Lb[3] = FMA( x[28], La312, Lb[3]);
	Lb[3] = FMA( x[15], La302, Lb[3]);
	Lb[3] = FMA( x[7], La220, Lb[3]);
	Lb[3] = FMA( x[17], La221, Lb[3]);
	Lb[3] *= T(5.0000000000000000e-01);
	Lb[3] = FMA( x[14], La311, Lb[3]);
	Lb[3] = FMA( x[5], La310, Lb[3]);
	Lb[3] = FMA( x[3], La201, Lb[3]);
	Lb[3] = FMA( x[6], La301, Lb[3]);
	Lb[3] = FMA( x[1], La300, Lb[3]);
	Lb[3] = FMA( x[8], La211, Lb[3]);
	Lb[3] = FMA( x[2], La210, Lb[3]);
	Lb[4] *= T(2.4000000000000000e+01);
	Lb[4] = FMA( x[20], La510, Lb[4]);
	Lb[4] = FMA( x[34], La114, Lb[4]);
	Lb[4] = FMA( x[30], La150, Lb[4]);
	Lb[4] *= T(2.5000000000000000e-01);
	Lb[4] = FMA( x[29], La213, Lb[4]);
	Lb[4] = FMA( x[21], La420, Lb[4]);
	Lb[4] = FMA( x[22], La411, Lb[4]);
	Lb[4] = FMA( x[10], La410, Lb[4]);
	Lb[4] = FMA( x[26], La240, Lb[4]);
	Lb[4] = FMA( x[31], La141, Lb[4]);
	Lb[4] = FMA( x[16], La140, Lb[4]);
	Lb[4] = FMA( x[19], La113, Lb[4]);
	Lb[4] = FMA( x[33], La123, Lb[4]);
	Lb[4] *= T(6.6666666666666663e-01);
	Lb[4] = FMA( x[23], La330, Lb[4]);
	Lb[4] = FMA( x[25], La312, Lb[4]);
	Lb[4] = FMA( x[32], La132, Lb[4]);
	Lb[4] *= T(5.0000000000000000e-01);
	Lb[4] = FMA( x[27], La231, Lb[4]);
	Lb[4] = FMA( x[9], La112, Lb[4]);
	Lb[4] = FMA( x[24], La321, Lb[4]);
	Lb[4] = FMA( x[11], La320, Lb[4]);
	Lb[4] = FMA( x[12], La311, Lb[4]);
	Lb[4] = FMA( x[4], La310, Lb[4]);
	Lb[4] = FMA( x[18], La122, Lb[4]);
	Lb[4] = FMA( x[13], La230, Lb[4]);
	Lb[4] = FMA( x[28], La222, Lb[4]);
	Lb[4] = FMA( x[15], La212, Lb[4]);
	Lb[4] = FMA( x[7], La130, Lb[4]);
	Lb[4] = FMA( x[17], La131, Lb[4]);
	Lb[4] *= T(5.0000000000000000e-01);
	Lb[4] = FMA( x[14], La221, Lb[4]);
	Lb[4] = FMA( x[5], La220, Lb[4]);
	Lb[4] = FMA( x[3], La111, Lb[4]);
	Lb[4] = FMA( x[6], La211, Lb[4]);
	Lb[4] = FMA( x[1], La210, Lb[4]);
	Lb[4] = FMA( x[8], La121, Lb[4]);
	Lb[4] = FMA( x[2], La120, Lb[4]);
	Lb[5] *= T(2.4000000000000000e+01);
	Lb[5] = FMA( x[20], La420, Lb[5]);
	Lb[5] = FMA( x[34], La024, Lb[5]);
	Lb[5] = FMA( x[30], La060, Lb[5]);
	Lb[5] *= T(2.5000000000000000e-01);
	Lb[5] = FMA( x[29], La123, Lb[5]);
	Lb[5] = FMA( x[21], La330, Lb[5]);
	Lb[5] = FMA( x[22], La321, Lb[5]);
	Lb[5] = FMA( x[10], La320, Lb[5]);
	Lb[5] = FMA( x[26], La150, Lb[5]);
	Lb[5] = FMA( x[31], La051, Lb[5]);
	Lb[5] = FMA( x[16], La050, Lb[5]);
	Lb[5] = FMA( x[19], La023, Lb[5]);
	Lb[5] = FMA( x[33], La033, Lb[5]);
	Lb[5] *= T(6.6666666666666663e-01);
	Lb[5] = FMA( x[23], La240, Lb[5]);
	Lb[5] = FMA( x[25], La222, Lb[5]);
	Lb[5] = FMA( x[32], La042, Lb[5]);
	Lb[5] *= T(5.0000000000000000e-01);
	Lb[5] = FMA( x[27], La141, Lb[5]);
	Lb[5] = FMA( x[9], La022, Lb[5]);
	Lb[5] = FMA( x[24], La231, Lb[5]);
	Lb[5] = FMA( x[11], La230, Lb[5]);
	Lb[5] = FMA( x[12], La221, Lb[5]);
	Lb[5] = FMA( x[4], La220, Lb[5]);
	Lb[5] = FMA( x[18], La032, Lb[5]);
	Lb[5] = FMA( x[13], La140, Lb[5]);
	Lb[5] = FMA( x[28], La132, Lb[5]);
	Lb[5] = FMA( x[15], La122, Lb[5]);
	Lb[5] = FMA( x[7], La040, Lb[5]);
	Lb[5] = FMA( x[17], La041, Lb[5]);
	Lb[5] *= T(5.0000000000000000e-01);
	Lb[5] = FMA( x[14], La131, Lb[5]);
	Lb[5] = FMA( x[5], La130, Lb[5]);
	Lb[5] = FMA( x[3], La021, Lb[5]);
	Lb[5] = FMA( x[6], La121, Lb[5]);
	Lb[5] = FMA( x[1], La120, Lb[5]);
	Lb[5] = FMA( x[8], La031, Lb[5]);
	Lb[5] = FMA( x[2], La030, Lb[5]);
	Lb[6] *= T(6.0000000000000000e+00);
	Lb[6] = FMA( x[10], La600, Lb[6]);
	Lb[6] = FMA( x[19], La303, Lb[6]);
	Lb[6] = FMA( x[16], La330, Lb[6]);
	Lb[6] *= T(3.3333333333333331e-01);
	Lb[6] = FMA( x[9], La302, Lb[6]);
	Lb[6] = FMA( x[11], La510, Lb[6]);
	Lb[6] = FMA( x[12], La501, Lb[6]);
	Lb[6] = FMA( x[4], La500, Lb[6]);
	Lb[6] = FMA( x[13], La420, Lb[6]);
	Lb[6] = FMA( x[15], La402, Lb[6]);
	Lb[6] = FMA( x[17], La321, Lb[6]);
	Lb[6] = FMA( x[7], La320, Lb[6]);
	Lb[6] = FMA( x[18], La312, Lb[6]);
	Lb[6] *= T(5.0000000000000000e-01);
	Lb[6] = FMA( x[1], La400, Lb[6]);
	Lb[6] = FMA( x[6], La401, Lb[6]);
	Lb[6] = FMA( x[5], La410, Lb[6]);
	Lb[6] = FMA( x[14], La411, Lb[6]);
	Lb[6] = FMA( x[8], La311, Lb[6]);
	Lb[6] = FMA( x[2], La310, Lb[6]);
	Lb[6] = FMA( x[3], La301, Lb[6]);
	Lb[7] *= T(6.0000000000000000e+00);
	Lb[7] = FMA( x[10], La510, Lb[7]);
	Lb[7] = FMA( x[19], La213, Lb[7]);
	Lb[7] = FMA( x[16], La240, Lb[7]);
	Lb[7] *= T(3.3333333333333331e-01);
	Lb[7] = FMA( x[9], La212, Lb[7]);
	Lb[7] = FMA( x[11], La420, Lb[7]);
	Lb[7] = FMA( x[12], La411, Lb[7]);
	Lb[7] = FMA( x[4], La410, Lb[7]);
	Lb[7] = FMA( x[13], La330, Lb[7]);
	Lb[7] = FMA( x[15], La312, Lb[7]);
	Lb[7] = FMA( x[17], La231, Lb[7]);
	Lb[7] = FMA( x[7], La230, Lb[7]);
	Lb[7] = FMA( x[18], La222, Lb[7]);
	Lb[7] *= T(5.0000000000000000e-01);
	Lb[7] = FMA( x[1], La310, Lb[7]);
	Lb[7] = FMA( x[6], La311, Lb[7]);
	Lb[7] = FMA( x[5], La320, Lb[7]);
	Lb[7] = FMA( x[14], La321, Lb[7]);
	Lb[7] = FMA( x[8], La221, Lb[7]);
	Lb[7] = FMA( x[2], La220, Lb[7]);
	Lb[7] = FMA( x[3], La211, Lb[7]);
	Lb[8] *= T(6.0000000000000000e+00);
	Lb[8] = FMA( x[10], La420, Lb[8]);
	Lb[8] = FMA( x[19], La123, Lb[8]);
	Lb[8] = FMA( x[16], La150, Lb[8]);
	Lb[8] *= T(3.3333333333333331e-01);
	Lb[8] = FMA( x[9], La122, Lb[8]);
	Lb[8] = FMA( x[11], La330, Lb[8]);
	Lb[8] = FMA( x[12], La321, Lb[8]);
	Lb[8] = FMA( x[4], La320, Lb[8]);
	Lb[8] = FMA( x[13], La240, Lb[8]);
	Lb[8] = FMA( x[15], La222, Lb[8]);
	Lb[8] = FMA( x[17], La141, Lb[8]);
	Lb[8] = FMA( x[7], La140, Lb[8]);
	Lb[8] = FMA( x[18], La132, Lb[8]);
	Lb[8] *= T(5.0000000000000000e-01);
	Lb[8] = FMA( x[1], La220, Lb[8]);
	Lb[8] = FMA( x[6], La221, Lb[8]);
	Lb[8] = FMA( x[5], La230, Lb[8]);
	Lb[8] = FMA( x[14], La231, Lb[8]);
	Lb[8] = FMA( x[8], La131, Lb[8]);
	Lb[8] = FMA( x[2], La130, Lb[8]);
	Lb[8] = FMA( x[3], La121, Lb[8]);
	Lb[9] *= T(6.0000000000000000e+00);
	Lb[9] = FMA( x[10], La330, Lb[9]);
	Lb[9] = FMA( x[19], La033, Lb[9]);
	Lb[9] = FMA( x[16], La060, Lb[9]);
	Lb[9] *= T(3.3333333333333331e-01);
	Lb[9] = FMA( x[9], La032, Lb[9]);
	Lb[9] = FMA( x[11], La240, Lb[9]);
	Lb[9] = FMA( x[12], La231, Lb[9]);
	Lb[9] = FMA( x[4], La230, Lb[9]);
	Lb[9] = FMA( x[13], La150, Lb[9]);
	Lb[9] = FMA( x[15], La132, Lb[9]);
	Lb[9] = FMA( x[17], La051, Lb[9]);
	Lb[9] = FMA( x[7], La050, Lb[9]);
	Lb[9] = FMA( x[18], La042, Lb[9]);
	Lb[9] *= T(5.0000000000000000e-01);
	Lb[9] = FMA( x[1], La130, Lb[9]);
	Lb[9] = FMA( x[6], La131, Lb[9]);
	Lb[9] = FMA( x[5], La140, Lb[9]);
	Lb[9] = FMA( x[14], La141, Lb[9]);
	Lb[9] = FMA( x[8], La041, Lb[9]);
	Lb[9] = FMA( x[2], La040, Lb[9]);
	Lb[9] = FMA( x[3], La031, Lb[9]);
	Lb[10] *= T(2.0000000000000000e+00);
	Lb[10] = FMA( x[9], La402, Lb[10]);
	Lb[10] = FMA( x[7], La420, Lb[10]);
	Lb[10] = FMA( x[4], La600, Lb[10]);
	Lb[10] *= T(5.0000000000000000e-01);
	Lb[10] = FMA( x[3], La401, Lb[10]);
	Lb[10] = FMA( x[2], La410, Lb[10]);
	Lb[10] = FMA( x[8], La411, Lb[10]);
	Lb[10] = FMA( x[1], La500, Lb[10]);
	Lb[10] = FMA( x[6], La501, Lb[10]);
	Lb[10] = FMA( x[5], La510, Lb[10]);
	Lb[11] *= T(2.0000000000000000e+00);
	Lb[11] = FMA( x[9], La312, Lb[11]);
	Lb[11] = FMA( x[7], La330, Lb[11]);
	Lb[11] = FMA( x[4], La510, Lb[11]);
	Lb[11] *= T(5.0000000000000000e-01);
	Lb[11] = FMA( x[3], La311, Lb[11]);
	Lb[11] = FMA( x[2], La320, Lb[11]);
	Lb[11] = FMA( x[8], La321, Lb[11]);
	Lb[11] = FMA( x[1], La410, Lb[11]);
	Lb[11] = FMA( x[6], La411, Lb[11]);
	Lb[11] = FMA( x[5], La420, Lb[11]);
	Lb[12] *= T(2.0000000000000000e+00);
	Lb[12] = FMA( x[9], La222, Lb[12]);
	Lb[12] = FMA( x[7], La240, Lb[12]);
	Lb[12] = FMA( x[4], La420, Lb[12]);
	Lb[12] *= T(5.0000000000000000e-01);
	Lb[12] = FMA( x[3], La221, Lb[12]);
	Lb[12] = FMA( x[2], La230, Lb[12]);
	Lb[12] = FMA( x[8], La231, Lb[12]);
	Lb[12] = FMA( x[1], La320, Lb[12]);
	Lb[12] = FMA( x[6], La321, Lb[12]);
	Lb[12] = FMA( x[5], La330, Lb[12]);
	Lb[13] *= T(2.0000000000000000e+00);
	Lb[13] = FMA( x[9], La132, Lb[13]);
	Lb[13] = FMA( x[7], La150, Lb[13]);
	Lb[13] = FMA( x[4], La330, Lb[13]);
	Lb[13] *= T(5.0000000000000000e-01);
	Lb[13] = FMA( x[3], La131, Lb[13]);
	Lb[13] = FMA( x[2], La140, Lb[13]);
	Lb[13] = FMA( x[8], La141, Lb[13]);
	Lb[13] = FMA( x[1], La230, Lb[13]);
	Lb[13] = FMA( x[6], La231, Lb[13]);
	Lb[13] = FMA( x[5], La240, Lb[13]);
	Lb[14] *= T(2.0000000000000000e+00);
	Lb[14] = FMA( x[9], La042, Lb[14]);
	Lb[14] = FMA( x[7], La060, Lb[14]);
	Lb[14] = FMA( x[4], La240, Lb[14]);
	Lb[14] *= T(5.0000000000000000e-01);
	Lb[14] = FMA( x[3], La041, Lb[14]);
	Lb[14] = FMA( x[2], La050, Lb[14]);
	Lb[14] = FMA( x[8], La051, Lb[14]);
	Lb[14] = FMA( x[1], La140, Lb[14]);
	Lb[14] = FMA( x[6], La141, Lb[14]);
	Lb[14] = FMA( x[5], La150, Lb[14]);
	Lb[15] = FMA( x[3], La501, Lb[15]);
	Lb[15] = FMA( x[2], La510, Lb[15]);
	Lb[15] = FMA( x[1], La600, Lb[15]);
	Lb[16] = FMA( x[3], La411, Lb[16]);
	Lb[16] = FMA( x[2], La420, Lb[16]);
	Lb[16] = FMA( x[1], La510, Lb[16]);
	Lb[17] = FMA( x[3], La321, Lb[17]);
	Lb[17] = FMA( x[2], La330, Lb[17]);
	Lb[17] = FMA( x[1], La420, Lb[17]);
	Lb[18] = FMA( x[3], La231, Lb[18]);
	Lb[18] = FMA( x[2], La240, Lb[18]);
	Lb[18] = FMA( x[1], La330, Lb[18]);
	Lb[19] = FMA( x[3], La141, Lb[19]);
	Lb[19] = FMA( x[2], La150, Lb[19]);
	Lb[19] = FMA( x[1], La240, Lb[19]);
	Lb[20] = FMA( x[3], La051, Lb[20]);
	Lb[20] = FMA( x[2], La060, Lb[20]);
	Lb[20] = FMA( x[1], La150, Lb[20]);
	Lb[28] *= T(1.2000000000000000e+02);
	Lb[28] = FMA( x[35], La501, Lb[28]);
	Lb[28] = FMA( x[50], La051, Lb[28]);
	Lb[28] = FMA( x[55], La006, Lb[28]);
	Lb[28] *= T(2.0000000000000001e-01);
	Lb[28] = FMA( x[36], La411, Lb[28]);
	Lb[28] = FMA( x[37], La402, Lb[28]);
	Lb[28] = FMA( x[20], La401, Lb[28]);
	Lb[28] = FMA( x[45], La141, Lb[28]);
	Lb[28] = FMA( x[54], La015, Lb[28]);
	Lb[28] = FMA( x[49], La105, Lb[28]);
	Lb[28] = FMA( x[34], La005, Lb[28]);
	Lb[28] = FMA( x[51], La042, Lb[28]);
	Lb[28] = FMA( x[30], La041, Lb[28]);
	Lb[28] *= T(5.0000000000000000e-01);
	Lb[28] = FMA( x[40], La303, Lb[28]);
	Lb[28] = FMA( x[44], La204, Lb[28]);
	Lb[28] = FMA( x[41], La231, Lb[28]);
	Lb[28] = FMA( x[52], La033, Lb[28]);
	Lb[28] = FMA( x[53], La024, Lb[28]);
	Lb[28] = FMA( x[38], La321, Lb[28]);
	Lb[28] *= T(5.0000000000000000e-01);
	Lb[28] = FMA( x[16], La031, Lb[28]);
	Lb[28] = FMA( x[19], La004, Lb[28]);
	Lb[28] = FMA( x[33], La014, Lb[28]);
	Lb[28] = FMA( x[46], La132, Lb[28]);
	Lb[28] = FMA( x[26], La131, Lb[28]);
	Lb[28] = FMA( x[48], La114, Lb[28]);
	Lb[28] = FMA( x[10], La301, Lb[28]);
	Lb[28] = FMA( x[39], La312, Lb[28]);
	Lb[28] = FMA( x[29], La104, Lb[28]);
	Lb[28] = FMA( x[22], La302, Lb[28]);
	Lb[28] = FMA( x[21], La311, Lb[28]);
	Lb[28] = FMA( x[31], La032, Lb[28]);
	Lb[28] *= T(6.6666666666666663e-01);
	Lb[28] = FMA( x[42], La222, Lb[28]);
	Lb[28] = FMA( x[23], La221, Lb[28]);
	Lb[28] = FMA( x[43], La213, Lb[28]);
	Lb[28] = FMA( x[47], La123, Lb[28]);
	Lb[28] = FMA( x[32], La023, Lb[28]);
	Lb[28] = FMA( x[25], La203, Lb[28]);
	Lb[28] *= T(5.0000000000000000e-01);
	Lb[28] = FMA( x[28], La113, Lb[28]);
	Lb[28] = FMA( x[24], La212, Lb[28]);
	Lb[28] = FMA( x[11], La211, Lb[28]);
	Lb[28] = FMA( x[12], La202, Lb[28]);
	Lb[28] = FMA( x[4], La201, Lb[28]);
	Lb[28] = FMA( x[27], La122, Lb[28]);
	Lb[28] = FMA( x[13], La121, Lb[28]);
	Lb[28] = FMA( x[15], La103, Lb[28]);
	Lb[28] = FMA( x[17], La022, Lb[28]);
	Lb[28] = FMA( x[7], La021, Lb[28]);
	Lb[28] = FMA( x[18], La013, Lb[28]);
	Lb[28] = FMA( x[9], La003, Lb[28]);
	Lb[28] *= T(5.0000000000000000e-01);
	Lb[28] = FMA( x[3], La002, Lb[28]);
	Lb[28] = FMA( x[14], La112, Lb[28]);
	Lb[28] = FMA( x[5], La111, Lb[28]);
	Lb[28] = FMA( x[6], La102, Lb[28]);
	Lb[28] = FMA( x[1], La101, Lb[28]);
	Lb[28] = FMA( x[8], La012, Lb[28]);
	Lb[28] = FMA( x[2], La011, Lb[28]);
	Lb[29] *= T(2.4000000000000000e+01);
	Lb[29] = FMA( x[20], La501, Lb[29]);
	Lb[29] = FMA( x[34], La105, Lb[29]);
	Lb[29] = FMA( x[30], La141, Lb[29]);
	Lb[29] *= T(2.5000000000000000e-01);
	Lb[29] = FMA( x[29], La204, Lb[29]);
	Lb[29] = FMA( x[21], La411, Lb[29]);
	Lb[29] = FMA( x[22], La402, Lb[29]);
	Lb[29] = FMA( x[10], La401, Lb[29]);
	Lb[29] = FMA( x[26], La231, Lb[29]);
	Lb[29] = FMA( x[31], La132, Lb[29]);
	Lb[29] = FMA( x[16], La131, Lb[29]);
	Lb[29] = FMA( x[19], La104, Lb[29]);
	Lb[29] = FMA( x[33], La114, Lb[29]);
	Lb[29] *= T(6.6666666666666663e-01);
	Lb[29] = FMA( x[23], La321, Lb[29]);
	Lb[29] = FMA( x[25], La303, Lb[29]);
	Lb[29] = FMA( x[32], La123, Lb[29]);
	Lb[29] *= T(5.0000000000000000e-01);
	Lb[29] = FMA( x[27], La222, Lb[29]);
	Lb[29] = FMA( x[9], La103, Lb[29]);
	Lb[29] = FMA( x[24], La312, Lb[29]);
	Lb[29] = FMA( x[11], La311, Lb[29]);
	Lb[29] = FMA( x[12], La302, Lb[29]);
	Lb[29] = FMA( x[4], La301, Lb[29]);
	Lb[29] = FMA( x[18], La113, Lb[29]);
	Lb[29] = FMA( x[13], La221, Lb[29]);
	Lb[29] = FMA( x[28], La213, Lb[29]);
	Lb[29] = FMA( x[15], La203, Lb[29]);
	Lb[29] = FMA( x[7], La121, Lb[29]);
	Lb[29] = FMA( x[17], La122, Lb[29]);
	Lb[29] *= T(5.0000000000000000e-01);
	Lb[29] = FMA( x[14], La212, Lb[29]);
	Lb[29] = FMA( x[5], La211, Lb[29]);
	Lb[29] = FMA( x[3], La102, Lb[29]);
	Lb[29] = FMA( x[6], La202, Lb[29]);
	Lb[29] = FMA( x[1], La201, Lb[29]);
	Lb[29] = FMA( x[8], La112, Lb[29]);
	Lb[29] = FMA( x[2], La111, Lb[29]);
	Lb[30] *= T(2.4000000000000000e+01);
	Lb[30] = FMA( x[20], La411, Lb[30]);
	Lb[30] = FMA( x[34], La015, Lb[30]);
	Lb[30] = FMA( x[30], La051, Lb[30]);
	Lb[30] *= T(2.5000000000000000e-01);
	Lb[30] = FMA( x[29], La114, Lb[30]);
	Lb[30] = FMA( x[21], La321, Lb[30]);
	Lb[30] = FMA( x[22], La312, Lb[30]);
	Lb[30] = FMA( x[10], La311, Lb[30]);
	Lb[30] = FMA( x[26], La141, Lb[30]);
	Lb[30] = FMA( x[31], La042, Lb[30]);
	Lb[30] = FMA( x[16], La041, Lb[30]);
	Lb[30] = FMA( x[19], La014, Lb[30]);
	Lb[30] = FMA( x[33], La024, Lb[30]);
	Lb[30] *= T(6.6666666666666663e-01);
	Lb[30] = FMA( x[23], La231, Lb[30]);
	Lb[30] = FMA( x[25], La213, Lb[30]);
	Lb[30] = FMA( x[32], La033, Lb[30]);
	Lb[30] *= T(5.0000000000000000e-01);
	Lb[30] = FMA( x[27], La132, Lb[30]);
	Lb[30] = FMA( x[9], La013, Lb[30]);
	Lb[30] = FMA( x[24], La222, Lb[30]);
	Lb[30] = FMA( x[11], La221, Lb[30]);
	Lb[30] = FMA( x[12], La212, Lb[30]);
	Lb[30] = FMA( x[4], La211, Lb[30]);
	Lb[30] = FMA( x[18], La023, Lb[30]);
	Lb[30] = FMA( x[13], La131, Lb[30]);
	Lb[30] = FMA( x[28], La123, Lb[30]);
	Lb[30] = FMA( x[15], La113, Lb[30]);
	Lb[30] = FMA( x[7], La031, Lb[30]);
	Lb[30] = FMA( x[17], La032, Lb[30]);
	Lb[30] *= T(5.0000000000000000e-01);
	Lb[30] = FMA( x[14], La122, Lb[30]);
	Lb[30] = FMA( x[5], La121, Lb[30]);
	Lb[30] = FMA( x[3], La012, Lb[30]);
	Lb[30] = FMA( x[6], La112, Lb[30]);
	Lb[30] = FMA( x[1], La111, Lb[30]);
	Lb[30] = FMA( x[8], La022, Lb[30]);
	Lb[30] = FMA( x[2], La021, Lb[30]);
	Lb[31] *= T(6.0000000000000000e+00);
	Lb[31] = FMA( x[10], La501, Lb[31]);
	Lb[31] = FMA( x[19], La204, Lb[31]);
	Lb[31] = FMA( x[16], La231, Lb[31]);
	Lb[31] *= T(3.3333333333333331e-01);
	Lb[31] = FMA( x[9], La203, Lb[31]);
	Lb[31] = FMA( x[11], La411, Lb[31]);
	Lb[31] = FMA( x[12], La402, Lb[31]);
	Lb[31] = FMA( x[4], La401, Lb[31]);
	Lb[31] = FMA( x[13], La321, Lb[31]);
	Lb[31] = FMA( x[15], La303, Lb[31]);
	Lb[31] = FMA( x[17], La222, Lb[31]);
	Lb[31] = FMA( x[7], La221, Lb[31]);
	Lb[31] = FMA( x[18], La213, Lb[31]);
	Lb[31] *= T(5.0000000000000000e-01);
	Lb[31] = FMA( x[1], La301, Lb[31]);
	Lb[31] = FMA( x[6], La302, Lb[31]);
	Lb[31] = FMA( x[5], La311, Lb[31]);
	Lb[31] = FMA( x[14], La312, Lb[31]);
	Lb[31] = FMA( x[8], La212, Lb[31]);
	Lb[31] = FMA( x[2], La211, Lb[31]);
	Lb[31] = FMA( x[3], La202, Lb[31]);
	Lb[32] *= T(6.0000000000000000e+00);
	Lb[32] = FMA( x[10], La411, Lb[32]);
	Lb[32] = FMA( x[19], La114, Lb[32]);
	Lb[32] = FMA( x[16], La141, Lb[32]);
	Lb[32] *= T(3.3333333333333331e-01);
	Lb[32] = FMA( x[9], La113, Lb[32]);
	Lb[32] = FMA( x[11], La321, Lb[32]);
	Lb[32] = FMA( x[12], La312, Lb[32]);
	Lb[32] = FMA( x[4], La311, Lb[32]);
	Lb[32] = FMA( x[13], La231, Lb[32]);
	Lb[32] = FMA( x[15], La213, Lb[32]);
	Lb[32] = FMA( x[17], La132, Lb[32]);
	Lb[32] = FMA( x[7], La131, Lb[32]);
	Lb[32] = FMA( x[18], La123, Lb[32]);
	Lb[32] *= T(5.0000000000000000e-01);
	Lb[32] = FMA( x[1], La211, Lb[32]);
	Lb[32] = FMA( x[6], La212, Lb[32]);
	Lb[32] = FMA( x[5], La221, Lb[32]);
	Lb[32] = FMA( x[14], La222, Lb[32]);
	Lb[32] = FMA( x[8], La122, Lb[32]);
	Lb[32] = FMA( x[2], La121, Lb[32]);
	Lb[32] = FMA( x[3], La112, Lb[32]);
	Lb[33] *= T(6.0000000000000000e+00);
	Lb[33] = FMA( x[10], La321, Lb[33]);
	Lb[33] = FMA( x[19], La024, Lb[33]);
	Lb[33] = FMA( x[16], La051, Lb[33]);
	Lb[33] *= T(3.3333333333333331e-01);
	Lb[33] = FMA( x[9], La023, Lb[33]);
	Lb[33] = FMA( x[11], La231, Lb[33]);
	Lb[33] = FMA( x[12], La222, Lb[33]);
	Lb[33] = FMA( x[4], La221, Lb[33]);
	Lb[33] = FMA( x[13], La141, Lb[33]);
	Lb[33] = FMA( x[15], La123, Lb[33]);
	Lb[33] = FMA( x[17], La042, Lb[33]);
	Lb[33] = FMA( x[7], La041, Lb[33]);
	Lb[33] = FMA( x[18], La033, Lb[33]);
	Lb[33] *= T(5.0000000000000000e-01);
	Lb[33] = FMA( x[1], La121, Lb[33]);
	Lb[33] = FMA( x[6], La122, Lb[33]);
	Lb[33] = FMA( x[5], La131, Lb[33]);
	Lb[33] = FMA( x[14], La132, Lb[33]);
	Lb[33] = FMA( x[8], La032, Lb[33]);
	Lb[33] = FMA( x[2], La031, Lb[33]);
	Lb[33] = FMA( x[3], La022, Lb[33]);
	Lb[34] *= T(2.0000000000000000e+00);
	Lb[34] = FMA( x[9], La303, Lb[34]);
	Lb[34] = FMA( x[7], La321, Lb[34]);
	Lb[34] = FMA( x[4], La501, Lb[34]);
	Lb[34] *= T(5.0000000000000000e-01);
	Lb[34] = FMA( x[3], La302, Lb[34]);
	Lb[34] = FMA( x[2], La311, Lb[34]);
	Lb[34] = FMA( x[8], La312, Lb[34]);
	Lb[34] = FMA( x[1], La401, Lb[34]);
	Lb[34] = FMA( x[6], La402, Lb[34]);
	Lb[34] = FMA( x[5], La411, Lb[34]);
	Lb[35] *= T(2.0000000000000000e+00);
	Lb[35] = FMA( x[9], La213, Lb[35]);
	Lb[35] = FMA( x[7], La231, Lb[35]);
	Lb[35] = FMA( x[4], La411, Lb[35]);
	Lb[35] *= T(5.0000000000000000e-01);
	Lb[35] = FMA( x[3], La212, Lb[35]);
	Lb[35] = FMA( x[2], La221, Lb[35]);
	Lb[35] = FMA( x[8], La222, Lb[35]);
	Lb[35] = FMA( x[1], La311, Lb[35]);
	Lb[35] = FMA( x[6], La312, Lb[35]);
	Lb[35] = FMA( x[5], La321, Lb[35]);
	Lb[36] *= T(2.0000000000000000e+00);
	Lb[36] = FMA( x[9], La123, Lb[36]);
	Lb[36] = FMA( x[7], La141, Lb[36]);
	Lb[36] = FMA( x[4], La321, Lb[36]);
	Lb[36] *= T(5.0000000000000000e-01);
	Lb[36] = FMA( x[3], La122, Lb[36]);
	Lb[36] = FMA( x[2], La131, Lb[36]);
	Lb[36] = FMA( x[8], La132, Lb[36]);
	Lb[36] = FMA( x[1], La221, Lb[36]);
	Lb[36] = FMA( x[6], La222, Lb[36]);
	Lb[36] = FMA( x[5], La231, Lb[36]);
	Lb[37] *= T(2.0000000000000000e+00);
	Lb[37] = FMA( x[9], La033, Lb[37]);
	Lb[37] = FMA( x[7], La051, Lb[37]);
	Lb[37] = FMA( x[4], La231, Lb[37]);
	Lb[37] *= T(5.0000000000000000e-01);
	Lb[37] = FMA( x[3], La032, Lb[37]);
	Lb[37] = FMA( x[2], La041, Lb[37]);
	Lb[37] = FMA( x[8], La042, Lb[37]);
	Lb[37] = FMA( x[1], La131, Lb[37]);
	Lb[37] = FMA( x[6], La132, Lb[37]);
	Lb[37] = FMA( x[5], La141, Lb[37]);
	Lb[38] = FMA( x[3], La402, Lb[38]);
	Lb[38] = FMA( x[2], La411, Lb[38]);
	Lb[38] = FMA( x[1], La501, Lb[38]);
	Lb[39] = FMA( x[3], La312, Lb[39]);
	Lb[39] = FMA( x[2], La321, Lb[39]);
	Lb[39] = FMA( x[1], La411, Lb[39]);
	Lb[40] = FMA( x[3], La222, Lb[40]);
	Lb[40] = FMA( x[2], La231, Lb[40]);
	Lb[40] = FMA( x[1], La321, Lb[40]);
	Lb[41] = FMA( x[3], La132, Lb[41]);
	Lb[41] = FMA( x[2], La141, Lb[41]);
	Lb[41] = FMA( x[1], La231, Lb[41]);
	Lb[42] = FMA( x[3], La042, Lb[42]);
	Lb[42] = FMA( x[2], La051, Lb[42]);
	Lb[42] = FMA( x[1], La141, Lb[42]);
	Lb[49] *= T(2.4000000000000000e+01);
	Lb[49] = FMA( x[20], La402, Lb[49]);
	Lb[49] = FMA( x[34], La006, Lb[49]);
	Lb[49] = FMA( x[30], La042, Lb[49]);
	Lb[49] *= T(2.5000000000000000e-01);
	Lb[49] = FMA( x[29], La105, Lb[49]);
	Lb[49] = FMA( x[21], La312, Lb[49]);
	Lb[49] = FMA( x[22], La303, Lb[49]);
	Lb[49] = FMA( x[10], La302, Lb[49]);
	Lb[49] = FMA( x[26], La132, Lb[49]);
	Lb[49] = FMA( x[31], La033, Lb[49]);
	Lb[49] = FMA( x[16], La032, Lb[49]);
	Lb[49] = FMA( x[19], La005, Lb[49]);
	Lb[49] = FMA( x[33], La015, Lb[49]);
	Lb[49] *= T(6.6666666666666663e-01);
	Lb[49] = FMA( x[23], La222, Lb[49]);
	Lb[49] = FMA( x[25], La204, Lb[49]);
	Lb[49] = FMA( x[32], La024, Lb[49]);
	Lb[49] *= T(5.0000000000000000e-01);
	Lb[49] = FMA( x[27], La123, Lb[49]);
	Lb[49] = FMA( x[9], La004, Lb[49]);
	Lb[49] = FMA( x[24], La213, Lb[49]);
	Lb[49] = FMA( x[11], La212, Lb[49]);
	Lb[49] = FMA( x[12], La203, Lb[49]);
	Lb[49] = FMA( x[4], La202, Lb[49]);
	Lb[49] = FMA( x[18], La014, Lb[49]);
	Lb[49] = FMA( x[13], La122, Lb[49]);
	Lb[49] = FMA( x[28], La114, Lb[49]);
	Lb[49] = FMA( x[15], La104, Lb[49]);
	Lb[49] = FMA( x[7], La022, Lb[49]);
	Lb[49] = FMA( x[17], La023, Lb[49]);
	Lb[49] *= T(5.0000000000000000e-01);
	Lb[49] = FMA( x[14], La113, Lb[49]);
	Lb[49] = FMA( x[5], La112, Lb[49]);
	Lb[49] = FMA( x[3], La003, Lb[49]);
	Lb[49] = FMA( x[6], La103, Lb[49]);
	Lb[49] = FMA( x[1], La102, Lb[49]);
	Lb[49] = FMA( x[8], La013, Lb[49]);
	Lb[49] = FMA( x[2], La012, Lb[49]);
	return Lb;
/* FLOPS = 1511 + do_phi * 178*/
}
template<class T>
CUDA_EXPORT
#ifdef __CUDACC__
__noinline__
#endif
tensor_trless_sym<T, 8> L2L(const tensor_trless_sym<T, 8>& La, array<T,NDIM> X, bool do_phi) {
	X[0] *= T(SCALE_FACTOR);
	X[1] *= T(SCALE_FACTOR);
	X[2] *= T(SCALE_FACTOR);
	tensor_trless_sym<T, 8> Lb;
	T x[120];
	x[0] = T(1);
	x[1] = X[0];
	x[2] = X[1];
	x[3] = X[2];
	x[9] = x[3] * x[3]; // 0 0 2 | 0 0 1 | 0 0 1
	x[8] = x[2] * x[3]; // 0 1 1 | 0 0 1 | 0 1 0
	x[7] = x[2] * x[2]; // 0 2 0 | 0 1 0 | 0 1 0
	x[6] = x[1] * x[3]; // 1 0 1 | 0 0 1 | 1 0 0
	x[5] = x[1] * x[2]; // 1 1 0 | 0 1 0 | 1 0 0
	x[4] = x[1] * x[1]; // 2 0 0 | 1 0 0 | 1 0 0
	x[19] = x[9] * x[3]; // 0 0 3 | 0 0 1 | 0 0 2
	x[18] = x[8] * x[3]; // 0 1 2 | 0 0 1 | 0 1 1
	x[17] = x[8] * x[2]; // 0 2 1 | 0 1 0 | 0 1 1
	x[16] = x[7] * x[2]; // 0 3 0 | 0 1 0 | 0 2 0
	x[15] = x[6] * x[3]; // 1 0 2 | 0 0 1 | 1 0 1
	x[14] = x[5] * x[3]; // 1 1 1 | 0 0 1 | 1 1 0
	x[13] = x[5] * x[2]; // 1 2 0 | 0 1 0 | 1 1 0
	x[12] = x[6] * x[1]; // 2 0 1 | 1 0 0 | 1 0 1
	x[11] = x[5] * x[1]; // 2 1 0 | 1 0 0 | 1 1 0
	x[10] = x[4] * x[1]; // 3 0 0 | 1 0 0 | 2 0 0
	x[34] = x[9] * x[9]; // 0 0 4 | 0 0 2 | 0 0 2
	x[33] = x[8] * x[9]; // 0 1 3 | 0 0 2 | 0 1 1
	x[32] = x[8] * x[8]; // 0 2 2 | 0 1 1 | 0 1 1
	x[31] = x[8] * x[7]; // 0 3 1 | 0 2 0 | 0 1 1
	x[30] = x[7] * x[7]; // 0 4 0 | 0 2 0 | 0 2 0
	x[29] = x[6] * x[9]; // 1 0 3 | 0 0 2 | 1 0 1
	x[28] = x[5] * x[9]; // 1 1 2 | 0 0 2 | 1 1 0
	x[27] = x[5] * x[8]; // 1 2 1 | 0 1 1 | 1 1 0
	x[26] = x[5] * x[7]; // 1 3 0 | 0 2 0 | 1 1 0
	x[25] = x[6] * x[6]; // 2 0 2 | 1 0 1 | 1 0 1
	x[24] = x[5] * x[6]; // 2 1 1 | 1 0 1 | 1 1 0
	x[23] = x[5] * x[5]; // 2 2 0 | 1 1 0 | 1 1 0
	x[22] = x[6] * x[4]; // 3 0 1 | 2 0 0 | 1 0 1
	x[21] = x[5] * x[4]; // 3 1 0 | 2 0 0 | 1 1 0
	x[20] = x[4] * x[4]; // 4 0 0 | 2 0 0 | 2 0 0
	x[55] = x[19] * x[9]; // 0 0 5 | 0 0 2 | 0 0 3
	x[54] = x[18] * x[9]; // 0 1 4 | 0 0 2 | 0 1 2
	x[53] = x[17] * x[9]; // 0 2 3 | 0 0 2 | 0 2 1
	x[52] = x[17] * x[8]; // 0 3 2 | 0 1 1 | 0 2 1
	x[51] = x[17] * x[7]; // 0 4 1 | 0 2 0 | 0 2 1
	x[50] = x[16] * x[7]; // 0 5 0 | 0 2 0 | 0 3 0
	x[49] = x[15] * x[9]; // 1 0 4 | 0 0 2 | 1 0 2
	x[48] = x[14] * x[9]; // 1 1 3 | 0 0 2 | 1 1 1
	x[47] = x[14] * x[8]; // 1 2 2 | 0 1 1 | 1 1 1
	x[46] = x[14] * x[7]; // 1 3 1 | 0 2 0 | 1 1 1
	x[45] = x[13] * x[7]; // 1 4 0 | 0 2 0 | 1 2 0
	x[44] = x[12] * x[9]; // 2 0 3 | 0 0 2 | 2 0 1
	x[43] = x[14] * x[6]; // 2 1 2 | 1 0 1 | 1 1 1
	x[42] = x[14] * x[5]; // 2 2 1 | 1 1 0 | 1 1 1
	x[41] = x[11] * x[7]; // 2 3 0 | 0 2 0 | 2 1 0
	x[40] = x[12] * x[6]; // 3 0 2 | 1 0 1 | 2 0 1
	x[39] = x[14] * x[4]; // 3 1 1 | 2 0 0 | 1 1 1
	x[38] = x[11] * x[5]; // 3 2 0 | 1 1 0 | 2 1 0
	x[37] = x[12] * x[4]; // 4 0 1 | 2 0 0 | 2 0 1
	x[36] = x[11] * x[4]; // 4 1 0 | 2 0 0 | 2 1 0
	x[35] = x[10] * x[4]; // 5 0 0 | 2 0 0 | 3 0 0
	x[83] = x[19] * x[19]; // 0 0 6 | 0 0 3 | 0 0 3
	x[82] = x[18] * x[19]; // 0 1 5 | 0 0 3 | 0 1 2
	x[81] = x[17] * x[19]; // 0 2 4 | 0 0 3 | 0 2 1
	x[80] = x[17] * x[18]; // 0 3 3 | 0 1 2 | 0 2 1
	x[79] = x[17] * x[17]; // 0 4 2 | 0 2 1 | 0 2 1
	x[78] = x[17] * x[16]; // 0 5 1 | 0 3 0 | 0 2 1
	x[77] = x[16] * x[16]; // 0 6 0 | 0 3 0 | 0 3 0
	x[76] = x[15] * x[19]; // 1 0 5 | 0 0 3 | 1 0 2
	x[75] = x[14] * x[19]; // 1 1 4 | 0 0 3 | 1 1 1
	x[74] = x[14] * x[18]; // 1 2 3 | 0 1 2 | 1 1 1
	x[73] = x[14] * x[17]; // 1 3 2 | 0 2 1 | 1 1 1
	x[72] = x[14] * x[16]; // 1 4 1 | 0 3 0 | 1 1 1
	x[71] = x[13] * x[16]; // 1 5 0 | 0 3 0 | 1 2 0
	x[70] = x[12] * x[19]; // 2 0 4 | 0 0 3 | 2 0 1
	x[69] = x[14] * x[15]; // 2 1 3 | 1 0 2 | 1 1 1
	x[68] = x[14] * x[14]; // 2 2 2 | 1 1 1 | 1 1 1
	x[67] = x[14] * x[13]; // 2 3 1 | 1 2 0 | 1 1 1
	x[66] = x[11] * x[16]; // 2 4 0 | 0 3 0 | 2 1 0
	x[65] = x[12] * x[15]; // 3 0 3 | 1 0 2 | 2 0 1
	x[64] = x[14] * x[12]; // 3 1 2 | 2 0 1 | 1 1 1
	x[63] = x[14] * x[11]; // 3 2 1 | 2 1 0 | 1 1 1
	x[62] = x[11] * x[13]; // 3 3 0 | 1 2 0 | 2 1 0
	x[61] = x[12] * x[12]; // 4 0 2 | 2 0 1 | 2 0 1
	x[60] = x[14] * x[10]; // 4 1 1 | 3 0 0 | 1 1 1
	x[59] = x[11] * x[11]; // 4 2 0 | 2 1 0 | 2 1 0
	x[58] = x[12] * x[10]; // 5 0 1 | 3 0 0 | 2 0 1
	x[57] = x[11] * x[10]; // 5 1 0 | 3 0 0 | 2 1 0
	x[56] = x[10] * x[10]; // 6 0 0 | 3 0 0 | 3 0 0
	x[119] = x[34] * x[19]; // 0 0 7 | 0 0 3 | 0 0 4
	x[118] = x[33] * x[19]; // 0 1 6 | 0 0 3 | 0 1 3
	x[117] = x[32] * x[19]; // 0 2 5 | 0 0 3 | 0 2 2
	x[116] = x[32] * x[18]; // 0 3 4 | 0 1 2 | 0 2 2
	x[115] = x[32] * x[17]; // 0 4 3 | 0 2 1 | 0 2 2
	x[114] = x[32] * x[16]; // 0 5 2 | 0 3 0 | 0 2 2
	x[113] = x[31] * x[16]; // 0 6 1 | 0 3 0 | 0 3 1
	x[112] = x[30] * x[16]; // 0 7 0 | 0 3 0 | 0 4 0
	x[111] = x[29] * x[19]; // 1 0 6 | 0 0 3 | 1 0 3
	x[110] = x[28] * x[19]; // 1 1 5 | 0 0 3 | 1 1 2
	x[109] = x[27] * x[19]; // 1 2 4 | 0 0 3 | 1 2 1
	x[108] = x[27] * x[18]; // 1 3 3 | 0 1 2 | 1 2 1
	x[107] = x[27] * x[17]; // 1 4 2 | 0 2 1 | 1 2 1
	x[106] = x[27] * x[16]; // 1 5 1 | 0 3 0 | 1 2 1
	x[105] = x[26] * x[16]; // 1 6 0 | 0 3 0 | 1 3 0
	x[104] = x[25] * x[19]; // 2 0 5 | 0 0 3 | 2 0 2
	x[103] = x[24] * x[19]; // 2 1 4 | 0 0 3 | 2 1 1
	x[102] = x[24] * x[18]; // 2 2 3 | 0 1 2 | 2 1 1
	x[101] = x[24] * x[17]; // 2 3 2 | 0 2 1 | 2 1 1
	x[100] = x[24] * x[16]; // 2 4 1 | 0 3 0 | 2 1 1
	x[99] = x[23] * x[16]; // 2 5 0 | 0 3 0 | 2 2 0
	x[98] = x[25] * x[15]; // 3 0 4 | 1 0 2 | 2 0 2
	x[97] = x[24] * x[15]; // 3 1 3 | 1 0 2 | 2 1 1
	x[96] = x[24] * x[14]; // 3 2 2 | 1 1 1 | 2 1 1
	x[95] = x[24] * x[13]; // 3 3 1 | 1 2 0 | 2 1 1
	x[94] = x[23] * x[13]; // 3 4 0 | 1 2 0 | 2 2 0
	x[93] = x[25] * x[12]; // 4 0 3 | 2 0 1 | 2 0 2
	x[92] = x[24] * x[12]; // 4 1 2 | 2 0 1 | 2 1 1
	x[91] = x[24] * x[11]; // 4 2 1 | 2 1 0 | 2 1 1
	x[90] = x[23] * x[11]; // 4 3 0 | 2 1 0 | 2 2 0
	x[89] = x[25] * x[10]; // 5 0 2 | 3 0 0 | 2 0 2
	x[88] = x[24] * x[10]; // 5 1 1 | 3 0 0 | 2 1 1
	x[87] = x[23] * x[10]; // 5 2 0 | 3 0 0 | 2 2 0
	x[86] = x[22] * x[10]; // 6 0 1 | 3 0 0 | 3 0 1
	x[85] = x[21] * x[10]; // 6 1 0 | 3 0 0 | 3 1 0
	x[84] = x[20] * x[10]; // 7 0 0 | 3 0 0 | 4 0 0
	const T La000 =  (La[0]);
	const T La001 =  (La[36]);
	const T La002 =  (La[64]);
	const T La003 = -(La[39]+(La[41]));
	const T La004 =  (La[10]+FMA(T(2),La[12],(La[14])));
	const T La005 =  (La[46]+FMA(T(2),La[48],(La[50])));
	const T La006 = -(La[21]+FMA(T(3),La[23],FMA(T(3),La[25],(La[27]))));
	const T La007 = -(La[57]+FMA(T(3),La[59],FMA(T(3),La[61],(La[63]))));
	const T La010 =  (La[2]);
	const T La011 =  (La[38]);
	const T La012 = -(La[7]+(La[9]));
	const T La013 = -(La[43]+(La[45]));
	const T La014 =  (La[16]+FMA(T(2),La[18],(La[20])));
	const T La015 =  (La[52]+FMA(T(2),La[54],(La[56])));
	const T La016 = -(La[29]+FMA(T(3),La[31],FMA(T(3),La[33],(La[35]))));
	const T La020 =  (La[5]);
	const T La021 =  (La[41]);
	const T La022 = -(La[12]+(La[14]));
	const T La023 = -(La[48]+(La[50]));
	const T La024 =  (La[23]+FMA(T(2),La[25],(La[27])));
	const T La025 =  (La[59]+FMA(T(2),La[61],(La[63])));
	const T La030 =  (La[9]);
	const T La031 =  (La[45]);
	const T La032 = -(La[18]+(La[20]));
	const T La033 = -(La[54]+(La[56]));
	const T La034 =  (La[31]+FMA(T(2),La[33],(La[35])));
	const T La040 =  (La[14]);
	const T La041 =  (La[50]);
	const T La042 = -(La[25]+(La[27]));
	const T La043 = -(La[61]+(La[63]));
	const T La050 =  (La[20]);
	const T La051 =  (La[56]);
	const T La052 = -(La[33]+(La[35]));
	const T La060 =  (La[27]);
	const T La061 =  (La[63]);
	const T La070 =  (La[35]);
	const T La100 =  (La[1]);
	const T La101 =  (La[37]);
	const T La102 = -(La[6]+(La[8]));
	const T La103 = -(La[42]+(La[44]));
	const T La104 =  (La[15]+FMA(T(2),La[17],(La[19])));
	const T La105 =  (La[51]+FMA(T(2),La[53],(La[55])));
	const T La106 = -(La[28]+FMA(T(3),La[30],FMA(T(3),La[32],(La[34]))));
	const T La110 =  (La[4]);
	const T La111 =  (La[40]);
	const T La112 = -(La[11]+(La[13]));
	const T La113 = -(La[47]+(La[49]));
	const T La114 =  (La[22]+FMA(T(2),La[24],(La[26])));
	const T La115 =  (La[58]+FMA(T(2),La[60],(La[62])));
	const T La120 =  (La[8]);
	const T La121 =  (La[44]);
	const T La122 = -(La[17]+(La[19]));
	const T La123 = -(La[53]+(La[55]));
	const T La124 =  (La[30]+FMA(T(2),La[32],(La[34])));
	const T La130 =  (La[13]);
	const T La131 =  (La[49]);
	const T La132 = -(La[24]+(La[26]));
	const T La133 = -(La[60]+(La[62]));
	const T La140 =  (La[19]);
	const T La141 =  (La[55]);
	const T La142 = -(La[32]+(La[34]));
	const T La150 =  (La[26]);
	const T La151 =  (La[62]);
	const T La160 =  (La[34]);
	const T La200 =  (La[3]);
	const T La201 =  (La[39]);
	const T La202 = -(La[10]+(La[12]));
	const T La203 = -(La[46]+(La[48]));
	const T La204 =  (La[21]+FMA(T(2),La[23],(La[25])));
	const T La205 =  (La[57]+FMA(T(2),La[59],(La[61])));
	const T La210 =  (La[7]);
	const T La211 =  (La[43]);
	const T La212 = -(La[16]+(La[18]));
	const T La213 = -(La[52]+(La[54]));
	const T La214 =  (La[29]+FMA(T(2),La[31],(La[33])));
	const T La220 =  (La[12]);
	const T La221 =  (La[48]);
	const T La222 = -(La[23]+(La[25]));
	const T La223 = -(La[59]+(La[61]));
	const T La230 =  (La[18]);
	const T La231 =  (La[54]);
	const T La232 = -(La[31]+(La[33]));
	const T La240 =  (La[25]);
	const T La241 =  (La[61]);
	const T La250 =  (La[33]);
	const T La300 =  (La[6]);
	const T La301 =  (La[42]);
	const T La302 = -(La[15]+(La[17]));
	const T La303 = -(La[51]+(La[53]));
	const T La304 =  (La[28]+FMA(T(2),La[30],(La[32])));
	const T La310 =  (La[11]);
	const T La311 =  (La[47]);
	const T La312 = -(La[22]+(La[24]));
	const T La313 = -(La[58]+(La[60]));
	const T La320 =  (La[17]);
	const T La321 =  (La[53]);
	const T La322 = -(La[30]+(La[32]));
	const T La330 =  (La[24]);
	const T La331 =  (La[60]);
	const T La340 =  (La[32]);
	const T La400 =  (La[10]);
	const T La401 =  (La[46]);
	const T La402 = -(La[21]+(La[23]));
	const T La403 = -(La[57]+(La[59]));
	const T La410 =  (La[16]);
	const T La411 =  (La[52]);
	const T La412 = -(La[29]+(La[31]));
	const T La420 =  (La[23]);
	const T La421 =  (La[59]);
	const T La430 =  (La[31]);
	const T La500 =  (La[15]);
	const T La501 =  (La[51]);
	const T La502 = -(La[28]+(La[30]));
	const T La510 =  (La[22]);
	const T La511 =  (La[58]);
	const T La520 =  (La[30]);
	const T La600 =  (La[21]);
	const T La601 =  (La[57]);
	const T La610 =  (La[29]);
	const T La700 =  (La[28]);
	Lb = La;
	if( do_phi ) {
		Lb[0] *= T(5.0400000000000000e+03);
		Lb[0] = FMA( x[84], La700, Lb[0]);
		Lb[0] = FMA( x[119], La007, Lb[0]);
		Lb[0] = FMA( x[112], La070, Lb[0]);
		Lb[0] *= T(1.4285714285714285e-01);
		Lb[0] = FMA( x[85], La610, Lb[0]);
		Lb[0] = FMA( x[86], La601, Lb[0]);
		Lb[0] = FMA( x[111], La106, Lb[0]);
		Lb[0] = FMA( x[83], La006, Lb[0]);
		Lb[0] = FMA( x[56], La600, Lb[0]);
		Lb[0] = FMA( x[105], La160, Lb[0]);
		Lb[0] = FMA( x[118], La016, Lb[0]);
		Lb[0] = FMA( x[113], La061, Lb[0]);
		Lb[0] = FMA( x[77], La060, Lb[0]);
		Lb[0] *= T(3.3333333333333337e-01);
		Lb[0] = FMA( x[89], La502, Lb[0]);
		Lb[0] = FMA( x[117], La025, Lb[0]);
		Lb[0] = FMA( x[99], La250, Lb[0]);
		Lb[0] = FMA( x[114], La052, Lb[0]);
		Lb[0] = FMA( x[104], La205, Lb[0]);
		Lb[0] = FMA( x[87], La520, Lb[0]);
		Lb[0] *= T(5.9999999999999998e-01);
		Lb[0] = FMA( x[94], La340, Lb[0]);
		Lb[0] = FMA( x[115], La043, Lb[0]);
		Lb[0] = FMA( x[98], La304, Lb[0]);
		Lb[0] = FMA( x[116], La034, Lb[0]);
		Lb[0] = FMA( x[93], La403, Lb[0]);
		Lb[0] = FMA( x[90], La430, Lb[0]);
		Lb[0] *= T(8.3333333333333326e-01);
		Lb[0] = FMA( x[82], La015, Lb[0]);
		Lb[0] = FMA( x[110], La115, Lb[0]);
		Lb[0] = FMA( x[71], La150, Lb[0]);
		Lb[0] = FMA( x[106], La151, Lb[0]);
		Lb[0] = FMA( x[55], La005, Lb[0]);
		Lb[0] = FMA( x[76], La105, Lb[0]);
		Lb[0] = FMA( x[88], La511, Lb[0]);
		Lb[0] = FMA( x[57], La510, Lb[0]);
		Lb[0] = FMA( x[58], La501, Lb[0]);
		Lb[0] = FMA( x[35], La500, Lb[0]);
		Lb[0] = FMA( x[78], La051, Lb[0]);
		Lb[0] = FMA( x[50], La050, Lb[0]);
		Lb[0] *= T(4.0000000000000002e-01);
		Lb[0] = FMA( x[61], La402, Lb[0]);
		Lb[0] = FMA( x[66], La240, Lb[0]);
		Lb[0] = FMA( x[103], La214, Lb[0]);
		Lb[0] = FMA( x[70], La204, Lb[0]);
		Lb[0] = FMA( x[91], La421, Lb[0]);
		Lb[0] = FMA( x[100], La241, Lb[0]);
		Lb[0] = FMA( x[59], La420, Lb[0]);
		Lb[0] = FMA( x[92], La412, Lb[0]);
		Lb[0] = FMA( x[109], La124, Lb[0]);
		Lb[0] = FMA( x[107], La142, Lb[0]);
		Lb[0] = FMA( x[79], La042, Lb[0]);
		Lb[0] = FMA( x[81], La024, Lb[0]);
		Lb[0] *= T(7.5000000000000000e-01);
		Lb[0] = FMA( x[65], La303, Lb[0]);
		Lb[0] = FMA( x[97], La313, Lb[0]);
		Lb[0] = FMA( x[108], La133, Lb[0]);
		Lb[0] = FMA( x[62], La330, Lb[0]);
		Lb[0] = FMA( x[95], La331, Lb[0]);
		Lb[0] = FMA( x[80], La033, Lb[0]);
		Lb[0] *= T(6.6666666666666663e-01);
		Lb[0] = FMA( x[20], La400, Lb[0]);
		Lb[0] = FMA( x[30], La040, Lb[0]);
		Lb[0] = FMA( x[51], La041, Lb[0]);
		Lb[0] = FMA( x[101], La232, Lb[0]);
		Lb[0] = FMA( x[102], La223, Lb[0]);
		Lb[0] = FMA( x[96], La322, Lb[0]);
		Lb[0] = FMA( x[37], La401, Lb[0]);
		Lb[0] = FMA( x[49], La104, Lb[0]);
		Lb[0] = FMA( x[75], La114, Lb[0]);
		Lb[0] = FMA( x[60], La411, Lb[0]);
		Lb[0] = FMA( x[34], La004, Lb[0]);
		Lb[0] = FMA( x[72], La141, Lb[0]);
		Lb[0] = FMA( x[45], La140, Lb[0]);
		Lb[0] = FMA( x[54], La014, Lb[0]);
		Lb[0] = FMA( x[36], La410, Lb[0]);
		Lb[0] *= T(5.0000000000000000e-01);
		Lb[0] = FMA( x[53], La023, Lb[0]);
		Lb[0] = FMA( x[40], La302, Lb[0]);
		Lb[0] = FMA( x[64], La312, Lb[0]);
		Lb[0] = FMA( x[74], La123, Lb[0]);
		Lb[0] = FMA( x[67], La231, Lb[0]);
		Lb[0] = FMA( x[41], La230, Lb[0]);
		Lb[0] = FMA( x[38], La320, Lb[0]);
		Lb[0] = FMA( x[63], La321, Lb[0]);
		Lb[0] = FMA( x[69], La213, Lb[0]);
		Lb[0] = FMA( x[73], La132, Lb[0]);
		Lb[0] = FMA( x[44], La203, Lb[0]);
		Lb[0] = FMA( x[52], La032, Lb[0]);
		Lb[0] *= T(6.6666666666666663e-01);
		Lb[0] = FMA( x[68], La222, Lb[0]);
		Lb[0] *= T(7.5000000000000000e-01);
		Lb[0] = FMA( x[16], La030, Lb[0]);
		Lb[0] = FMA( x[48], La113, Lb[0]);
		Lb[0] = FMA( x[33], La013, Lb[0]);
		Lb[0] = FMA( x[39], La311, Lb[0]);
		Lb[0] = FMA( x[21], La310, Lb[0]);
		Lb[0] = FMA( x[19], La003, Lb[0]);
		Lb[0] = FMA( x[31], La031, Lb[0]);
		Lb[0] = FMA( x[10], La300, Lb[0]);
		Lb[0] = FMA( x[46], La131, Lb[0]);
		Lb[0] = FMA( x[26], La130, Lb[0]);
		Lb[0] = FMA( x[29], La103, Lb[0]);
		Lb[0] = FMA( x[22], La301, Lb[0]);
		Lb[0] *= T(6.6666666666666663e-01);
		Lb[0] = FMA( x[23], La220, Lb[0]);
		Lb[0] = FMA( x[43], La212, Lb[0]);
		Lb[0] = FMA( x[47], La122, Lb[0]);
		Lb[0] = FMA( x[42], La221, Lb[0]);
		Lb[0] = FMA( x[25], La202, Lb[0]);
		Lb[0] = FMA( x[32], La022, Lb[0]);
		Lb[0] *= T(5.0000000000000000e-01);
		Lb[0] = FMA( x[13], La120, Lb[0]);
		Lb[0] = FMA( x[27], La121, Lb[0]);
		Lb[0] = FMA( x[18], La012, Lb[0]);
		Lb[0] = FMA( x[28], La112, Lb[0]);
		Lb[0] = FMA( x[7], La020, Lb[0]);
		Lb[0] = FMA( x[17], La021, Lb[0]);
		Lb[0] = FMA( x[9], La002, Lb[0]);
		Lb[0] = FMA( x[4], La200, Lb[0]);
		Lb[0] = FMA( x[12], La201, Lb[0]);
		Lb[0] = FMA( x[15], La102, Lb[0]);
		Lb[0] = FMA( x[11], La210, Lb[0]);
		Lb[0] = FMA( x[24], La211, Lb[0]);
		Lb[0] *= T(5.0000000000000000e-01);
		Lb[0] = FMA( x[3], La001, Lb[0]);
		Lb[0] = FMA( x[14], La111, Lb[0]);
		Lb[0] = FMA( x[5], La110, Lb[0]);
		Lb[0] = FMA( x[8], La011, Lb[0]);
		Lb[0] = FMA( x[2], La010, Lb[0]);
		Lb[0] = FMA( x[6], La101, Lb[0]);
		Lb[0] = FMA( x[1], La100, Lb[0]);
	}
	Lb[1] *= T(7.2000000000000000e+02);
	Lb[1] = FMA( x[56], La700, Lb[1]);
	Lb[1] = FMA( x[77], La160, Lb[1]);
	Lb[1] = FMA( x[83], La106, Lb[1]);
	Lb[1] *= T(1.6666666666666669e-01);
	Lb[1] = FMA( x[78], La151, Lb[1]);
	Lb[1] = FMA( x[50], La150, Lb[1]);
	Lb[1] = FMA( x[76], La205, Lb[1]);
	Lb[1] = FMA( x[82], La115, Lb[1]);
	Lb[1] = FMA( x[71], La250, Lb[1]);
	Lb[1] = FMA( x[35], La600, Lb[1]);
	Lb[1] = FMA( x[58], La601, Lb[1]);
	Lb[1] = FMA( x[57], La610, Lb[1]);
	Lb[1] = FMA( x[55], La105, Lb[1]);
	Lb[1] *= T(4.0000000000000002e-01);
	Lb[1] = FMA( x[59], La520, Lb[1]);
	Lb[1] = FMA( x[61], La502, Lb[1]);
	Lb[1] = FMA( x[70], La304, Lb[1]);
	Lb[1] = FMA( x[81], La124, Lb[1]);
	Lb[1] = FMA( x[79], La142, Lb[1]);
	Lb[1] = FMA( x[66], La340, Lb[1]);
	Lb[1] *= T(7.5000000000000000e-01);
	Lb[1] = FMA( x[62], La430, Lb[1]);
	Lb[1] = FMA( x[80], La133, Lb[1]);
	Lb[1] = FMA( x[65], La403, Lb[1]);
	Lb[1] *= T(6.6666666666666663e-01);
	Lb[1] = FMA( x[30], La140, Lb[1]);
	Lb[1] = FMA( x[45], La240, Lb[1]);
	Lb[1] = FMA( x[49], La204, Lb[1]);
	Lb[1] = FMA( x[75], La214, Lb[1]);
	Lb[1] = FMA( x[72], La241, Lb[1]);
	Lb[1] = FMA( x[34], La104, Lb[1]);
	Lb[1] = FMA( x[60], La511, Lb[1]);
	Lb[1] = FMA( x[54], La114, Lb[1]);
	Lb[1] = FMA( x[20], La500, Lb[1]);
	Lb[1] = FMA( x[36], La510, Lb[1]);
	Lb[1] = FMA( x[51], La141, Lb[1]);
	Lb[1] = FMA( x[37], La501, Lb[1]);
	Lb[1] *= T(5.0000000000000000e-01);
	Lb[1] = FMA( x[41], La330, Lb[1]);
	Lb[1] = FMA( x[73], La232, Lb[1]);
	Lb[1] = FMA( x[44], La303, Lb[1]);
	Lb[1] = FMA( x[69], La313, Lb[1]);
	Lb[1] = FMA( x[67], La331, Lb[1]);
	Lb[1] = FMA( x[63], La421, Lb[1]);
	Lb[1] = FMA( x[38], La420, Lb[1]);
	Lb[1] = FMA( x[40], La402, Lb[1]);
	Lb[1] = FMA( x[74], La223, Lb[1]);
	Lb[1] = FMA( x[64], La412, Lb[1]);
	Lb[1] = FMA( x[53], La123, Lb[1]);
	Lb[1] = FMA( x[52], La132, Lb[1]);
	Lb[1] *= T(6.6666666666666663e-01);
	Lb[1] = FMA( x[68], La322, Lb[1]);
	Lb[1] *= T(7.5000000000000000e-01);
	Lb[1] = FMA( x[26], La230, Lb[1]);
	Lb[1] = FMA( x[19], La103, Lb[1]);
	Lb[1] = FMA( x[33], La113, Lb[1]);
	Lb[1] = FMA( x[16], La130, Lb[1]);
	Lb[1] = FMA( x[31], La131, Lb[1]);
	Lb[1] = FMA( x[39], La411, Lb[1]);
	Lb[1] = FMA( x[21], La410, Lb[1]);
	Lb[1] = FMA( x[22], La401, Lb[1]);
	Lb[1] = FMA( x[10], La400, Lb[1]);
	Lb[1] = FMA( x[29], La203, Lb[1]);
	Lb[1] = FMA( x[46], La231, Lb[1]);
	Lb[1] = FMA( x[48], La213, Lb[1]);
	Lb[1] *= T(6.6666666666666663e-01);
	Lb[1] = FMA( x[23], La320, Lb[1]);
	Lb[1] = FMA( x[42], La321, Lb[1]);
	Lb[1] = FMA( x[43], La312, Lb[1]);
	Lb[1] = FMA( x[32], La122, Lb[1]);
	Lb[1] = FMA( x[47], La222, Lb[1]);
	Lb[1] = FMA( x[25], La302, Lb[1]);
	Lb[1] *= T(5.0000000000000000e-01);
	Lb[1] = FMA( x[9], La102, Lb[1]);
	Lb[1] = FMA( x[28], La212, Lb[1]);
	Lb[1] = FMA( x[18], La112, Lb[1]);
	Lb[1] = FMA( x[7], La120, Lb[1]);
	Lb[1] = FMA( x[17], La121, Lb[1]);
	Lb[1] = FMA( x[27], La221, Lb[1]);
	Lb[1] = FMA( x[4], La300, Lb[1]);
	Lb[1] = FMA( x[12], La301, Lb[1]);
	Lb[1] = FMA( x[13], La220, Lb[1]);
	Lb[1] = FMA( x[15], La202, Lb[1]);
	Lb[1] = FMA( x[11], La310, Lb[1]);
	Lb[1] = FMA( x[24], La311, Lb[1]);
	Lb[1] *= T(5.0000000000000000e-01);
	Lb[1] = FMA( x[1], La200, Lb[1]);
	Lb[1] = FMA( x[6], La201, Lb[1]);
	Lb[1] = FMA( x[3], La101, Lb[1]);
	Lb[1] = FMA( x[8], La111, Lb[1]);
	Lb[1] = FMA( x[2], La110, Lb[1]);
	Lb[1] = FMA( x[5], La210, Lb[1]);
	Lb[1] = FMA( x[14], La211, Lb[1]);
	Lb[2] *= T(7.2000000000000000e+02);
	Lb[2] = FMA( x[56], La610, Lb[2]);
	Lb[2] = FMA( x[77], La070, Lb[2]);
	Lb[2] = FMA( x[83], La016, Lb[2]);
	Lb[2] *= T(1.6666666666666669e-01);
	Lb[2] = FMA( x[78], La061, Lb[2]);
	Lb[2] = FMA( x[50], La060, Lb[2]);
	Lb[2] = FMA( x[76], La115, Lb[2]);
	Lb[2] = FMA( x[82], La025, Lb[2]);
	Lb[2] = FMA( x[71], La160, Lb[2]);
	Lb[2] = FMA( x[35], La510, Lb[2]);
	Lb[2] = FMA( x[58], La511, Lb[2]);
	Lb[2] = FMA( x[57], La520, Lb[2]);
	Lb[2] = FMA( x[55], La015, Lb[2]);
	Lb[2] *= T(4.0000000000000002e-01);
	Lb[2] = FMA( x[59], La430, Lb[2]);
	Lb[2] = FMA( x[61], La412, Lb[2]);
	Lb[2] = FMA( x[70], La214, Lb[2]);
	Lb[2] = FMA( x[81], La034, Lb[2]);
	Lb[2] = FMA( x[79], La052, Lb[2]);
	Lb[2] = FMA( x[66], La250, Lb[2]);
	Lb[2] *= T(7.5000000000000000e-01);
	Lb[2] = FMA( x[62], La340, Lb[2]);
	Lb[2] = FMA( x[80], La043, Lb[2]);
	Lb[2] = FMA( x[65], La313, Lb[2]);
	Lb[2] *= T(6.6666666666666663e-01);
	Lb[2] = FMA( x[30], La050, Lb[2]);
	Lb[2] = FMA( x[45], La150, Lb[2]);
	Lb[2] = FMA( x[49], La114, Lb[2]);
	Lb[2] = FMA( x[75], La124, Lb[2]);
	Lb[2] = FMA( x[72], La151, Lb[2]);
	Lb[2] = FMA( x[34], La014, Lb[2]);
	Lb[2] = FMA( x[60], La421, Lb[2]);
	Lb[2] = FMA( x[54], La024, Lb[2]);
	Lb[2] = FMA( x[20], La410, Lb[2]);
	Lb[2] = FMA( x[36], La420, Lb[2]);
	Lb[2] = FMA( x[51], La051, Lb[2]);
	Lb[2] = FMA( x[37], La411, Lb[2]);
	Lb[2] *= T(5.0000000000000000e-01);
	Lb[2] = FMA( x[41], La240, Lb[2]);
	Lb[2] = FMA( x[73], La142, Lb[2]);
	Lb[2] = FMA( x[44], La213, Lb[2]);
	Lb[2] = FMA( x[69], La223, Lb[2]);
	Lb[2] = FMA( x[67], La241, Lb[2]);
	Lb[2] = FMA( x[63], La331, Lb[2]);
	Lb[2] = FMA( x[38], La330, Lb[2]);
	Lb[2] = FMA( x[40], La312, Lb[2]);
	Lb[2] = FMA( x[74], La133, Lb[2]);
	Lb[2] = FMA( x[64], La322, Lb[2]);
	Lb[2] = FMA( x[53], La033, Lb[2]);
	Lb[2] = FMA( x[52], La042, Lb[2]);
	Lb[2] *= T(6.6666666666666663e-01);
	Lb[2] = FMA( x[68], La232, Lb[2]);
	Lb[2] *= T(7.5000000000000000e-01);
	Lb[2] = FMA( x[26], La140, Lb[2]);
	Lb[2] = FMA( x[19], La013, Lb[2]);
	Lb[2] = FMA( x[33], La023, Lb[2]);
	Lb[2] = FMA( x[16], La040, Lb[2]);
	Lb[2] = FMA( x[31], La041, Lb[2]);
	Lb[2] = FMA( x[39], La321, Lb[2]);
	Lb[2] = FMA( x[21], La320, Lb[2]);
	Lb[2] = FMA( x[22], La311, Lb[2]);
	Lb[2] = FMA( x[10], La310, Lb[2]);
	Lb[2] = FMA( x[29], La113, Lb[2]);
	Lb[2] = FMA( x[46], La141, Lb[2]);
	Lb[2] = FMA( x[48], La123, Lb[2]);
	Lb[2] *= T(6.6666666666666663e-01);
	Lb[2] = FMA( x[23], La230, Lb[2]);
	Lb[2] = FMA( x[42], La231, Lb[2]);
	Lb[2] = FMA( x[43], La222, Lb[2]);
	Lb[2] = FMA( x[32], La032, Lb[2]);
	Lb[2] = FMA( x[47], La132, Lb[2]);
	Lb[2] = FMA( x[25], La212, Lb[2]);
	Lb[2] *= T(5.0000000000000000e-01);
	Lb[2] = FMA( x[9], La012, Lb[2]);
	Lb[2] = FMA( x[28], La122, Lb[2]);
	Lb[2] = FMA( x[18], La022, Lb[2]);
	Lb[2] = FMA( x[7], La030, Lb[2]);
	Lb[2] = FMA( x[17], La031, Lb[2]);
	Lb[2] = FMA( x[27], La131, Lb[2]);
	Lb[2] = FMA( x[4], La210, Lb[2]);
	Lb[2] = FMA( x[12], La211, Lb[2]);
	Lb[2] = FMA( x[13], La130, Lb[2]);
	Lb[2] = FMA( x[15], La112, Lb[2]);
	Lb[2] = FMA( x[11], La220, Lb[2]);
	Lb[2] = FMA( x[24], La221, Lb[2]);
	Lb[2] *= T(5.0000000000000000e-01);
	Lb[2] = FMA( x[1], La110, Lb[2]);
	Lb[2] = FMA( x[6], La111, Lb[2]);
	Lb[2] = FMA( x[3], La011, Lb[2]);
	Lb[2] = FMA( x[8], La021, Lb[2]);
	Lb[2] = FMA( x[2], La020, Lb[2]);
	Lb[2] = FMA( x[5], La120, Lb[2]);
	Lb[2] = FMA( x[14], La121, Lb[2]);
	Lb[3] *= T(1.2000000000000000e+02);
	Lb[3] = FMA( x[35], La700, Lb[3]);
	Lb[3] = FMA( x[50], La250, Lb[3]);
	Lb[3] = FMA( x[55], La205, Lb[3]);
	Lb[3] *= T(2.0000000000000001e-01);
	Lb[3] = FMA( x[36], La610, Lb[3]);
	Lb[3] = FMA( x[37], La601, Lb[3]);
	Lb[3] = FMA( x[20], La600, Lb[3]);
	Lb[3] = FMA( x[45], La340, Lb[3]);
	Lb[3] = FMA( x[54], La214, Lb[3]);
	Lb[3] = FMA( x[49], La304, Lb[3]);
	Lb[3] = FMA( x[34], La204, Lb[3]);
	Lb[3] = FMA( x[51], La241, Lb[3]);
	Lb[3] = FMA( x[30], La240, Lb[3]);
	Lb[3] *= T(5.0000000000000000e-01);
	Lb[3] = FMA( x[40], La502, Lb[3]);
	Lb[3] = FMA( x[44], La403, Lb[3]);
	Lb[3] = FMA( x[41], La430, Lb[3]);
	Lb[3] = FMA( x[52], La232, Lb[3]);
	Lb[3] = FMA( x[53], La223, Lb[3]);
	Lb[3] = FMA( x[38], La520, Lb[3]);
	Lb[3] *= T(5.0000000000000000e-01);
	Lb[3] = FMA( x[16], La230, Lb[3]);
	Lb[3] = FMA( x[19], La203, Lb[3]);
	Lb[3] = FMA( x[33], La213, Lb[3]);
	Lb[3] = FMA( x[46], La331, Lb[3]);
	Lb[3] = FMA( x[26], La330, Lb[3]);
	Lb[3] = FMA( x[48], La313, Lb[3]);
	Lb[3] = FMA( x[10], La500, Lb[3]);
	Lb[3] = FMA( x[39], La511, Lb[3]);
	Lb[3] = FMA( x[29], La303, Lb[3]);
	Lb[3] = FMA( x[22], La501, Lb[3]);
	Lb[3] = FMA( x[21], La510, Lb[3]);
	Lb[3] = FMA( x[31], La231, Lb[3]);
	Lb[3] *= T(6.6666666666666663e-01);
	Lb[3] = FMA( x[42], La421, Lb[3]);
	Lb[3] = FMA( x[23], La420, Lb[3]);
	Lb[3] = FMA( x[43], La412, Lb[3]);
	Lb[3] = FMA( x[47], La322, Lb[3]);
	Lb[3] = FMA( x[32], La222, Lb[3]);
	Lb[3] = FMA( x[25], La402, Lb[3]);
	Lb[3] *= T(5.0000000000000000e-01);
	Lb[3] = FMA( x[28], La312, Lb[3]);
	Lb[3] = FMA( x[24], La411, Lb[3]);
	Lb[3] = FMA( x[11], La410, Lb[3]);
	Lb[3] = FMA( x[12], La401, Lb[3]);
	Lb[3] = FMA( x[4], La400, Lb[3]);
	Lb[3] = FMA( x[27], La321, Lb[3]);
	Lb[3] = FMA( x[13], La320, Lb[3]);
	Lb[3] = FMA( x[15], La302, Lb[3]);
	Lb[3] = FMA( x[17], La221, Lb[3]);
	Lb[3] = FMA( x[7], La220, Lb[3]);
	Lb[3] = FMA( x[18], La212, Lb[3]);
	Lb[3] = FMA( x[9], La202, Lb[3]);
	Lb[3] *= T(5.0000000000000000e-01);
	Lb[3] = FMA( x[3], La201, Lb[3]);
	Lb[3] = FMA( x[14], La311, Lb[3]);
	Lb[3] = FMA( x[5], La310, Lb[3]);
	Lb[3] = FMA( x[6], La301, Lb[3]);
	Lb[3] = FMA( x[1], La300, Lb[3]);
	Lb[3] = FMA( x[8], La211, Lb[3]);
	Lb[3] = FMA( x[2], La210, Lb[3]);
	Lb[4] *= T(1.2000000000000000e+02);
	Lb[4] = FMA( x[35], La610, Lb[4]);
	Lb[4] = FMA( x[50], La160, Lb[4]);
	Lb[4] = FMA( x[55], La115, Lb[4]);
	Lb[4] *= T(2.0000000000000001e-01);
	Lb[4] = FMA( x[36], La520, Lb[4]);
	Lb[4] = FMA( x[37], La511, Lb[4]);
	Lb[4] = FMA( x[20], La510, Lb[4]);
	Lb[4] = FMA( x[45], La250, Lb[4]);
	Lb[4] = FMA( x[54], La124, Lb[4]);
	Lb[4] = FMA( x[49], La214, Lb[4]);
	Lb[4] = FMA( x[34], La114, Lb[4]);
	Lb[4] = FMA( x[51], La151, Lb[4]);
	Lb[4] = FMA( x[30], La150, Lb[4]);
	Lb[4] *= T(5.0000000000000000e-01);
	Lb[4] = FMA( x[40], La412, Lb[4]);
	Lb[4] = FMA( x[44], La313, Lb[4]);
	Lb[4] = FMA( x[41], La340, Lb[4]);
	Lb[4] = FMA( x[52], La142, Lb[4]);
	Lb[4] = FMA( x[53], La133, Lb[4]);
	Lb[4] = FMA( x[38], La430, Lb[4]);
	Lb[4] *= T(5.0000000000000000e-01);
	Lb[4] = FMA( x[16], La140, Lb[4]);
	Lb[4] = FMA( x[19], La113, Lb[4]);
	Lb[4] = FMA( x[33], La123, Lb[4]);
	Lb[4] = FMA( x[46], La241, Lb[4]);
	Lb[4] = FMA( x[26], La240, Lb[4]);
	Lb[4] = FMA( x[48], La223, Lb[4]);
	Lb[4] = FMA( x[10], La410, Lb[4]);
	Lb[4] = FMA( x[39], La421, Lb[4]);
	Lb[4] = FMA( x[29], La213, Lb[4]);
	Lb[4] = FMA( x[22], La411, Lb[4]);
	Lb[4] = FMA( x[21], La420, Lb[4]);
	Lb[4] = FMA( x[31], La141, Lb[4]);
	Lb[4] *= T(6.6666666666666663e-01);
	Lb[4] = FMA( x[42], La331, Lb[4]);
	Lb[4] = FMA( x[23], La330, Lb[4]);
	Lb[4] = FMA( x[43], La322, Lb[4]);
	Lb[4] = FMA( x[47], La232, Lb[4]);
	Lb[4] = FMA( x[32], La132, Lb[4]);
	Lb[4] = FMA( x[25], La312, Lb[4]);
	Lb[4] *= T(5.0000000000000000e-01);
	Lb[4] = FMA( x[28], La222, Lb[4]);
	Lb[4] = FMA( x[24], La321, Lb[4]);
	Lb[4] = FMA( x[11], La320, Lb[4]);
	Lb[4] = FMA( x[12], La311, Lb[4]);
	Lb[4] = FMA( x[4], La310, Lb[4]);
	Lb[4] = FMA( x[27], La231, Lb[4]);
	Lb[4] = FMA( x[13], La230, Lb[4]);
	Lb[4] = FMA( x[15], La212, Lb[4]);
	Lb[4] = FMA( x[17], La131, Lb[4]);
	Lb[4] = FMA( x[7], La130, Lb[4]);
	Lb[4] = FMA( x[18], La122, Lb[4]);
	Lb[4] = FMA( x[9], La112, Lb[4]);
	Lb[4] *= T(5.0000000000000000e-01);
	Lb[4] = FMA( x[3], La111, Lb[4]);
	Lb[4] = FMA( x[14], La221, Lb[4]);
	Lb[4] = FMA( x[5], La220, Lb[4]);
	Lb[4] = FMA( x[6], La211, Lb[4]);
	Lb[4] = FMA( x[1], La210, Lb[4]);
	Lb[4] = FMA( x[8], La121, Lb[4]);
	Lb[4] = FMA( x[2], La120, Lb[4]);
	Lb[5] *= T(1.2000000000000000e+02);
	Lb[5] = FMA( x[35], La520, Lb[5]);
	Lb[5] = FMA( x[50], La070, Lb[5]);
	Lb[5] = FMA( x[55], La025, Lb[5]);
	Lb[5] *= T(2.0000000000000001e-01);
	Lb[5] = FMA( x[36], La430, Lb[5]);
	Lb[5] = FMA( x[37], La421, Lb[5]);
	Lb[5] = FMA( x[20], La420, Lb[5]);
	Lb[5] = FMA( x[45], La160, Lb[5]);
	Lb[5] = FMA( x[54], La034, Lb[5]);
	Lb[5] = FMA( x[49], La124, Lb[5]);
	Lb[5] = FMA( x[34], La024, Lb[5]);
	Lb[5] = FMA( x[51], La061, Lb[5]);
	Lb[5] = FMA( x[30], La060, Lb[5]);
	Lb[5] *= T(5.0000000000000000e-01);
	Lb[5] = FMA( x[40], La322, Lb[5]);
	Lb[5] = FMA( x[44], La223, Lb[5]);
	Lb[5] = FMA( x[41], La250, Lb[5]);
	Lb[5] = FMA( x[52], La052, Lb[5]);
	Lb[5] = FMA( x[53], La043, Lb[5]);
	Lb[5] = FMA( x[38], La340, Lb[5]);
	Lb[5] *= T(5.0000000000000000e-01);
	Lb[5] = FMA( x[16], La050, Lb[5]);
	Lb[5] = FMA( x[19], La023, Lb[5]);
	Lb[5] = FMA( x[33], La033, Lb[5]);
	Lb[5] = FMA( x[46], La151, Lb[5]);
	Lb[5] = FMA( x[26], La150, Lb[5]);
	Lb[5] = FMA( x[48], La133, Lb[5]);
	Lb[5] = FMA( x[10], La320, Lb[5]);
	Lb[5] = FMA( x[39], La331, Lb[5]);
	Lb[5] = FMA( x[29], La123, Lb[5]);
	Lb[5] = FMA( x[22], La321, Lb[5]);
	Lb[5] = FMA( x[21], La330, Lb[5]);
	Lb[5] = FMA( x[31], La051, Lb[5]);
	Lb[5] *= T(6.6666666666666663e-01);
	Lb[5] = FMA( x[42], La241, Lb[5]);
	Lb[5] = FMA( x[23], La240, Lb[5]);
	Lb[5] = FMA( x[43], La232, Lb[5]);
	Lb[5] = FMA( x[47], La142, Lb[5]);
	Lb[5] = FMA( x[32], La042, Lb[5]);
	Lb[5] = FMA( x[25], La222, Lb[5]);
	Lb[5] *= T(5.0000000000000000e-01);
	Lb[5] = FMA( x[28], La132, Lb[5]);
	Lb[5] = FMA( x[24], La231, Lb[5]);
	Lb[5] = FMA( x[11], La230, Lb[5]);
	Lb[5] = FMA( x[12], La221, Lb[5]);
	Lb[5] = FMA( x[4], La220, Lb[5]);
	Lb[5] = FMA( x[27], La141, Lb[5]);
	Lb[5] = FMA( x[13], La140, Lb[5]);
	Lb[5] = FMA( x[15], La122, Lb[5]);
	Lb[5] = FMA( x[17], La041, Lb[5]);
	Lb[5] = FMA( x[7], La040, Lb[5]);
	Lb[5] = FMA( x[18], La032, Lb[5]);
	Lb[5] = FMA( x[9], La022, Lb[5]);
	Lb[5] *= T(5.0000000000000000e-01);
	Lb[5] = FMA( x[3], La021, Lb[5]);
	Lb[5] = FMA( x[14], La131, Lb[5]);
	Lb[5] = FMA( x[5], La130, Lb[5]);
	Lb[5] = FMA( x[6], La121, Lb[5]);
	Lb[5] = FMA( x[1], La120, Lb[5]);
	Lb[5] = FMA( x[8], La031, Lb[5]);
	Lb[5] = FMA( x[2], La030, Lb[5]);
	Lb[6] *= T(2.4000000000000000e+01);
	Lb[6] = FMA( x[20], La700, Lb[6]);
	Lb[6] = FMA( x[34], La304, Lb[6]);
	Lb[6] = FMA( x[30], La340, Lb[6]);
	Lb[6] *= T(2.5000000000000000e-01);
	Lb[6] = FMA( x[29], La403, Lb[6]);
	Lb[6] = FMA( x[21], La610, Lb[6]);
	Lb[6] = FMA( x[22], La601, Lb[6]);
	Lb[6] = FMA( x[10], La600, Lb[6]);
	Lb[6] = FMA( x[26], La430, Lb[6]);
	Lb[6] = FMA( x[31], La331, Lb[6]);
	Lb[6] = FMA( x[16], La330, Lb[6]);
	Lb[6] = FMA( x[19], La303, Lb[6]);
	Lb[6] = FMA( x[33], La313, Lb[6]);
	Lb[6] *= T(6.6666666666666663e-01);
	Lb[6] = FMA( x[23], La520, Lb[6]);
	Lb[6] = FMA( x[25], La502, Lb[6]);
	Lb[6] = FMA( x[32], La322, Lb[6]);
	Lb[6] *= T(5.0000000000000000e-01);
	Lb[6] = FMA( x[27], La421, Lb[6]);
	Lb[6] = FMA( x[9], La302, Lb[6]);
	Lb[6] = FMA( x[24], La511, Lb[6]);
	Lb[6] = FMA( x[11], La510, Lb[6]);
	Lb[6] = FMA( x[12], La501, Lb[6]);
	Lb[6] = FMA( x[4], La500, Lb[6]);
	Lb[6] = FMA( x[18], La312, Lb[6]);
	Lb[6] = FMA( x[13], La420, Lb[6]);
	Lb[6] = FMA( x[28], La412, Lb[6]);
	Lb[6] = FMA( x[15], La402, Lb[6]);
	Lb[6] = FMA( x[7], La320, Lb[6]);
	Lb[6] = FMA( x[17], La321, Lb[6]);
	Lb[6] *= T(5.0000000000000000e-01);
	Lb[6] = FMA( x[14], La411, Lb[6]);
	Lb[6] = FMA( x[5], La410, Lb[6]);
	Lb[6] = FMA( x[3], La301, Lb[6]);
	Lb[6] = FMA( x[6], La401, Lb[6]);
	Lb[6] = FMA( x[1], La400, Lb[6]);
	Lb[6] = FMA( x[8], La311, Lb[6]);
	Lb[6] = FMA( x[2], La310, Lb[6]);
	Lb[7] *= T(2.4000000000000000e+01);
	Lb[7] = FMA( x[20], La610, Lb[7]);
	Lb[7] = FMA( x[34], La214, Lb[7]);
	Lb[7] = FMA( x[30], La250, Lb[7]);
	Lb[7] *= T(2.5000000000000000e-01);
	Lb[7] = FMA( x[29], La313, Lb[7]);
	Lb[7] = FMA( x[21], La520, Lb[7]);
	Lb[7] = FMA( x[22], La511, Lb[7]);
	Lb[7] = FMA( x[10], La510, Lb[7]);
	Lb[7] = FMA( x[26], La340, Lb[7]);
	Lb[7] = FMA( x[31], La241, Lb[7]);
	Lb[7] = FMA( x[16], La240, Lb[7]);
	Lb[7] = FMA( x[19], La213, Lb[7]);
	Lb[7] = FMA( x[33], La223, Lb[7]);
	Lb[7] *= T(6.6666666666666663e-01);
	Lb[7] = FMA( x[23], La430, Lb[7]);
	Lb[7] = FMA( x[25], La412, Lb[7]);
	Lb[7] = FMA( x[32], La232, Lb[7]);
	Lb[7] *= T(5.0000000000000000e-01);
	Lb[7] = FMA( x[27], La331, Lb[7]);
	Lb[7] = FMA( x[9], La212, Lb[7]);
	Lb[7] = FMA( x[24], La421, Lb[7]);
	Lb[7] = FMA( x[11], La420, Lb[7]);
	Lb[7] = FMA( x[12], La411, Lb[7]);
	Lb[7] = FMA( x[4], La410, Lb[7]);
	Lb[7] = FMA( x[18], La222, Lb[7]);
	Lb[7] = FMA( x[13], La330, Lb[7]);
	Lb[7] = FMA( x[28], La322, Lb[7]);
	Lb[7] = FMA( x[15], La312, Lb[7]);
	Lb[7] = FMA( x[7], La230, Lb[7]);
	Lb[7] = FMA( x[17], La231, Lb[7]);
	Lb[7] *= T(5.0000000000000000e-01);
	Lb[7] = FMA( x[14], La321, Lb[7]);
	Lb[7] = FMA( x[5], La320, Lb[7]);
	Lb[7] = FMA( x[3], La211, Lb[7]);
	Lb[7] = FMA( x[6], La311, Lb[7]);
	Lb[7] = FMA( x[1], La310, Lb[7]);
	Lb[7] = FMA( x[8], La221, Lb[7]);
	Lb[7] = FMA( x[2], La220, Lb[7]);
	Lb[8] *= T(2.4000000000000000e+01);
	Lb[8] = FMA( x[20], La520, Lb[8]);
	Lb[8] = FMA( x[34], La124, Lb[8]);
	Lb[8] = FMA( x[30], La160, Lb[8]);
	Lb[8] *= T(2.5000000000000000e-01);
	Lb[8] = FMA( x[29], La223, Lb[8]);
	Lb[8] = FMA( x[21], La430, Lb[8]);
	Lb[8] = FMA( x[22], La421, Lb[8]);
	Lb[8] = FMA( x[10], La420, Lb[8]);
	Lb[8] = FMA( x[26], La250, Lb[8]);
	Lb[8] = FMA( x[31], La151, Lb[8]);
	Lb[8] = FMA( x[16], La150, Lb[8]);
	Lb[8] = FMA( x[19], La123, Lb[8]);
	Lb[8] = FMA( x[33], La133, Lb[8]);
	Lb[8] *= T(6.6666666666666663e-01);
	Lb[8] = FMA( x[23], La340, Lb[8]);
	Lb[8] = FMA( x[25], La322, Lb[8]);
	Lb[8] = FMA( x[32], La142, Lb[8]);
	Lb[8] *= T(5.0000000000000000e-01);
	Lb[8] = FMA( x[27], La241, Lb[8]);
	Lb[8] = FMA( x[9], La122, Lb[8]);
	Lb[8] = FMA( x[24], La331, Lb[8]);
	Lb[8] = FMA( x[11], La330, Lb[8]);
	Lb[8] = FMA( x[12], La321, Lb[8]);
	Lb[8] = FMA( x[4], La320, Lb[8]);
	Lb[8] = FMA( x[18], La132, Lb[8]);
	Lb[8] = FMA( x[13], La240, Lb[8]);
	Lb[8] = FMA( x[28], La232, Lb[8]);
	Lb[8] = FMA( x[15], La222, Lb[8]);
	Lb[8] = FMA( x[7], La140, Lb[8]);
	Lb[8] = FMA( x[17], La141, Lb[8]);
	Lb[8] *= T(5.0000000000000000e-01);
	Lb[8] = FMA( x[14], La231, Lb[8]);
	Lb[8] = FMA( x[5], La230, Lb[8]);
	Lb[8] = FMA( x[3], La121, Lb[8]);
	Lb[8] = FMA( x[6], La221, Lb[8]);
	Lb[8] = FMA( x[1], La220, Lb[8]);
	Lb[8] = FMA( x[8], La131, Lb[8]);
	Lb[8] = FMA( x[2], La130, Lb[8]);
	Lb[9] *= T(2.4000000000000000e+01);
	Lb[9] = FMA( x[20], La430, Lb[9]);
	Lb[9] = FMA( x[34], La034, Lb[9]);
	Lb[9] = FMA( x[30], La070, Lb[9]);
	Lb[9] *= T(2.5000000000000000e-01);
	Lb[9] = FMA( x[29], La133, Lb[9]);
	Lb[9] = FMA( x[21], La340, Lb[9]);
	Lb[9] = FMA( x[22], La331, Lb[9]);
	Lb[9] = FMA( x[10], La330, Lb[9]);
	Lb[9] = FMA( x[26], La160, Lb[9]);
	Lb[9] = FMA( x[31], La061, Lb[9]);
	Lb[9] = FMA( x[16], La060, Lb[9]);
	Lb[9] = FMA( x[19], La033, Lb[9]);
	Lb[9] = FMA( x[33], La043, Lb[9]);
	Lb[9] *= T(6.6666666666666663e-01);
	Lb[9] = FMA( x[23], La250, Lb[9]);
	Lb[9] = FMA( x[25], La232, Lb[9]);
	Lb[9] = FMA( x[32], La052, Lb[9]);
	Lb[9] *= T(5.0000000000000000e-01);
	Lb[9] = FMA( x[27], La151, Lb[9]);
	Lb[9] = FMA( x[9], La032, Lb[9]);
	Lb[9] = FMA( x[24], La241, Lb[9]);
	Lb[9] = FMA( x[11], La240, Lb[9]);
	Lb[9] = FMA( x[12], La231, Lb[9]);
	Lb[9] = FMA( x[4], La230, Lb[9]);
	Lb[9] = FMA( x[18], La042, Lb[9]);
	Lb[9] = FMA( x[13], La150, Lb[9]);
	Lb[9] = FMA( x[28], La142, Lb[9]);
	Lb[9] = FMA( x[15], La132, Lb[9]);
	Lb[9] = FMA( x[7], La050, Lb[9]);
	Lb[9] = FMA( x[17], La051, Lb[9]);
	Lb[9] *= T(5.0000000000000000e-01);
	Lb[9] = FMA( x[14], La141, Lb[9]);
	Lb[9] = FMA( x[5], La140, Lb[9]);
	Lb[9] = FMA( x[3], La031, Lb[9]);
	Lb[9] = FMA( x[6], La131, Lb[9]);
	Lb[9] = FMA( x[1], La130, Lb[9]);
	Lb[9] = FMA( x[8], La041, Lb[9]);
	Lb[9] = FMA( x[2], La040, Lb[9]);
	Lb[10] *= T(6.0000000000000000e+00);
	Lb[10] = FMA( x[10], La700, Lb[10]);
	Lb[10] = FMA( x[19], La403, Lb[10]);
	Lb[10] = FMA( x[16], La430, Lb[10]);
	Lb[10] *= T(3.3333333333333331e-01);
	Lb[10] = FMA( x[9], La402, Lb[10]);
	Lb[10] = FMA( x[11], La610, Lb[10]);
	Lb[10] = FMA( x[12], La601, Lb[10]);
	Lb[10] = FMA( x[4], La600, Lb[10]);
	Lb[10] = FMA( x[13], La520, Lb[10]);
	Lb[10] = FMA( x[15], La502, Lb[10]);
	Lb[10] = FMA( x[17], La421, Lb[10]);
	Lb[10] = FMA( x[7], La420, Lb[10]);
	Lb[10] = FMA( x[18], La412, Lb[10]);
	Lb[10] *= T(5.0000000000000000e-01);
	Lb[10] = FMA( x[1], La500, Lb[10]);
	Lb[10] = FMA( x[6], La501, Lb[10]);
	Lb[10] = FMA( x[5], La510, Lb[10]);
	Lb[10] = FMA( x[14], La511, Lb[10]);
	Lb[10] = FMA( x[8], La411, Lb[10]);
	Lb[10] = FMA( x[2], La410, Lb[10]);
	Lb[10] = FMA( x[3], La401, Lb[10]);
	Lb[11] *= T(6.0000000000000000e+00);
	Lb[11] = FMA( x[10], La610, Lb[11]);
	Lb[11] = FMA( x[19], La313, Lb[11]);
	Lb[11] = FMA( x[16], La340, Lb[11]);
	Lb[11] *= T(3.3333333333333331e-01);
	Lb[11] = FMA( x[9], La312, Lb[11]);
	Lb[11] = FMA( x[11], La520, Lb[11]);
	Lb[11] = FMA( x[12], La511, Lb[11]);
	Lb[11] = FMA( x[4], La510, Lb[11]);
	Lb[11] = FMA( x[13], La430, Lb[11]);
	Lb[11] = FMA( x[15], La412, Lb[11]);
	Lb[11] = FMA( x[17], La331, Lb[11]);
	Lb[11] = FMA( x[7], La330, Lb[11]);
	Lb[11] = FMA( x[18], La322, Lb[11]);
	Lb[11] *= T(5.0000000000000000e-01);
	Lb[11] = FMA( x[1], La410, Lb[11]);
	Lb[11] = FMA( x[6], La411, Lb[11]);
	Lb[11] = FMA( x[5], La420, Lb[11]);
	Lb[11] = FMA( x[14], La421, Lb[11]);
	Lb[11] = FMA( x[8], La321, Lb[11]);
	Lb[11] = FMA( x[2], La320, Lb[11]);
	Lb[11] = FMA( x[3], La311, Lb[11]);
	Lb[12] *= T(6.0000000000000000e+00);
	Lb[12] = FMA( x[10], La520, Lb[12]);
	Lb[12] = FMA( x[19], La223, Lb[12]);
	Lb[12] = FMA( x[16], La250, Lb[12]);
	Lb[12] *= T(3.3333333333333331e-01);
	Lb[12] = FMA( x[9], La222, Lb[12]);
	Lb[12] = FMA( x[11], La430, Lb[12]);
	Lb[12] = FMA( x[12], La421, Lb[12]);
	Lb[12] = FMA( x[4], La420, Lb[12]);
	Lb[12] = FMA( x[13], La340, Lb[12]);
	Lb[12] = FMA( x[15], La322, Lb[12]);
	Lb[12] = FMA( x[17], La241, Lb[12]);
	Lb[12] = FMA( x[7], La240, Lb[12]);
	Lb[12] = FMA( x[18], La232, Lb[12]);
	Lb[12] *= T(5.0000000000000000e-01);
	Lb[12] = FMA( x[1], La320, Lb[12]);
	Lb[12] = FMA( x[6], La321, Lb[12]);
	Lb[12] = FMA( x[5], La330, Lb[12]);
	Lb[12] = FMA( x[14], La331, Lb[12]);
	Lb[12] = FMA( x[8], La231, Lb[12]);
	Lb[12] = FMA( x[2], La230, Lb[12]);
	Lb[12] = FMA( x[3], La221, Lb[12]);
	Lb[13] *= T(6.0000000000000000e+00);
	Lb[13] = FMA( x[10], La430, Lb[13]);
	Lb[13] = FMA( x[19], La133, Lb[13]);
	Lb[13] = FMA( x[16], La160, Lb[13]);
	Lb[13] *= T(3.3333333333333331e-01);
	Lb[13] = FMA( x[9], La132, Lb[13]);
	Lb[13] = FMA( x[11], La340, Lb[13]);
	Lb[13] = FMA( x[12], La331, Lb[13]);
	Lb[13] = FMA( x[4], La330, Lb[13]);
	Lb[13] = FMA( x[13], La250, Lb[13]);
	Lb[13] = FMA( x[15], La232, Lb[13]);
	Lb[13] = FMA( x[17], La151, Lb[13]);
	Lb[13] = FMA( x[7], La150, Lb[13]);
	Lb[13] = FMA( x[18], La142, Lb[13]);
	Lb[13] *= T(5.0000000000000000e-01);
	Lb[13] = FMA( x[1], La230, Lb[13]);
	Lb[13] = FMA( x[6], La231, Lb[13]);
	Lb[13] = FMA( x[5], La240, Lb[13]);
	Lb[13] = FMA( x[14], La241, Lb[13]);
	Lb[13] = FMA( x[8], La141, Lb[13]);
	Lb[13] = FMA( x[2], La140, Lb[13]);
	Lb[13] = FMA( x[3], La131, Lb[13]);
	Lb[14] *= T(6.0000000000000000e+00);
	Lb[14] = FMA( x[10], La340, Lb[14]);
	Lb[14] = FMA( x[19], La043, Lb[14]);
	Lb[14] = FMA( x[16], La070, Lb[14]);
	Lb[14] *= T(3.3333333333333331e-01);
	Lb[14] = FMA( x[9], La042, Lb[14]);
	Lb[14] = FMA( x[11], La250, Lb[14]);
	Lb[14] = FMA( x[12], La241, Lb[14]);
	Lb[14] = FMA( x[4], La240, Lb[14]);
	Lb[14] = FMA( x[13], La160, Lb[14]);
	Lb[14] = FMA( x[15], La142, Lb[14]);
	Lb[14] = FMA( x[17], La061, Lb[14]);
	Lb[14] = FMA( x[7], La060, Lb[14]);
	Lb[14] = FMA( x[18], La052, Lb[14]);
	Lb[14] *= T(5.0000000000000000e-01);
	Lb[14] = FMA( x[1], La140, Lb[14]);
	Lb[14] = FMA( x[6], La141, Lb[14]);
	Lb[14] = FMA( x[5], La150, Lb[14]);
	Lb[14] = FMA( x[14], La151, Lb[14]);
	Lb[14] = FMA( x[8], La051, Lb[14]);
	Lb[14] = FMA( x[2], La050, Lb[14]);
	Lb[14] = FMA( x[3], La041, Lb[14]);
	Lb[15] *= T(2.0000000000000000e+00);
	Lb[15] = FMA( x[9], La502, Lb[15]);
	Lb[15] = FMA( x[7], La520, Lb[15]);
	Lb[15] = FMA( x[4], La700, Lb[15]);
	Lb[15] *= T(5.0000000000000000e-01);
	Lb[15] = FMA( x[3], La501, Lb[15]);
	Lb[15] = FMA( x[2], La510, Lb[15]);
	Lb[15] = FMA( x[8], La511, Lb[15]);
	Lb[15] = FMA( x[1], La600, Lb[15]);
	Lb[15] = FMA( x[6], La601, Lb[15]);
	Lb[15] = FMA( x[5], La610, Lb[15]);
	Lb[16] *= T(2.0000000000000000e+00);
	Lb[16] = FMA( x[9], La412, Lb[16]);
	Lb[16] = FMA( x[7], La430, Lb[16]);
	Lb[16] = FMA( x[4], La610, Lb[16]);
	Lb[16] *= T(5.0000000000000000e-01);
	Lb[16] = FMA( x[3], La411, Lb[16]);
	Lb[16] = FMA( x[2], La420, Lb[16]);
	Lb[16] = FMA( x[8], La421, Lb[16]);
	Lb[16] = FMA( x[1], La510, Lb[16]);
	Lb[16] = FMA( x[6], La511, Lb[16]);
	Lb[16] = FMA( x[5], La520, Lb[16]);
	Lb[17] *= T(2.0000000000000000e+00);
	Lb[17] = FMA( x[9], La322, Lb[17]);
	Lb[17] = FMA( x[7], La340, Lb[17]);
	Lb[17] = FMA( x[4], La520, Lb[17]);
	Lb[17] *= T(5.0000000000000000e-01);
	Lb[17] = FMA( x[3], La321, Lb[17]);
	Lb[17] = FMA( x[2], La330, Lb[17]);
	Lb[17] = FMA( x[8], La331, Lb[17]);
	Lb[17] = FMA( x[1], La420, Lb[17]);
	Lb[17] = FMA( x[6], La421, Lb[17]);
	Lb[17] = FMA( x[5], La430, Lb[17]);
	Lb[18] *= T(2.0000000000000000e+00);
	Lb[18] = FMA( x[9], La232, Lb[18]);
	Lb[18] = FMA( x[7], La250, Lb[18]);
	Lb[18] = FMA( x[4], La430, Lb[18]);
	Lb[18] *= T(5.0000000000000000e-01);
	Lb[18] = FMA( x[3], La231, Lb[18]);
	Lb[18] = FMA( x[2], La240, Lb[18]);
	Lb[18] = FMA( x[8], La241, Lb[18]);
	Lb[18] = FMA( x[1], La330, Lb[18]);
	Lb[18] = FMA( x[6], La331, Lb[18]);
	Lb[18] = FMA( x[5], La340, Lb[18]);
	Lb[19] *= T(2.0000000000000000e+00);
	Lb[19] = FMA( x[9], La142, Lb[19]);
	Lb[19] = FMA( x[7], La160, Lb[19]);
	Lb[19] = FMA( x[4], La340, Lb[19]);
	Lb[19] *= T(5.0000000000000000e-01);
	Lb[19] = FMA( x[3], La141, Lb[19]);
	Lb[19] = FMA( x[2], La150, Lb[19]);
	Lb[19] = FMA( x[8], La151, Lb[19]);
	Lb[19] = FMA( x[1], La240, Lb[19]);
	Lb[19] = FMA( x[6], La241, Lb[19]);
	Lb[19] = FMA( x[5], La250, Lb[19]);
	Lb[20] *= T(2.0000000000000000e+00);
	Lb[20] = FMA( x[9], La052, Lb[20]);
	Lb[20] = FMA( x[7], La070, Lb[20]);
	Lb[20] = FMA( x[4], La250, Lb[20]);
	Lb[20] *= T(5.0000000000000000e-01);
	Lb[20] = FMA( x[3], La051, Lb[20]);
	Lb[20] = FMA( x[2], La060, Lb[20]);
	Lb[20] = FMA( x[8], La061, Lb[20]);
	Lb[20] = FMA( x[1], La150, Lb[20]);
	Lb[20] = FMA( x[6], La151, Lb[20]);
	Lb[20] = FMA( x[5], La160, Lb[20]);
	Lb[21] = FMA( x[3], La601, Lb[21]);
	Lb[21] = FMA( x[2], La610, Lb[21]);
	Lb[21] = FMA( x[1], La700, Lb[21]);
	Lb[22] = FMA( x[3], La511, Lb[22]);
	Lb[22] = FMA( x[2], La520, Lb[22]);
	Lb[22] = FMA( x[1], La610, Lb[22]);
	Lb[23] = FMA( x[3], La421, Lb[23]);
	Lb[23] = FMA( x[2], La430, Lb[23]);
	Lb[23] = FMA( x[1], La520, Lb[23]);
	Lb[24] = FMA( x[3], La331, Lb[24]);
	Lb[24] = FMA( x[2], La340, Lb[24]);
	Lb[24] = FMA( x[1], La430, Lb[24]);
	Lb[25] = FMA( x[3], La241, Lb[25]);
	Lb[25] = FMA( x[2], La250, Lb[25]);
	Lb[25] = FMA( x[1], La340, Lb[25]);
	Lb[26] = FMA( x[3], La151, Lb[26]);
	Lb[26] = FMA( x[2], La160, Lb[26]);
	Lb[26] = FMA( x[1], La250, Lb[26]);
	Lb[27] = FMA( x[3], La061, Lb[27]);
	Lb[27] = FMA( x[2], La070, Lb[27]);
	Lb[27] = FMA( x[1], La160, Lb[27]);
	Lb[36] *= T(7.2000000000000000e+02);
	Lb[36] = FMA( x[56], La601, Lb[36]);
	Lb[36] = FMA( x[77], La061, Lb[36]);
	Lb[36] = FMA( x[83], La007, Lb[36]);
	Lb[36] *= T(1.6666666666666669e-01);
	Lb[36] = FMA( x[78], La052, Lb[36]);
	Lb[36] = FMA( x[50], La051, Lb[36]);
	Lb[36] = FMA( x[76], La106, Lb[36]);
	Lb[36] = FMA( x[82], La016, Lb[36]);
	Lb[36] = FMA( x[71], La151, Lb[36]);
	Lb[36] = FMA( x[35], La501, Lb[36]);
	Lb[36] = FMA( x[58], La502, Lb[36]);
	Lb[36] = FMA( x[57], La511, Lb[36]);
	Lb[36] = FMA( x[55], La006, Lb[36]);
	Lb[36] *= T(4.0000000000000002e-01);
	Lb[36] = FMA( x[59], La421, Lb[36]);
	Lb[36] = FMA( x[61], La403, Lb[36]);
	Lb[36] = FMA( x[70], La205, Lb[36]);
	Lb[36] = FMA( x[81], La025, Lb[36]);
	Lb[36] = FMA( x[79], La043, Lb[36]);
	Lb[36] = FMA( x[66], La241, Lb[36]);
	Lb[36] *= T(7.5000000000000000e-01);
	Lb[36] = FMA( x[62], La331, Lb[36]);
	Lb[36] = FMA( x[80], La034, Lb[36]);
	Lb[36] = FMA( x[65], La304, Lb[36]);
	Lb[36] *= T(6.6666666666666663e-01);
	Lb[36] = FMA( x[30], La041, Lb[36]);
	Lb[36] = FMA( x[45], La141, Lb[36]);
	Lb[36] = FMA( x[49], La105, Lb[36]);
	Lb[36] = FMA( x[75], La115, Lb[36]);
	Lb[36] = FMA( x[72], La142, Lb[36]);
	Lb[36] = FMA( x[34], La005, Lb[36]);
	Lb[36] = FMA( x[60], La412, Lb[36]);
	Lb[36] = FMA( x[54], La015, Lb[36]);
	Lb[36] = FMA( x[20], La401, Lb[36]);
	Lb[36] = FMA( x[36], La411, Lb[36]);
	Lb[36] = FMA( x[51], La042, Lb[36]);
	Lb[36] = FMA( x[37], La402, Lb[36]);
	Lb[36] *= T(5.0000000000000000e-01);
	Lb[36] = FMA( x[41], La231, Lb[36]);
	Lb[36] = FMA( x[73], La133, Lb[36]);
	Lb[36] = FMA( x[44], La204, Lb[36]);
	Lb[36] = FMA( x[69], La214, Lb[36]);
	Lb[36] = FMA( x[67], La232, Lb[36]);
	Lb[36] = FMA( x[63], La322, Lb[36]);
	Lb[36] = FMA( x[38], La321, Lb[36]);
	Lb[36] = FMA( x[40], La303, Lb[36]);
	Lb[36] = FMA( x[74], La124, Lb[36]);
	Lb[36] = FMA( x[64], La313, Lb[36]);
	Lb[36] = FMA( x[53], La024, Lb[36]);
	Lb[36] = FMA( x[52], La033, Lb[36]);
	Lb[36] *= T(6.6666666666666663e-01);
	Lb[36] = FMA( x[68], La223, Lb[36]);
	Lb[36] *= T(7.5000000000000000e-01);
	Lb[36] = FMA( x[26], La131, Lb[36]);
	Lb[36] = FMA( x[19], La004, Lb[36]);
	Lb[36] = FMA( x[33], La014, Lb[36]);
	Lb[36] = FMA( x[16], La031, Lb[36]);
	Lb[36] = FMA( x[31], La032, Lb[36]);
	Lb[36] = FMA( x[39], La312, Lb[36]);
	Lb[36] = FMA( x[21], La311, Lb[36]);
	Lb[36] = FMA( x[22], La302, Lb[36]);
	Lb[36] = FMA( x[10], La301, Lb[36]);
	Lb[36] = FMA( x[29], La104, Lb[36]);
	Lb[36] = FMA( x[46], La132, Lb[36]);
	Lb[36] = FMA( x[48], La114, Lb[36]);
	Lb[36] *= T(6.6666666666666663e-01);
	Lb[36] = FMA( x[23], La221, Lb[36]);
	Lb[36] = FMA( x[42], La222, Lb[36]);
	Lb[36] = FMA( x[43], La213, Lb[36]);
	Lb[36] = FMA( x[32], La023, Lb[36]);
	Lb[36] = FMA( x[47], La123, Lb[36]);
	Lb[36] = FMA( x[25], La203, Lb[36]);
	Lb[36] *= T(5.0000000000000000e-01);
	Lb[36] = FMA( x[9], La003, Lb[36]);
	Lb[36] = FMA( x[28], La113, Lb[36]);
	Lb[36] = FMA( x[18], La013, Lb[36]);
	Lb[36] = FMA( x[7], La021, Lb[36]);
	Lb[36] = FMA( x[17], La022, Lb[36]);
	Lb[36] = FMA( x[27], La122, Lb[36]);
	Lb[36] = FMA( x[4], La201, Lb[36]);
	Lb[36] = FMA( x[12], La202, Lb[36]);
	Lb[36] = FMA( x[13], La121, Lb[36]);
	Lb[36] = FMA( x[15], La103, Lb[36]);
	Lb[36] = FMA( x[11], La211, Lb[36]);
	Lb[36] = FMA( x[24], La212, Lb[36]);
	Lb[36] *= T(5.0000000000000000e-01);
	Lb[36] = FMA( x[1], La101, Lb[36]);
	Lb[36] = FMA( x[6], La102, Lb[36]);
	Lb[36] = FMA( x[3], La002, Lb[36]);
	Lb[36] = FMA( x[8], La012, Lb[36]);
	Lb[36] = FMA( x[2], La011, Lb[36]);
	Lb[36] = FMA( x[5], La111, Lb[36]);
	Lb[36] = FMA( x[14], La112, Lb[36]);
	Lb[37] *= T(1.2000000000000000e+02);
	Lb[37] = FMA( x[35], La601, Lb[37]);
	Lb[37] = FMA( x[50], La151, Lb[37]);
	Lb[37] = FMA( x[55], La106, Lb[37]);
	Lb[37] *= T(2.0000000000000001e-01);
	Lb[37] = FMA( x[36], La511, Lb[37]);
	Lb[37] = FMA( x[37], La502, Lb[37]);
	Lb[37] = FMA( x[20], La501, Lb[37]);
	Lb[37] = FMA( x[45], La241, Lb[37]);
	Lb[37] = FMA( x[54], La115, Lb[37]);
	Lb[37] = FMA( x[49], La205, Lb[37]);
	Lb[37] = FMA( x[34], La105, Lb[37]);
	Lb[37] = FMA( x[51], La142, Lb[37]);
	Lb[37] = FMA( x[30], La141, Lb[37]);
	Lb[37] *= T(5.0000000000000000e-01);
	Lb[37] = FMA( x[40], La403, Lb[37]);
	Lb[37] = FMA( x[44], La304, Lb[37]);
	Lb[37] = FMA( x[41], La331, Lb[37]);
	Lb[37] = FMA( x[52], La133, Lb[37]);
	Lb[37] = FMA( x[53], La124, Lb[37]);
	Lb[37] = FMA( x[38], La421, Lb[37]);
	Lb[37] *= T(5.0000000000000000e-01);
	Lb[37] = FMA( x[16], La131, Lb[37]);
	Lb[37] = FMA( x[19], La104, Lb[37]);
	Lb[37] = FMA( x[33], La114, Lb[37]);
	Lb[37] = FMA( x[46], La232, Lb[37]);
	Lb[37] = FMA( x[26], La231, Lb[37]);
	Lb[37] = FMA( x[48], La214, Lb[37]);
	Lb[37] = FMA( x[10], La401, Lb[37]);
	Lb[37] = FMA( x[39], La412, Lb[37]);
	Lb[37] = FMA( x[29], La204, Lb[37]);
	Lb[37] = FMA( x[22], La402, Lb[37]);
	Lb[37] = FMA( x[21], La411, Lb[37]);
	Lb[37] = FMA( x[31], La132, Lb[37]);
	Lb[37] *= T(6.6666666666666663e-01);
	Lb[37] = FMA( x[42], La322, Lb[37]);
	Lb[37] = FMA( x[23], La321, Lb[37]);
	Lb[37] = FMA( x[43], La313, Lb[37]);
	Lb[37] = FMA( x[47], La223, Lb[37]);
	Lb[37] = FMA( x[32], La123, Lb[37]);
	Lb[37] = FMA( x[25], La303, Lb[37]);
	Lb[37] *= T(5.0000000000000000e-01);
	Lb[37] = FMA( x[28], La213, Lb[37]);
	Lb[37] = FMA( x[24], La312, Lb[37]);
	Lb[37] = FMA( x[11], La311, Lb[37]);
	Lb[37] = FMA( x[12], La302, Lb[37]);
	Lb[37] = FMA( x[4], La301, Lb[37]);
	Lb[37] = FMA( x[27], La222, Lb[37]);
	Lb[37] = FMA( x[13], La221, Lb[37]);
	Lb[37] = FMA( x[15], La203, Lb[37]);
	Lb[37] = FMA( x[17], La122, Lb[37]);
	Lb[37] = FMA( x[7], La121, Lb[37]);
	Lb[37] = FMA( x[18], La113, Lb[37]);
	Lb[37] = FMA( x[9], La103, Lb[37]);
	Lb[37] *= T(5.0000000000000000e-01);
	Lb[37] = FMA( x[3], La102, Lb[37]);
	Lb[37] = FMA( x[14], La212, Lb[37]);
	Lb[37] = FMA( x[5], La211, Lb[37]);
	Lb[37] = FMA( x[6], La202, Lb[37]);
	Lb[37] = FMA( x[1], La201, Lb[37]);
	Lb[37] = FMA( x[8], La112, Lb[37]);
	Lb[37] = FMA( x[2], La111, Lb[37]);
	Lb[38] *= T(1.2000000000000000e+02);
	Lb[38] = FMA( x[35], La511, Lb[38]);
	Lb[38] = FMA( x[50], La061, Lb[38]);
	Lb[38] = FMA( x[55], La016, Lb[38]);
	Lb[38] *= T(2.0000000000000001e-01);
	Lb[38] = FMA( x[36], La421, Lb[38]);
	Lb[38] = FMA( x[37], La412, Lb[38]);
	Lb[38] = FMA( x[20], La411, Lb[38]);
	Lb[38] = FMA( x[45], La151, Lb[38]);
	Lb[38] = FMA( x[54], La025, Lb[38]);
	Lb[38] = FMA( x[49], La115, Lb[38]);
	Lb[38] = FMA( x[34], La015, Lb[38]);
	Lb[38] = FMA( x[51], La052, Lb[38]);
	Lb[38] = FMA( x[30], La051, Lb[38]);
	Lb[38] *= T(5.0000000000000000e-01);
	Lb[38] = FMA( x[40], La313, Lb[38]);
	Lb[38] = FMA( x[44], La214, Lb[38]);
	Lb[38] = FMA( x[41], La241, Lb[38]);
	Lb[38] = FMA( x[52], La043, Lb[38]);
	Lb[38] = FMA( x[53], La034, Lb[38]);
	Lb[38] = FMA( x[38], La331, Lb[38]);
	Lb[38] *= T(5.0000000000000000e-01);
	Lb[38] = FMA( x[16], La041, Lb[38]);
	Lb[38] = FMA( x[19], La014, Lb[38]);
	Lb[38] = FMA( x[33], La024, Lb[38]);
	Lb[38] = FMA( x[46], La142, Lb[38]);
	Lb[38] = FMA( x[26], La141, Lb[38]);
	Lb[38] = FMA( x[48], La124, Lb[38]);
	Lb[38] = FMA( x[10], La311, Lb[38]);
	Lb[38] = FMA( x[39], La322, Lb[38]);
	Lb[38] = FMA( x[29], La114, Lb[38]);
	Lb[38] = FMA( x[22], La312, Lb[38]);
	Lb[38] = FMA( x[21], La321, Lb[38]);
	Lb[38] = FMA( x[31], La042, Lb[38]);
	Lb[38] *= T(6.6666666666666663e-01);
	Lb[38] = FMA( x[42], La232, Lb[38]);
	Lb[38] = FMA( x[23], La231, Lb[38]);
	Lb[38] = FMA( x[43], La223, Lb[38]);
	Lb[38] = FMA( x[47], La133, Lb[38]);
	Lb[38] = FMA( x[32], La033, Lb[38]);
	Lb[38] = FMA( x[25], La213, Lb[38]);
	Lb[38] *= T(5.0000000000000000e-01);
	Lb[38] = FMA( x[28], La123, Lb[38]);
	Lb[38] = FMA( x[24], La222, Lb[38]);
	Lb[38] = FMA( x[11], La221, Lb[38]);
	Lb[38] = FMA( x[12], La212, Lb[38]);
	Lb[38] = FMA( x[4], La211, Lb[38]);
	Lb[38] = FMA( x[27], La132, Lb[38]);
	Lb[38] = FMA( x[13], La131, Lb[38]);
	Lb[38] = FMA( x[15], La113, Lb[38]);
	Lb[38] = FMA( x[17], La032, Lb[38]);
	Lb[38] = FMA( x[7], La031, Lb[38]);
	Lb[38] = FMA( x[18], La023, Lb[38]);
	Lb[38] = FMA( x[9], La013, Lb[38]);
	Lb[38] *= T(5.0000000000000000e-01);
	Lb[38] = FMA( x[3], La012, Lb[38]);
	Lb[38] = FMA( x[14], La122, Lb[38]);
	Lb[38] = FMA( x[5], La121, Lb[38]);
	Lb[38] = FMA( x[6], La112, Lb[38]);
	Lb[38] = FMA( x[1], La111, Lb[38]);
	Lb[38] = FMA( x[8], La022, Lb[38]);
	Lb[38] = FMA( x[2], La021, Lb[38]);
	Lb[39] *= T(2.4000000000000000e+01);
	Lb[39] = FMA( x[20], La601, Lb[39]);
	Lb[39] = FMA( x[34], La205, Lb[39]);
	Lb[39] = FMA( x[30], La241, Lb[39]);
	Lb[39] *= T(2.5000000000000000e-01);
	Lb[39] = FMA( x[29], La304, Lb[39]);
	Lb[39] = FMA( x[21], La511, Lb[39]);
	Lb[39] = FMA( x[22], La502, Lb[39]);
	Lb[39] = FMA( x[10], La501, Lb[39]);
	Lb[39] = FMA( x[26], La331, Lb[39]);
	Lb[39] = FMA( x[31], La232, Lb[39]);
	Lb[39] = FMA( x[16], La231, Lb[39]);
	Lb[39] = FMA( x[19], La204, Lb[39]);
	Lb[39] = FMA( x[33], La214, Lb[39]);
	Lb[39] *= T(6.6666666666666663e-01);
	Lb[39] = FMA( x[23], La421, Lb[39]);
	Lb[39] = FMA( x[25], La403, Lb[39]);
	Lb[39] = FMA( x[32], La223, Lb[39]);
	Lb[39] *= T(5.0000000000000000e-01);
	Lb[39] = FMA( x[27], La322, Lb[39]);
	Lb[39] = FMA( x[9], La203, Lb[39]);
	Lb[39] = FMA( x[24], La412, Lb[39]);
	Lb[39] = FMA( x[11], La411, Lb[39]);
	Lb[39] = FMA( x[12], La402, Lb[39]);
	Lb[39] = FMA( x[4], La401, Lb[39]);
	Lb[39] = FMA( x[18], La213, Lb[39]);
	Lb[39] = FMA( x[13], La321, Lb[39]);
	Lb[39] = FMA( x[28], La313, Lb[39]);
	Lb[39] = FMA( x[15], La303, Lb[39]);
	Lb[39] = FMA( x[7], La221, Lb[39]);
	Lb[39] = FMA( x[17], La222, Lb[39]);
	Lb[39] *= T(5.0000000000000000e-01);
	Lb[39] = FMA( x[14], La312, Lb[39]);
	Lb[39] = FMA( x[5], La311, Lb[39]);
	Lb[39] = FMA( x[3], La202, Lb[39]);
	Lb[39] = FMA( x[6], La302, Lb[39]);
	Lb[39] = FMA( x[1], La301, Lb[39]);
	Lb[39] = FMA( x[8], La212, Lb[39]);
	Lb[39] = FMA( x[2], La211, Lb[39]);
	Lb[40] *= T(2.4000000000000000e+01);
	Lb[40] = FMA( x[20], La511, Lb[40]);
	Lb[40] = FMA( x[34], La115, Lb[40]);
	Lb[40] = FMA( x[30], La151, Lb[40]);
	Lb[40] *= T(2.5000000000000000e-01);
	Lb[40] = FMA( x[29], La214, Lb[40]);
	Lb[40] = FMA( x[21], La421, Lb[40]);
	Lb[40] = FMA( x[22], La412, Lb[40]);
	Lb[40] = FMA( x[10], La411, Lb[40]);
	Lb[40] = FMA( x[26], La241, Lb[40]);
	Lb[40] = FMA( x[31], La142, Lb[40]);
	Lb[40] = FMA( x[16], La141, Lb[40]);
	Lb[40] = FMA( x[19], La114, Lb[40]);
	Lb[40] = FMA( x[33], La124, Lb[40]);
	Lb[40] *= T(6.6666666666666663e-01);
	Lb[40] = FMA( x[23], La331, Lb[40]);
	Lb[40] = FMA( x[25], La313, Lb[40]);
	Lb[40] = FMA( x[32], La133, Lb[40]);
	Lb[40] *= T(5.0000000000000000e-01);
	Lb[40] = FMA( x[27], La232, Lb[40]);
	Lb[40] = FMA( x[9], La113, Lb[40]);
	Lb[40] = FMA( x[24], La322, Lb[40]);
	Lb[40] = FMA( x[11], La321, Lb[40]);
	Lb[40] = FMA( x[12], La312, Lb[40]);
	Lb[40] = FMA( x[4], La311, Lb[40]);
	Lb[40] = FMA( x[18], La123, Lb[40]);
	Lb[40] = FMA( x[13], La231, Lb[40]);
	Lb[40] = FMA( x[28], La223, Lb[40]);
	Lb[40] = FMA( x[15], La213, Lb[40]);
	Lb[40] = FMA( x[7], La131, Lb[40]);
	Lb[40] = FMA( x[17], La132, Lb[40]);
	Lb[40] *= T(5.0000000000000000e-01);
	Lb[40] = FMA( x[14], La222, Lb[40]);
	Lb[40] = FMA( x[5], La221, Lb[40]);
	Lb[40] = FMA( x[3], La112, Lb[40]);
	Lb[40] = FMA( x[6], La212, Lb[40]);
	Lb[40] = FMA( x[1], La211, Lb[40]);
	Lb[40] = FMA( x[8], La122, Lb[40]);
	Lb[40] = FMA( x[2], La121, Lb[40]);
	Lb[41] *= T(2.4000000000000000e+01);
	Lb[41] = FMA( x[20], La421, Lb[41]);
	Lb[41] = FMA( x[34], La025, Lb[41]);
	Lb[41] = FMA( x[30], La061, Lb[41]);
	Lb[41] *= T(2.5000000000000000e-01);
	Lb[41] = FMA( x[29], La124, Lb[41]);
	Lb[41] = FMA( x[21], La331, Lb[41]);
	Lb[41] = FMA( x[22], La322, Lb[41]);
	Lb[41] = FMA( x[10], La321, Lb[41]);
	Lb[41] = FMA( x[26], La151, Lb[41]);
	Lb[41] = FMA( x[31], La052, Lb[41]);
	Lb[41] = FMA( x[16], La051, Lb[41]);
	Lb[41] = FMA( x[19], La024, Lb[41]);
	Lb[41] = FMA( x[33], La034, Lb[41]);
	Lb[41] *= T(6.6666666666666663e-01);
	Lb[41] = FMA( x[23], La241, Lb[41]);
	Lb[41] = FMA( x[25], La223, Lb[41]);
	Lb[41] = FMA( x[32], La043, Lb[41]);
	Lb[41] *= T(5.0000000000000000e-01);
	Lb[41] = FMA( x[27], La142, Lb[41]);
	Lb[41] = FMA( x[9], La023, Lb[41]);
	Lb[41] = FMA( x[24], La232, Lb[41]);
	Lb[41] = FMA( x[11], La231, Lb[41]);
	Lb[41] = FMA( x[12], La222, Lb[41]);
	Lb[41] = FMA( x[4], La221, Lb[41]);
	Lb[41] = FMA( x[18], La033, Lb[41]);
	Lb[41] = FMA( x[13], La141, Lb[41]);
	Lb[41] = FMA( x[28], La133, Lb[41]);
	Lb[41] = FMA( x[15], La123, Lb[41]);
	Lb[41] = FMA( x[7], La041, Lb[41]);
	Lb[41] = FMA( x[17], La042, Lb[41]);
	Lb[41] *= T(5.0000000000000000e-01);
	Lb[41] = FMA( x[14], La132, Lb[41]);
	Lb[41] = FMA( x[5], La131, Lb[41]);
	Lb[41] = FMA( x[3], La022, Lb[41]);
	Lb[41] = FMA( x[6], La122, Lb[41]);
	Lb[41] = FMA( x[1], La121, Lb[41]);
	Lb[41] = FMA( x[8], La032, Lb[41]);
	Lb[41] = FMA( x[2], La031, Lb[41]);
	Lb[42] *= T(6.0000000000000000e+00);
	Lb[42] = FMA( x[10], La601, Lb[42]);
	Lb[42] = FMA( x[19], La304, Lb[42]);
	Lb[42] = FMA( x[16], La331, Lb[42]);
	Lb[42] *= T(3.3333333333333331e-01);
	Lb[42] = FMA( x[9], La303, Lb[42]);
	Lb[42] = FMA( x[11], La511, Lb[42]);
	Lb[42] = FMA( x[12], La502, Lb[42]);
	Lb[42] = FMA( x[4], La501, Lb[42]);
	Lb[42] = FMA( x[13], La421, Lb[42]);
	Lb[42] = FMA( x[15], La403, Lb[42]);
	Lb[42] = FMA( x[17], La322, Lb[42]);
	Lb[42] = FMA( x[7], La321, Lb[42]);
	Lb[42] = FMA( x[18], La313, Lb[42]);
	Lb[42] *= T(5.0000000000000000e-01);
	Lb[42] = FMA( x[1], La401, Lb[42]);
	Lb[42] = FMA( x[6], La402, Lb[42]);
	Lb[42] = FMA( x[5], La411, Lb[42]);
	Lb[42] = FMA( x[14], La412, Lb[42]);
	Lb[42] = FMA( x[8], La312, Lb[42]);
	Lb[42] = FMA( x[2], La311, Lb[42]);
	Lb[42] = FMA( x[3], La302, Lb[42]);
	Lb[43] *= T(6.0000000000000000e+00);
	Lb[43] = FMA( x[10], La511, Lb[43]);
	Lb[43] = FMA( x[19], La214, Lb[43]);
	Lb[43] = FMA( x[16], La241, Lb[43]);
	Lb[43] *= T(3.3333333333333331e-01);
	Lb[43] = FMA( x[9], La213, Lb[43]);
	Lb[43] = FMA( x[11], La421, Lb[43]);
	Lb[43] = FMA( x[12], La412, Lb[43]);
	Lb[43] = FMA( x[4], La411, Lb[43]);
	Lb[43] = FMA( x[13], La331, Lb[43]);
	Lb[43] = FMA( x[15], La313, Lb[43]);
	Lb[43] = FMA( x[17], La232, Lb[43]);
	Lb[43] = FMA( x[7], La231, Lb[43]);
	Lb[43] = FMA( x[18], La223, Lb[43]);
	Lb[43] *= T(5.0000000000000000e-01);
	Lb[43] = FMA( x[1], La311, Lb[43]);
	Lb[43] = FMA( x[6], La312, Lb[43]);
	Lb[43] = FMA( x[5], La321, Lb[43]);
	Lb[43] = FMA( x[14], La322, Lb[43]);
	Lb[43] = FMA( x[8], La222, Lb[43]);
	Lb[43] = FMA( x[2], La221, Lb[43]);
	Lb[43] = FMA( x[3], La212, Lb[43]);
	Lb[44] *= T(6.0000000000000000e+00);
	Lb[44] = FMA( x[10], La421, Lb[44]);
	Lb[44] = FMA( x[19], La124, Lb[44]);
	Lb[44] = FMA( x[16], La151, Lb[44]);
	Lb[44] *= T(3.3333333333333331e-01);
	Lb[44] = FMA( x[9], La123, Lb[44]);
	Lb[44] = FMA( x[11], La331, Lb[44]);
	Lb[44] = FMA( x[12], La322, Lb[44]);
	Lb[44] = FMA( x[4], La321, Lb[44]);
	Lb[44] = FMA( x[13], La241, Lb[44]);
	Lb[44] = FMA( x[15], La223, Lb[44]);
	Lb[44] = FMA( x[17], La142, Lb[44]);
	Lb[44] = FMA( x[7], La141, Lb[44]);
	Lb[44] = FMA( x[18], La133, Lb[44]);
	Lb[44] *= T(5.0000000000000000e-01);
	Lb[44] = FMA( x[1], La221, Lb[44]);
	Lb[44] = FMA( x[6], La222, Lb[44]);
	Lb[44] = FMA( x[5], La231, Lb[44]);
	Lb[44] = FMA( x[14], La232, Lb[44]);
	Lb[44] = FMA( x[8], La132, Lb[44]);
	Lb[44] = FMA( x[2], La131, Lb[44]);
	Lb[44] = FMA( x[3], La122, Lb[44]);
	Lb[45] *= T(6.0000000000000000e+00);
	Lb[45] = FMA( x[10], La331, Lb[45]);
	Lb[45] = FMA( x[19], La034, Lb[45]);
	Lb[45] = FMA( x[16], La061, Lb[45]);
	Lb[45] *= T(3.3333333333333331e-01);
	Lb[45] = FMA( x[9], La033, Lb[45]);
	Lb[45] = FMA( x[11], La241, Lb[45]);
	Lb[45] = FMA( x[12], La232, Lb[45]);
	Lb[45] = FMA( x[4], La231, Lb[45]);
	Lb[45] = FMA( x[13], La151, Lb[45]);
	Lb[45] = FMA( x[15], La133, Lb[45]);
	Lb[45] = FMA( x[17], La052, Lb[45]);
	Lb[45] = FMA( x[7], La051, Lb[45]);
	Lb[45] = FMA( x[18], La043, Lb[45]);
	Lb[45] *= T(5.0000000000000000e-01);
	Lb[45] = FMA( x[1], La131, Lb[45]);
	Lb[45] = FMA( x[6], La132, Lb[45]);
	Lb[45] = FMA( x[5], La141, Lb[45]);
	Lb[45] = FMA( x[14], La142, Lb[45]);
	Lb[45] = FMA( x[8], La042, Lb[45]);
	Lb[45] = FMA( x[2], La041, Lb[45]);
	Lb[45] = FMA( x[3], La032, Lb[45]);
	Lb[46] *= T(2.0000000000000000e+00);
	Lb[46] = FMA( x[9], La403, Lb[46]);
	Lb[46] = FMA( x[7], La421, Lb[46]);
	Lb[46] = FMA( x[4], La601, Lb[46]);
	Lb[46] *= T(5.0000000000000000e-01);
	Lb[46] = FMA( x[3], La402, Lb[46]);
	Lb[46] = FMA( x[2], La411, Lb[46]);
	Lb[46] = FMA( x[8], La412, Lb[46]);
	Lb[46] = FMA( x[1], La501, Lb[46]);
	Lb[46] = FMA( x[6], La502, Lb[46]);
	Lb[46] = FMA( x[5], La511, Lb[46]);
	Lb[47] *= T(2.0000000000000000e+00);
	Lb[47] = FMA( x[9], La313, Lb[47]);
	Lb[47] = FMA( x[7], La331, Lb[47]);
	Lb[47] = FMA( x[4], La511, Lb[47]);
	Lb[47] *= T(5.0000000000000000e-01);
	Lb[47] = FMA( x[3], La312, Lb[47]);
	Lb[47] = FMA( x[2], La321, Lb[47]);
	Lb[47] = FMA( x[8], La322, Lb[47]);
	Lb[47] = FMA( x[1], La411, Lb[47]);
	Lb[47] = FMA( x[6], La412, Lb[47]);
	Lb[47] = FMA( x[5], La421, Lb[47]);
	Lb[48] *= T(2.0000000000000000e+00);
	Lb[48] = FMA( x[9], La223, Lb[48]);
	Lb[48] = FMA( x[7], La241, Lb[48]);
	Lb[48] = FMA( x[4], La421, Lb[48]);
	Lb[48] *= T(5.0000000000000000e-01);
	Lb[48] = FMA( x[3], La222, Lb[48]);
	Lb[48] = FMA( x[2], La231, Lb[48]);
	Lb[48] = FMA( x[8], La232, Lb[48]);
	Lb[48] = FMA( x[1], La321, Lb[48]);
	Lb[48] = FMA( x[6], La322, Lb[48]);
	Lb[48] = FMA( x[5], La331, Lb[48]);
	Lb[49] *= T(2.0000000000000000e+00);
	Lb[49] = FMA( x[9], La133, Lb[49]);
	Lb[49] = FMA( x[7], La151, Lb[49]);
	Lb[49] = FMA( x[4], La331, Lb[49]);
	Lb[49] *= T(5.0000000000000000e-01);
	Lb[49] = FMA( x[3], La132, Lb[49]);
	Lb[49] = FMA( x[2], La141, Lb[49]);
	Lb[49] = FMA( x[8], La142, Lb[49]);
	Lb[49] = FMA( x[1], La231, Lb[49]);
	Lb[49] = FMA( x[6], La232, Lb[49]);
	Lb[49] = FMA( x[5], La241, Lb[49]);
	Lb[50] *= T(2.0000000000000000e+00);
	Lb[50] = FMA( x[9], La043, Lb[50]);
	Lb[50] = FMA( x[7], La061, Lb[50]);
	Lb[50] = FMA( x[4], La241, Lb[50]);
	Lb[50] *= T(5.0000000000000000e-01);
	Lb[50] = FMA( x[3], La042, Lb[50]);
	Lb[50] = FMA( x[2], La051, Lb[50]);
	Lb[50] = FMA( x[8], La052, Lb[50]);
	Lb[50] = FMA( x[1], La141, Lb[50]);
	Lb[50] = FMA( x[6], La142, Lb[50]);
	Lb[50] = FMA( x[5], La151, Lb[50]);
	Lb[51] = FMA( x[3], La502, Lb[51]);
	Lb[51] = FMA( x[2], La511, Lb[51]);
	Lb[51] = FMA( x[1], La601, Lb[51]);
	Lb[52] = FMA( x[3], La412, Lb[52]);
	Lb[52] = FMA( x[2], La421, Lb[52]);
	Lb[52] = FMA( x[1], La511, Lb[52]);
	Lb[53] = FMA( x[3], La322, Lb[53]);
	Lb[53] = FMA( x[2], La331, Lb[53]);
	Lb[53] = FMA( x[1], La421, Lb[53]);
	Lb[54] = FMA( x[3], La232, Lb[54]);
	Lb[54] = FMA( x[2], La241, Lb[54]);
	Lb[54] = FMA( x[1], La331, Lb[54]);
	Lb[55] = FMA( x[3], La142, Lb[55]);
	Lb[55] = FMA( x[2], La151, Lb[55]);
	Lb[55] = FMA( x[1], La241, Lb[55]);
	Lb[56] = FMA( x[3], La052, Lb[56]);
	Lb[56] = FMA( x[2], La061, Lb[56]);
	Lb[56] = FMA( x[1], La151, Lb[56]);
	Lb[64] *= T(1.2000000000000000e+02);
	Lb[64] = FMA( x[35], La502, Lb[64]);
	Lb[64] = FMA( x[50], La052, Lb[64]);
	Lb[64] = FMA( x[55], La007, Lb[64]);
	Lb[64] *= T(2.0000000000000001e-01);
	Lb[64] = FMA( x[36], La412, Lb[64]);
	Lb[64] = FMA( x[37], La403, Lb[64]);
	Lb[64] = FMA( x[20], La402, Lb[64]);
	Lb[64] = FMA( x[45], La142, Lb[64]);
	Lb[64] = FMA( x[54], La016, Lb[64]);
	Lb[64] = FMA( x[49], La106, Lb[64]);
	Lb[64] = FMA( x[34], La006, Lb[64]);
	Lb[64] = FMA( x[51], La043, Lb[64]);
	Lb[64] = FMA( x[30], La042, Lb[64]);
	Lb[64] *= T(5.0000000000000000e-01);
	Lb[64] = FMA( x[40], La304, Lb[64]);
	Lb[64] = FMA( x[44], La205, Lb[64]);
	Lb[64] = FMA( x[41], La232, Lb[64]);
	Lb[64] = FMA( x[52], La034, Lb[64]);
	Lb[64] = FMA( x[53], La025, Lb[64]);
	Lb[64] = FMA( x[38], La322, Lb[64]);
	Lb[64] *= T(5.0000000000000000e-01);
	Lb[64] = FMA( x[16], La032, Lb[64]);
	Lb[64] = FMA( x[19], La005, Lb[64]);
	Lb[64] = FMA( x[33], La015, Lb[64]);
	Lb[64] = FMA( x[46], La133, Lb[64]);
	Lb[64] = FMA( x[26], La132, Lb[64]);
	Lb[64] = FMA( x[48], La115, Lb[64]);
	Lb[64] = FMA( x[10], La302, Lb[64]);
	Lb[64] = FMA( x[39], La313, Lb[64]);
	Lb[64] = FMA( x[29], La105, Lb[64]);
	Lb[64] = FMA( x[22], La303, Lb[64]);
	Lb[64] = FMA( x[21], La312, Lb[64]);
	Lb[64] = FMA( x[31], La033, Lb[64]);
	Lb[64] *= T(6.6666666666666663e-01);
	Lb[64] = FMA( x[42], La223, Lb[64]);
	Lb[64] = FMA( x[23], La222, Lb[64]);
	Lb[64] = FMA( x[43], La214, Lb[64]);
	Lb[64] = FMA( x[47], La124, Lb[64]);
	Lb[64] = FMA( x[32], La024, Lb[64]);
	Lb[64] = FMA( x[25], La204, Lb[64]);
	Lb[64] *= T(5.0000000000000000e-01);
	Lb[64] = FMA( x[28], La114, Lb[64]);
	Lb[64] = FMA( x[24], La213, Lb[64]);
	Lb[64] = FMA( x[11], La212, Lb[64]);
	Lb[64] = FMA( x[12], La203, Lb[64]);
	Lb[64] = FMA( x[4], La202, Lb[64]);
	Lb[64] = FMA( x[27], La123, Lb[64]);
	Lb[64] = FMA( x[13], La122, Lb[64]);
	Lb[64] = FMA( x[15], La104, Lb[64]);
	Lb[64] = FMA( x[17], La023, Lb[64]);
	Lb[64] = FMA( x[7], La022, Lb[64]);
	Lb[64] = FMA( x[18], La014, Lb[64]);
	Lb[64] = FMA( x[9], La004, Lb[64]);
	Lb[64] *= T(5.0000000000000000e-01);
	Lb[64] = FMA( x[3], La003, Lb[64]);
	Lb[64] = FMA( x[14], La113, Lb[64]);
	Lb[64] = FMA( x[5], La112, Lb[64]);
	Lb[64] = FMA( x[6], La103, Lb[64]);
	Lb[64] = FMA( x[1], La102, Lb[64]);
	Lb[64] = FMA( x[8], La013, Lb[64]);
	Lb[64] = FMA( x[2], La012, Lb[64]);
	return Lb;
/* FLOPS = 2711 + do_phi * 253*/
}
template<class T>
CUDA_EXPORT
#ifdef __CUDACC__
__noinline__
#endif
tensor_trless_sym<T, 2> L2P(const tensor_trless_sym<T, 7>& La, array<T,NDIM> X, bool do_phi) {
	X[0] *= T(SCALE_FACTOR);
	X[1] *= T(SCALE_FACTOR);
	X[2] *= T(SCALE_FACTOR);
	tensor_trless_sym<T, 2> Lb;
	T x[84];
	x[0] = T(1);
	x[1] = X[0];
	x[2] = X[1];
	x[3] = X[2];
	x[9] = x[3] * x[3]; // 0 0 2 | 0 0 1 | 0 0 1
	x[8] = x[2] * x[3]; // 0 1 1 | 0 0 1 | 0 1 0
	x[7] = x[2] * x[2]; // 0 2 0 | 0 1 0 | 0 1 0
	x[6] = x[1] * x[3]; // 1 0 1 | 0 0 1 | 1 0 0
	x[5] = x[1] * x[2]; // 1 1 0 | 0 1 0 | 1 0 0
	x[4] = x[1] * x[1]; // 2 0 0 | 1 0 0 | 1 0 0
	x[19] = x[9] * x[3]; // 0 0 3 | 0 0 1 | 0 0 2
	x[18] = x[8] * x[3]; // 0 1 2 | 0 0 1 | 0 1 1
	x[17] = x[8] * x[2]; // 0 2 1 | 0 1 0 | 0 1 1
	x[16] = x[7] * x[2]; // 0 3 0 | 0 1 0 | 0 2 0
	x[15] = x[6] * x[3]; // 1 0 2 | 0 0 1 | 1 0 1
	x[14] = x[5] * x[3]; // 1 1 1 | 0 0 1 | 1 1 0
	x[13] = x[5] * x[2]; // 1 2 0 | 0 1 0 | 1 1 0
	x[12] = x[6] * x[1]; // 2 0 1 | 1 0 0 | 1 0 1
	x[11] = x[5] * x[1]; // 2 1 0 | 1 0 0 | 1 1 0
	x[10] = x[4] * x[1]; // 3 0 0 | 1 0 0 | 2 0 0
	x[34] = x[9] * x[9]; // 0 0 4 | 0 0 2 | 0 0 2
	x[33] = x[8] * x[9]; // 0 1 3 | 0 0 2 | 0 1 1
	x[32] = x[8] * x[8]; // 0 2 2 | 0 1 1 | 0 1 1
	x[31] = x[8] * x[7]; // 0 3 1 | 0 2 0 | 0 1 1
	x[30] = x[7] * x[7]; // 0 4 0 | 0 2 0 | 0 2 0
	x[29] = x[6] * x[9]; // 1 0 3 | 0 0 2 | 1 0 1
	x[28] = x[5] * x[9]; // 1 1 2 | 0 0 2 | 1 1 0
	x[27] = x[5] * x[8]; // 1 2 1 | 0 1 1 | 1 1 0
	x[26] = x[5] * x[7]; // 1 3 0 | 0 2 0 | 1 1 0
	x[25] = x[6] * x[6]; // 2 0 2 | 1 0 1 | 1 0 1
	x[24] = x[5] * x[6]; // 2 1 1 | 1 0 1 | 1 1 0
	x[23] = x[5] * x[5]; // 2 2 0 | 1 1 0 | 1 1 0
	x[22] = x[6] * x[4]; // 3 0 1 | 2 0 0 | 1 0 1
	x[21] = x[5] * x[4]; // 3 1 0 | 2 0 0 | 1 1 0
	x[20] = x[4] * x[4]; // 4 0 0 | 2 0 0 | 2 0 0
	x[55] = x[19] * x[9]; // 0 0 5 | 0 0 2 | 0 0 3
	x[54] = x[18] * x[9]; // 0 1 4 | 0 0 2 | 0 1 2
	x[53] = x[17] * x[9]; // 0 2 3 | 0 0 2 | 0 2 1
	x[52] = x[17] * x[8]; // 0 3 2 | 0 1 1 | 0 2 1
	x[51] = x[17] * x[7]; // 0 4 1 | 0 2 0 | 0 2 1
	x[50] = x[16] * x[7]; // 0 5 0 | 0 2 0 | 0 3 0
	x[49] = x[15] * x[9]; // 1 0 4 | 0 0 2 | 1 0 2
	x[48] = x[14] * x[9]; // 1 1 3 | 0 0 2 | 1 1 1
	x[47] = x[14] * x[8]; // 1 2 2 | 0 1 1 | 1 1 1
	x[46] = x[14] * x[7]; // 1 3 1 | 0 2 0 | 1 1 1
	x[45] = x[13] * x[7]; // 1 4 0 | 0 2 0 | 1 2 0
	x[44] = x[12] * x[9]; // 2 0 3 | 0 0 2 | 2 0 1
	x[43] = x[14] * x[6]; // 2 1 2 | 1 0 1 | 1 1 1
	x[42] = x[14] * x[5]; // 2 2 1 | 1 1 0 | 1 1 1
	x[41] = x[11] * x[7]; // 2 3 0 | 0 2 0 | 2 1 0
	x[40] = x[12] * x[6]; // 3 0 2 | 1 0 1 | 2 0 1
	x[39] = x[14] * x[4]; // 3 1 1 | 2 0 0 | 1 1 1
	x[38] = x[11] * x[5]; // 3 2 0 | 1 1 0 | 2 1 0
	x[37] = x[12] * x[4]; // 4 0 1 | 2 0 0 | 2 0 1
	x[36] = x[11] * x[4]; // 4 1 0 | 2 0 0 | 2 1 0
	x[35] = x[10] * x[4]; // 5 0 0 | 2 0 0 | 3 0 0
	x[83] = x[19] * x[19]; // 0 0 6 | 0 0 3 | 0 0 3
	x[82] = x[18] * x[19]; // 0 1 5 | 0 0 3 | 0 1 2
	x[81] = x[17] * x[19]; // 0 2 4 | 0 0 3 | 0 2 1
	x[80] = x[17] * x[18]; // 0 3 3 | 0 1 2 | 0 2 1
	x[79] = x[17] * x[17]; // 0 4 2 | 0 2 1 | 0 2 1
	x[78] = x[17] * x[16]; // 0 5 1 | 0 3 0 | 0 2 1
	x[77] = x[16] * x[16]; // 0 6 0 | 0 3 0 | 0 3 0
	x[76] = x[15] * x[19]; // 1 0 5 | 0 0 3 | 1 0 2
	x[75] = x[14] * x[19]; // 1 1 4 | 0 0 3 | 1 1 1
	x[74] = x[14] * x[18]; // 1 2 3 | 0 1 2 | 1 1 1
	x[73] = x[14] * x[17]; // 1 3 2 | 0 2 1 | 1 1 1
	x[72] = x[14] * x[16]; // 1 4 1 | 0 3 0 | 1 1 1
	x[71] = x[13] * x[16]; // 1 5 0 | 0 3 0 | 1 2 0
	x[70] = x[12] * x[19]; // 2 0 4 | 0 0 3 | 2 0 1
	x[69] = x[14] * x[15]; // 2 1 3 | 1 0 2 | 1 1 1
	x[68] = x[14] * x[14]; // 2 2 2 | 1 1 1 | 1 1 1
	x[67] = x[14] * x[13]; // 2 3 1 | 1 2 0 | 1 1 1
	x[66] = x[11] * x[16]; // 2 4 0 | 0 3 0 | 2 1 0
	x[65] = x[12] * x[15]; // 3 0 3 | 1 0 2 | 2 0 1
	x[64] = x[14] * x[12]; // 3 1 2 | 2 0 1 | 1 1 1
	x[63] = x[14] * x[11]; // 3 2 1 | 2 1 0 | 1 1 1
	x[62] = x[11] * x[13]; // 3 3 0 | 1 2 0 | 2 1 0
	x[61] = x[12] * x[12]; // 4 0 2 | 2 0 1 | 2 0 1
	x[60] = x[14] * x[10]; // 4 1 1 | 3 0 0 | 1 1 1
	x[59] = x[11] * x[11]; // 4 2 0 | 2 1 0 | 2 1 0
	x[58] = x[12] * x[10]; // 5 0 1 | 3 0 0 | 2 0 1
	x[57] = x[11] * x[10]; // 5 1 0 | 3 0 0 | 2 1 0
	x[56] = x[10] * x[10]; // 6 0 0 | 3 0 0 | 3 0 0
	const T La000 =  (La[0]);
	const T La001 =  (La[28]);
	const T La002 =  (La[49]);
	const T La003 = -(La[31]+(La[33]));
	const T La004 =  (La[10]+FMA(T(2),La[12],(La[14])));
	const T La005 =  (La[38]+FMA(T(2),La[40],(La[42])));
	const T La006 = -(La[21]+FMA(T(3),La[23],FMA(T(3),La[25],(La[27]))));
	const T La010 =  (La[2]);
	const T La011 =  (La[30]);
	const T La012 = -(La[7]+(La[9]));
	const T La013 = -(La[35]+(La[37]));
	const T La014 =  (La[16]+FMA(T(2),La[18],(La[20])));
	const T La015 =  (La[44]+FMA(T(2),La[46],(La[48])));
	const T La020 =  (La[5]);
	const T La021 =  (La[33]);
	const T La022 = -(La[12]+(La[14]));
	const T La023 = -(La[40]+(La[42]));
	const T La024 =  (La[23]+FMA(T(2),La[25],(La[27])));
	const T La030 =  (La[9]);
	const T La031 =  (La[37]);
	const T La032 = -(La[18]+(La[20]));
	const T La033 = -(La[46]+(La[48]));
	const T La040 =  (La[14]);
	const T La041 =  (La[42]);
	const T La042 = -(La[25]+(La[27]));
	const T La050 =  (La[20]);
	const T La051 =  (La[48]);
	const T La060 =  (La[27]);
	const T La100 =  (La[1]);
	const T La101 =  (La[29]);
	const T La102 = -(La[6]+(La[8]));
	const T La103 = -(La[34]+(La[36]));
	const T La104 =  (La[15]+FMA(T(2),La[17],(La[19])));
	const T La105 =  (La[43]+FMA(T(2),La[45],(La[47])));
	const T La110 =  (La[4]);
	const T La111 =  (La[32]);
	const T La112 = -(La[11]+(La[13]));
	const T La113 = -(La[39]+(La[41]));
	const T La114 =  (La[22]+FMA(T(2),La[24],(La[26])));
	const T La120 =  (La[8]);
	const T La121 =  (La[36]);
	const T La122 = -(La[17]+(La[19]));
	const T La123 = -(La[45]+(La[47]));
	const T La130 =  (La[13]);
	const T La131 =  (La[41]);
	const T La132 = -(La[24]+(La[26]));
	const T La140 =  (La[19]);
	const T La141 =  (La[47]);
	const T La150 =  (La[26]);
	const T La200 =  (La[3]);
	const T La201 =  (La[31]);
	const T La202 = -(La[10]+(La[12]));
	const T La203 = -(La[38]+(La[40]));
	const T La204 =  (La[21]+FMA(T(2),La[23],(La[25])));
	const T La210 =  (La[7]);
	const T La211 =  (La[35]);
	const T La212 = -(La[16]+(La[18]));
	const T La213 = -(La[44]+(La[46]));
	const T La220 =  (La[12]);
	const T La221 =  (La[40]);
	const T La222 = -(La[23]+(La[25]));
	const T La230 =  (La[18]);
	const T La231 =  (La[46]);
	const T La240 =  (La[25]);
	const T La300 =  (La[6]);
	const T La301 =  (La[34]);
	const T La302 = -(La[15]+(La[17]));
	const T La303 = -(La[43]+(La[45]));
	const T La310 =  (La[11]);
	const T La311 =  (La[39]);
	const T La312 = -(La[22]+(La[24]));
	const T La320 =  (La[17]);
	const T La321 =  (La[45]);
	const T La330 =  (La[24]);
	const T La400 =  (La[10]);
	const T La401 =  (La[38]);
	const T La402 = -(La[21]+(La[23]));
	const T La410 =  (La[16]);
	const T La411 =  (La[44]);
	const T La420 =  (La[23]);
	const T La500 =  (La[15]);
	const T La501 =  (La[43]);
	const T La510 =  (La[22]);
	const T La600 =  (La[21]);
	Lb(0,0,0) = La(0,0,0);
	Lb(1,0,0) = La(1,0,0);
	Lb(0,1,0) = La(0,1,0);
	Lb(0,0,1) = La(0,0,1);
	if( do_phi ) {
		Lb[0] *= T(7.2000000000000000e+02);
		Lb[0] = FMA( x[56], La600, Lb[0]);
		Lb[0] = FMA( x[77], La060, Lb[0]);
		Lb[0] = FMA( x[83], La006, Lb[0]);
		Lb[0] *= T(1.6666666666666669e-01);
		Lb[0] = FMA( x[78], La051, Lb[0]);
		Lb[0] = FMA( x[50], La050, Lb[0]);
		Lb[0] = FMA( x[76], La105, Lb[0]);
		Lb[0] = FMA( x[82], La015, Lb[0]);
		Lb[0] = FMA( x[71], La150, Lb[0]);
		Lb[0] = FMA( x[35], La500, Lb[0]);
		Lb[0] = FMA( x[58], La501, Lb[0]);
		Lb[0] = FMA( x[57], La510, Lb[0]);
		Lb[0] = FMA( x[55], La005, Lb[0]);
		Lb[0] *= T(4.0000000000000002e-01);
		Lb[0] = FMA( x[59], La420, Lb[0]);
		Lb[0] = FMA( x[61], La402, Lb[0]);
		Lb[0] = FMA( x[70], La204, Lb[0]);
		Lb[0] = FMA( x[81], La024, Lb[0]);
		Lb[0] = FMA( x[79], La042, Lb[0]);
		Lb[0] = FMA( x[66], La240, Lb[0]);
		Lb[0] *= T(7.5000000000000000e-01);
		Lb[0] = FMA( x[62], La330, Lb[0]);
		Lb[0] = FMA( x[80], La033, Lb[0]);
		Lb[0] = FMA( x[65], La303, Lb[0]);
		Lb[0] *= T(6.6666666666666663e-01);
		Lb[0] = FMA( x[30], La040, Lb[0]);
		Lb[0] = FMA( x[45], La140, Lb[0]);
		Lb[0] = FMA( x[49], La104, Lb[0]);
		Lb[0] = FMA( x[75], La114, Lb[0]);
		Lb[0] = FMA( x[72], La141, Lb[0]);
		Lb[0] = FMA( x[34], La004, Lb[0]);
		Lb[0] = FMA( x[60], La411, Lb[0]);
		Lb[0] = FMA( x[54], La014, Lb[0]);
		Lb[0] = FMA( x[20], La400, Lb[0]);
		Lb[0] = FMA( x[36], La410, Lb[0]);
		Lb[0] = FMA( x[51], La041, Lb[0]);
		Lb[0] = FMA( x[37], La401, Lb[0]);
		Lb[0] *= T(5.0000000000000000e-01);
		Lb[0] = FMA( x[41], La230, Lb[0]);
		Lb[0] = FMA( x[73], La132, Lb[0]);
		Lb[0] = FMA( x[44], La203, Lb[0]);
		Lb[0] = FMA( x[69], La213, Lb[0]);
		Lb[0] = FMA( x[67], La231, Lb[0]);
		Lb[0] = FMA( x[63], La321, Lb[0]);
		Lb[0] = FMA( x[38], La320, Lb[0]);
		Lb[0] = FMA( x[40], La302, Lb[0]);
		Lb[0] = FMA( x[74], La123, Lb[0]);
		Lb[0] = FMA( x[64], La312, Lb[0]);
		Lb[0] = FMA( x[53], La023, Lb[0]);
		Lb[0] = FMA( x[52], La032, Lb[0]);
		Lb[0] *= T(6.6666666666666663e-01);
		Lb[0] = FMA( x[68], La222, Lb[0]);
		Lb[0] *= T(7.5000000000000000e-01);
		Lb[0] = FMA( x[26], La130, Lb[0]);
		Lb[0] = FMA( x[19], La003, Lb[0]);
		Lb[0] = FMA( x[33], La013, Lb[0]);
		Lb[0] = FMA( x[16], La030, Lb[0]);
		Lb[0] = FMA( x[31], La031, Lb[0]);
		Lb[0] = FMA( x[39], La311, Lb[0]);
		Lb[0] = FMA( x[21], La310, Lb[0]);
		Lb[0] = FMA( x[22], La301, Lb[0]);
		Lb[0] = FMA( x[10], La300, Lb[0]);
		Lb[0] = FMA( x[29], La103, Lb[0]);
		Lb[0] = FMA( x[46], La131, Lb[0]);
		Lb[0] = FMA( x[48], La113, Lb[0]);
		Lb[0] *= T(6.6666666666666663e-01);
		Lb[0] = FMA( x[23], La220, Lb[0]);
		Lb[0] = FMA( x[42], La221, Lb[0]);
		Lb[0] = FMA( x[43], La212, Lb[0]);
		Lb[0] = FMA( x[32], La022, Lb[0]);
		Lb[0] = FMA( x[47], La122, Lb[0]);
		Lb[0] = FMA( x[25], La202, Lb[0]);
		Lb[0] *= T(5.0000000000000000e-01);
		Lb[0] = FMA( x[9], La002, Lb[0]);
		Lb[0] = FMA( x[28], La112, Lb[0]);
		Lb[0] = FMA( x[18], La012, Lb[0]);
		Lb[0] = FMA( x[7], La020, Lb[0]);
		Lb[0] = FMA( x[17], La021, Lb[0]);
		Lb[0] = FMA( x[27], La121, Lb[0]);
		Lb[0] = FMA( x[4], La200, Lb[0]);
		Lb[0] = FMA( x[12], La201, Lb[0]);
		Lb[0] = FMA( x[13], La120, Lb[0]);
		Lb[0] = FMA( x[15], La102, Lb[0]);
		Lb[0] = FMA( x[11], La210, Lb[0]);
		Lb[0] = FMA( x[24], La211, Lb[0]);
		Lb[0] *= T(5.0000000000000000e-01);
		Lb[0] = FMA( x[1], La100, Lb[0]);
		Lb[0] = FMA( x[6], La101, Lb[0]);
		Lb[0] = FMA( x[3], La001, Lb[0]);
		Lb[0] = FMA( x[8], La011, Lb[0]);
		Lb[0] = FMA( x[2], La010, Lb[0]);
		Lb[0] = FMA( x[5], La110, Lb[0]);
		Lb[0] = FMA( x[14], La111, Lb[0]);
	}
	Lb[1] *= T(1.2000000000000000e+02);
	Lb[1] = FMA( x[35], La600, Lb[1]);
	Lb[1] = FMA( x[50], La150, Lb[1]);
	Lb[1] = FMA( x[55], La105, Lb[1]);
	Lb[1] *= T(2.0000000000000001e-01);
	Lb[1] = FMA( x[36], La510, Lb[1]);
	Lb[1] = FMA( x[37], La501, Lb[1]);
	Lb[1] = FMA( x[20], La500, Lb[1]);
	Lb[1] = FMA( x[45], La240, Lb[1]);
	Lb[1] = FMA( x[54], La114, Lb[1]);
	Lb[1] = FMA( x[49], La204, Lb[1]);
	Lb[1] = FMA( x[34], La104, Lb[1]);
	Lb[1] = FMA( x[51], La141, Lb[1]);
	Lb[1] = FMA( x[30], La140, Lb[1]);
	Lb[1] *= T(5.0000000000000000e-01);
	Lb[1] = FMA( x[40], La402, Lb[1]);
	Lb[1] = FMA( x[44], La303, Lb[1]);
	Lb[1] = FMA( x[41], La330, Lb[1]);
	Lb[1] = FMA( x[52], La132, Lb[1]);
	Lb[1] = FMA( x[53], La123, Lb[1]);
	Lb[1] = FMA( x[38], La420, Lb[1]);
	Lb[1] *= T(5.0000000000000000e-01);
	Lb[1] = FMA( x[16], La130, Lb[1]);
	Lb[1] = FMA( x[19], La103, Lb[1]);
	Lb[1] = FMA( x[33], La113, Lb[1]);
	Lb[1] = FMA( x[46], La231, Lb[1]);
	Lb[1] = FMA( x[26], La230, Lb[1]);
	Lb[1] = FMA( x[48], La213, Lb[1]);
	Lb[1] = FMA( x[10], La400, Lb[1]);
	Lb[1] = FMA( x[39], La411, Lb[1]);
	Lb[1] = FMA( x[29], La203, Lb[1]);
	Lb[1] = FMA( x[22], La401, Lb[1]);
	Lb[1] = FMA( x[21], La410, Lb[1]);
	Lb[1] = FMA( x[31], La131, Lb[1]);
	Lb[1] *= T(6.6666666666666663e-01);
	Lb[1] = FMA( x[42], La321, Lb[1]);
	Lb[1] = FMA( x[23], La320, Lb[1]);
	Lb[1] = FMA( x[43], La312, Lb[1]);
	Lb[1] = FMA( x[47], La222, Lb[1]);
	Lb[1] = FMA( x[32], La122, Lb[1]);
	Lb[1] = FMA( x[25], La302, Lb[1]);
	Lb[1] *= T(5.0000000000000000e-01);
	Lb[1] = FMA( x[28], La212, Lb[1]);
	Lb[1] = FMA( x[24], La311, Lb[1]);
	Lb[1] = FMA( x[11], La310, Lb[1]);
	Lb[1] = FMA( x[12], La301, Lb[1]);
	Lb[1] = FMA( x[4], La300, Lb[1]);
	Lb[1] = FMA( x[27], La221, Lb[1]);
	Lb[1] = FMA( x[13], La220, Lb[1]);
	Lb[1] = FMA( x[15], La202, Lb[1]);
	Lb[1] = FMA( x[17], La121, Lb[1]);
	Lb[1] = FMA( x[7], La120, Lb[1]);
	Lb[1] = FMA( x[18], La112, Lb[1]);
	Lb[1] = FMA( x[9], La102, Lb[1]);
	Lb[1] *= T(5.0000000000000000e-01);
	Lb[1] = FMA( x[3], La101, Lb[1]);
	Lb[1] = FMA( x[14], La211, Lb[1]);
	Lb[1] = FMA( x[5], La210, Lb[1]);
	Lb[1] = FMA( x[6], La201, Lb[1]);
	Lb[1] = FMA( x[1], La200, Lb[1]);
	Lb[1] = FMA( x[8], La111, Lb[1]);
	Lb[1] = FMA( x[2], La110, Lb[1]);
	Lb[2] *= T(1.2000000000000000e+02);
	Lb[2] = FMA( x[35], La510, Lb[2]);
	Lb[2] = FMA( x[50], La060, Lb[2]);
	Lb[2] = FMA( x[55], La015, Lb[2]);
	Lb[2] *= T(2.0000000000000001e-01);
	Lb[2] = FMA( x[36], La420, Lb[2]);
	Lb[2] = FMA( x[37], La411, Lb[2]);
	Lb[2] = FMA( x[20], La410, Lb[2]);
	Lb[2] = FMA( x[45], La150, Lb[2]);
	Lb[2] = FMA( x[54], La024, Lb[2]);
	Lb[2] = FMA( x[49], La114, Lb[2]);
	Lb[2] = FMA( x[34], La014, Lb[2]);
	Lb[2] = FMA( x[51], La051, Lb[2]);
	Lb[2] = FMA( x[30], La050, Lb[2]);
	Lb[2] *= T(5.0000000000000000e-01);
	Lb[2] = FMA( x[40], La312, Lb[2]);
	Lb[2] = FMA( x[44], La213, Lb[2]);
	Lb[2] = FMA( x[41], La240, Lb[2]);
	Lb[2] = FMA( x[52], La042, Lb[2]);
	Lb[2] = FMA( x[53], La033, Lb[2]);
	Lb[2] = FMA( x[38], La330, Lb[2]);
	Lb[2] *= T(5.0000000000000000e-01);
	Lb[2] = FMA( x[16], La040, Lb[2]);
	Lb[2] = FMA( x[19], La013, Lb[2]);
	Lb[2] = FMA( x[33], La023, Lb[2]);
	Lb[2] = FMA( x[46], La141, Lb[2]);
	Lb[2] = FMA( x[26], La140, Lb[2]);
	Lb[2] = FMA( x[48], La123, Lb[2]);
	Lb[2] = FMA( x[10], La310, Lb[2]);
	Lb[2] = FMA( x[39], La321, Lb[2]);
	Lb[2] = FMA( x[29], La113, Lb[2]);
	Lb[2] = FMA( x[22], La311, Lb[2]);
	Lb[2] = FMA( x[21], La320, Lb[2]);
	Lb[2] = FMA( x[31], La041, Lb[2]);
	Lb[2] *= T(6.6666666666666663e-01);
	Lb[2] = FMA( x[42], La231, Lb[2]);
	Lb[2] = FMA( x[23], La230, Lb[2]);
	Lb[2] = FMA( x[43], La222, Lb[2]);
	Lb[2] = FMA( x[47], La132, Lb[2]);
	Lb[2] = FMA( x[32], La032, Lb[2]);
	Lb[2] = FMA( x[25], La212, Lb[2]);
	Lb[2] *= T(5.0000000000000000e-01);
	Lb[2] = FMA( x[28], La122, Lb[2]);
	Lb[2] = FMA( x[24], La221, Lb[2]);
	Lb[2] = FMA( x[11], La220, Lb[2]);
	Lb[2] = FMA( x[12], La211, Lb[2]);
	Lb[2] = FMA( x[4], La210, Lb[2]);
	Lb[2] = FMA( x[27], La131, Lb[2]);
	Lb[2] = FMA( x[13], La130, Lb[2]);
	Lb[2] = FMA( x[15], La112, Lb[2]);
	Lb[2] = FMA( x[17], La031, Lb[2]);
	Lb[2] = FMA( x[7], La030, Lb[2]);
	Lb[2] = FMA( x[18], La022, Lb[2]);
	Lb[2] = FMA( x[9], La012, Lb[2]);
	Lb[2] *= T(5.0000000000000000e-01);
	Lb[2] = FMA( x[3], La011, Lb[2]);
	Lb[2] = FMA( x[14], La121, Lb[2]);
	Lb[2] = FMA( x[5], La120, Lb[2]);
	Lb[2] = FMA( x[6], La111, Lb[2]);
	Lb[2] = FMA( x[1], La110, Lb[2]);
	Lb[2] = FMA( x[8], La021, Lb[2]);
	Lb[2] = FMA( x[2], La020, Lb[2]);
	Lb[3] *= T(1.2000000000000000e+02);
	Lb[3] = FMA( x[35], La501, Lb[3]);
	Lb[3] = FMA( x[50], La051, Lb[3]);
	Lb[3] = FMA( x[55], La006, Lb[3]);
	Lb[3] *= T(2.0000000000000001e-01);
	Lb[3] = FMA( x[36], La411, Lb[3]);
	Lb[3] = FMA( x[37], La402, Lb[3]);
	Lb[3] = FMA( x[20], La401, Lb[3]);
	Lb[3] = FMA( x[45], La141, Lb[3]);
	Lb[3] = FMA( x[54], La015, Lb[3]);
	Lb[3] = FMA( x[49], La105, Lb[3]);
	Lb[3] = FMA( x[34], La005, Lb[3]);
	Lb[3] = FMA( x[51], La042, Lb[3]);
	Lb[3] = FMA( x[30], La041, Lb[3]);
	Lb[3] *= T(5.0000000000000000e-01);
	Lb[3] = FMA( x[40], La303, Lb[3]);
	Lb[3] = FMA( x[44], La204, Lb[3]);
	Lb[3] = FMA( x[41], La231, Lb[3]);
	Lb[3] = FMA( x[52], La033, Lb[3]);
	Lb[3] = FMA( x[53], La024, Lb[3]);
	Lb[3] = FMA( x[38], La321, Lb[3]);
	Lb[3] *= T(5.0000000000000000e-01);
	Lb[3] = FMA( x[16], La031, Lb[3]);
	Lb[3] = FMA( x[19], La004, Lb[3]);
	Lb[3] = FMA( x[33], La014, Lb[3]);
	Lb[3] = FMA( x[46], La132, Lb[3]);
	Lb[3] = FMA( x[26], La131, Lb[3]);
	Lb[3] = FMA( x[48], La114, Lb[3]);
	Lb[3] = FMA( x[10], La301, Lb[3]);
	Lb[3] = FMA( x[39], La312, Lb[3]);
	Lb[3] = FMA( x[29], La104, Lb[3]);
	Lb[3] = FMA( x[22], La302, Lb[3]);
	Lb[3] = FMA( x[21], La311, Lb[3]);
	Lb[3] = FMA( x[31], La032, Lb[3]);
	Lb[3] *= T(6.6666666666666663e-01);
	Lb[3] = FMA( x[42], La222, Lb[3]);
	Lb[3] = FMA( x[23], La221, Lb[3]);
	Lb[3] = FMA( x[43], La213, Lb[3]);
	Lb[3] = FMA( x[47], La123, Lb[3]);
	Lb[3] = FMA( x[32], La023, Lb[3]);
	Lb[3] = FMA( x[25], La203, Lb[3]);
	Lb[3] *= T(5.0000000000000000e-01);
	Lb[3] = FMA( x[28], La113, Lb[3]);
	Lb[3] = FMA( x[24], La212, Lb[3]);
	Lb[3] = FMA( x[11], La211, Lb[3]);
	Lb[3] = FMA( x[12], La202, Lb[3]);
	Lb[3] = FMA( x[4], La201, Lb[3]);
	Lb[3] = FMA( x[27], La122, Lb[3]);
	Lb[3] = FMA( x[13], La121, Lb[3]);
	Lb[3] = FMA( x[15], La103, Lb[3]);
	Lb[3] = FMA( x[17], La022, Lb[3]);
	Lb[3] = FMA( x[7], La021, Lb[3]);
	Lb[3] = FMA( x[18], La013, Lb[3]);
	Lb[3] = FMA( x[9], La003, Lb[3]);
	Lb[3] *= T(5.0000000000000000e-01);
	Lb[3] = FMA( x[3], La002, Lb[3]);
	Lb[3] = FMA( x[14], La112, Lb[3]);
	Lb[3] = FMA( x[5], La111, Lb[3]);
	Lb[3] = FMA( x[6], La102, Lb[3]);
	Lb[3] = FMA( x[1], La101, Lb[3]);
	Lb[3] = FMA( x[8], La012, Lb[3]);
	Lb[3] = FMA( x[2], La011, Lb[3]);
	return Lb;
/* FLOPS = 540 + do_phi * 178*/
}
template<class T>
CUDA_EXPORT
#ifdef __CUDACC__
__noinline__
#endif
tensor_trless_sym<T, 2> pm_L2P(const tensor_trless_sym<T, 8>& La, array<T,NDIM> X, bool do_phi) {
	X[0] *= T(SCALE_FACTOR);
	X[1] *= T(SCALE_FACTOR);
	X[2] *= T(SCALE_FACTOR);
	tensor_trless_sym<T, 2> Lb;
	T x[120];
	x[0] = T(1);
	x[1] = X[0];
	x[2] = X[1];
	x[3] = X[2];
	x[9] = x[3] * x[3]; // 0 0 2 | 0 0 1 | 0 0 1
	x[8] = x[2] * x[3]; // 0 1 1 | 0 0 1 | 0 1 0
	x[7] = x[2] * x[2]; // 0 2 0 | 0 1 0 | 0 1 0
	x[6] = x[1] * x[3]; // 1 0 1 | 0 0 1 | 1 0 0
	x[5] = x[1] * x[2]; // 1 1 0 | 0 1 0 | 1 0 0
	x[4] = x[1] * x[1]; // 2 0 0 | 1 0 0 | 1 0 0
	x[19] = x[9] * x[3]; // 0 0 3 | 0 0 1 | 0 0 2
	x[18] = x[8] * x[3]; // 0 1 2 | 0 0 1 | 0 1 1
	x[17] = x[8] * x[2]; // 0 2 1 | 0 1 0 | 0 1 1
	x[16] = x[7] * x[2]; // 0 3 0 | 0 1 0 | 0 2 0
	x[15] = x[6] * x[3]; // 1 0 2 | 0 0 1 | 1 0 1
	x[14] = x[5] * x[3]; // 1 1 1 | 0 0 1 | 1 1 0
	x[13] = x[5] * x[2]; // 1 2 0 | 0 1 0 | 1 1 0
	x[12] = x[6] * x[1]; // 2 0 1 | 1 0 0 | 1 0 1
	x[11] = x[5] * x[1]; // 2 1 0 | 1 0 0 | 1 1 0
	x[10] = x[4] * x[1]; // 3 0 0 | 1 0 0 | 2 0 0
	x[34] = x[9] * x[9]; // 0 0 4 | 0 0 2 | 0 0 2
	x[33] = x[8] * x[9]; // 0 1 3 | 0 0 2 | 0 1 1
	x[32] = x[8] * x[8]; // 0 2 2 | 0 1 1 | 0 1 1
	x[31] = x[8] * x[7]; // 0 3 1 | 0 2 0 | 0 1 1
	x[30] = x[7] * x[7]; // 0 4 0 | 0 2 0 | 0 2 0
	x[29] = x[6] * x[9]; // 1 0 3 | 0 0 2 | 1 0 1
	x[28] = x[5] * x[9]; // 1 1 2 | 0 0 2 | 1 1 0
	x[27] = x[5] * x[8]; // 1 2 1 | 0 1 1 | 1 1 0
	x[26] = x[5] * x[7]; // 1 3 0 | 0 2 0 | 1 1 0
	x[25] = x[6] * x[6]; // 2 0 2 | 1 0 1 | 1 0 1
	x[24] = x[5] * x[6]; // 2 1 1 | 1 0 1 | 1 1 0
	x[23] = x[5] * x[5]; // 2 2 0 | 1 1 0 | 1 1 0
	x[22] = x[6] * x[4]; // 3 0 1 | 2 0 0 | 1 0 1
	x[21] = x[5] * x[4]; // 3 1 0 | 2 0 0 | 1 1 0
	x[20] = x[4] * x[4]; // 4 0 0 | 2 0 0 | 2 0 0
	x[55] = x[19] * x[9]; // 0 0 5 | 0 0 2 | 0 0 3
	x[54] = x[18] * x[9]; // 0 1 4 | 0 0 2 | 0 1 2
	x[53] = x[17] * x[9]; // 0 2 3 | 0 0 2 | 0 2 1
	x[52] = x[17] * x[8]; // 0 3 2 | 0 1 1 | 0 2 1
	x[51] = x[17] * x[7]; // 0 4 1 | 0 2 0 | 0 2 1
	x[50] = x[16] * x[7]; // 0 5 0 | 0 2 0 | 0 3 0
	x[49] = x[15] * x[9]; // 1 0 4 | 0 0 2 | 1 0 2
	x[48] = x[14] * x[9]; // 1 1 3 | 0 0 2 | 1 1 1
	x[47] = x[14] * x[8]; // 1 2 2 | 0 1 1 | 1 1 1
	x[46] = x[14] * x[7]; // 1 3 1 | 0 2 0 | 1 1 1
	x[45] = x[13] * x[7]; // 1 4 0 | 0 2 0 | 1 2 0
	x[44] = x[12] * x[9]; // 2 0 3 | 0 0 2 | 2 0 1
	x[43] = x[14] * x[6]; // 2 1 2 | 1 0 1 | 1 1 1
	x[42] = x[14] * x[5]; // 2 2 1 | 1 1 0 | 1 1 1
	x[41] = x[11] * x[7]; // 2 3 0 | 0 2 0 | 2 1 0
	x[40] = x[12] * x[6]; // 3 0 2 | 1 0 1 | 2 0 1
	x[39] = x[14] * x[4]; // 3 1 1 | 2 0 0 | 1 1 1
	x[38] = x[11] * x[5]; // 3 2 0 | 1 1 0 | 2 1 0
	x[37] = x[12] * x[4]; // 4 0 1 | 2 0 0 | 2 0 1
	x[36] = x[11] * x[4]; // 4 1 0 | 2 0 0 | 2 1 0
	x[35] = x[10] * x[4]; // 5 0 0 | 2 0 0 | 3 0 0
	x[83] = x[19] * x[19]; // 0 0 6 | 0 0 3 | 0 0 3
	x[82] = x[18] * x[19]; // 0 1 5 | 0 0 3 | 0 1 2
	x[81] = x[17] * x[19]; // 0 2 4 | 0 0 3 | 0 2 1
	x[80] = x[17] * x[18]; // 0 3 3 | 0 1 2 | 0 2 1
	x[79] = x[17] * x[17]; // 0 4 2 | 0 2 1 | 0 2 1
	x[78] = x[17] * x[16]; // 0 5 1 | 0 3 0 | 0 2 1
	x[77] = x[16] * x[16]; // 0 6 0 | 0 3 0 | 0 3 0
	x[76] = x[15] * x[19]; // 1 0 5 | 0 0 3 | 1 0 2
	x[75] = x[14] * x[19]; // 1 1 4 | 0 0 3 | 1 1 1
	x[74] = x[14] * x[18]; // 1 2 3 | 0 1 2 | 1 1 1
	x[73] = x[14] * x[17]; // 1 3 2 | 0 2 1 | 1 1 1
	x[72] = x[14] * x[16]; // 1 4 1 | 0 3 0 | 1 1 1
	x[71] = x[13] * x[16]; // 1 5 0 | 0 3 0 | 1 2 0
	x[70] = x[12] * x[19]; // 2 0 4 | 0 0 3 | 2 0 1
	x[69] = x[14] * x[15]; // 2 1 3 | 1 0 2 | 1 1 1
	x[68] = x[14] * x[14]; // 2 2 2 | 1 1 1 | 1 1 1
	x[67] = x[14] * x[13]; // 2 3 1 | 1 2 0 | 1 1 1
	x[66] = x[11] * x[16]; // 2 4 0 | 0 3 0 | 2 1 0
	x[65] = x[12] * x[15]; // 3 0 3 | 1 0 2 | 2 0 1
	x[64] = x[14] * x[12]; // 3 1 2 | 2 0 1 | 1 1 1
	x[63] = x[14] * x[11]; // 3 2 1 | 2 1 0 | 1 1 1
	x[62] = x[11] * x[13]; // 3 3 0 | 1 2 0 | 2 1 0
	x[61] = x[12] * x[12]; // 4 0 2 | 2 0 1 | 2 0 1
	x[60] = x[14] * x[10]; // 4 1 1 | 3 0 0 | 1 1 1
	x[59] = x[11] * x[11]; // 4 2 0 | 2 1 0 | 2 1 0
	x[58] = x[12] * x[10]; // 5 0 1 | 3 0 0 | 2 0 1
	x[57] = x[11] * x[10]; // 5 1 0 | 3 0 0 | 2 1 0
	x[56] = x[10] * x[10]; // 6 0 0 | 3 0 0 | 3 0 0
	x[119] = x[34] * x[19]; // 0 0 7 | 0 0 3 | 0 0 4
	x[118] = x[33] * x[19]; // 0 1 6 | 0 0 3 | 0 1 3
	x[117] = x[32] * x[19]; // 0 2 5 | 0 0 3 | 0 2 2
	x[116] = x[32] * x[18]; // 0 3 4 | 0 1 2 | 0 2 2
	x[115] = x[32] * x[17]; // 0 4 3 | 0 2 1 | 0 2 2
	x[114] = x[32] * x[16]; // 0 5 2 | 0 3 0 | 0 2 2
	x[113] = x[31] * x[16]; // 0 6 1 | 0 3 0 | 0 3 1
	x[112] = x[30] * x[16]; // 0 7 0 | 0 3 0 | 0 4 0
	x[111] = x[29] * x[19]; // 1 0 6 | 0 0 3 | 1 0 3
	x[110] = x[28] * x[19]; // 1 1 5 | 0 0 3 | 1 1 2
	x[109] = x[27] * x[19]; // 1 2 4 | 0 0 3 | 1 2 1
	x[108] = x[27] * x[18]; // 1 3 3 | 0 1 2 | 1 2 1
	x[107] = x[27] * x[17]; // 1 4 2 | 0 2 1 | 1 2 1
	x[106] = x[27] * x[16]; // 1 5 1 | 0 3 0 | 1 2 1
	x[105] = x[26] * x[16]; // 1 6 0 | 0 3 0 | 1 3 0
	x[104] = x[25] * x[19]; // 2 0 5 | 0 0 3 | 2 0 2
	x[103] = x[24] * x[19]; // 2 1 4 | 0 0 3 | 2 1 1
	x[102] = x[24] * x[18]; // 2 2 3 | 0 1 2 | 2 1 1
	x[101] = x[24] * x[17]; // 2 3 2 | 0 2 1 | 2 1 1
	x[100] = x[24] * x[16]; // 2 4 1 | 0 3 0 | 2 1 1
	x[99] = x[23] * x[16]; // 2 5 0 | 0 3 0 | 2 2 0
	x[98] = x[25] * x[15]; // 3 0 4 | 1 0 2 | 2 0 2
	x[97] = x[24] * x[15]; // 3 1 3 | 1 0 2 | 2 1 1
	x[96] = x[24] * x[14]; // 3 2 2 | 1 1 1 | 2 1 1
	x[95] = x[24] * x[13]; // 3 3 1 | 1 2 0 | 2 1 1
	x[94] = x[23] * x[13]; // 3 4 0 | 1 2 0 | 2 2 0
	x[93] = x[25] * x[12]; // 4 0 3 | 2 0 1 | 2 0 2
	x[92] = x[24] * x[12]; // 4 1 2 | 2 0 1 | 2 1 1
	x[91] = x[24] * x[11]; // 4 2 1 | 2 1 0 | 2 1 1
	x[90] = x[23] * x[11]; // 4 3 0 | 2 1 0 | 2 2 0
	x[89] = x[25] * x[10]; // 5 0 2 | 3 0 0 | 2 0 2
	x[88] = x[24] * x[10]; // 5 1 1 | 3 0 0 | 2 1 1
	x[87] = x[23] * x[10]; // 5 2 0 | 3 0 0 | 2 2 0
	x[86] = x[22] * x[10]; // 6 0 1 | 3 0 0 | 3 0 1
	x[85] = x[21] * x[10]; // 6 1 0 | 3 0 0 | 3 1 0
	x[84] = x[20] * x[10]; // 7 0 0 | 3 0 0 | 4 0 0
	const T La000 =  (La[0]);
	const T La001 =  (La[36]);
	const T La002 =  (La[64]);
	const T La003 = -(La[39]+(La[41]));
	const T La004 =  (La[10]+FMA(T(2),La[12],(La[14])));
	const T La005 =  (La[46]+FMA(T(2),La[48],(La[50])));
	const T La006 = -(La[21]+FMA(T(3),La[23],FMA(T(3),La[25],(La[27]))));
	const T La007 = -(La[57]+FMA(T(3),La[59],FMA(T(3),La[61],(La[63]))));
	const T La010 =  (La[2]);
	const T La011 =  (La[38]);
	const T La012 = -(La[7]+(La[9]));
	const T La013 = -(La[43]+(La[45]));
	const T La014 =  (La[16]+FMA(T(2),La[18],(La[20])));
	const T La015 =  (La[52]+FMA(T(2),La[54],(La[56])));
	const T La016 = -(La[29]+FMA(T(3),La[31],FMA(T(3),La[33],(La[35]))));
	const T La020 =  (La[5]);
	const T La021 =  (La[41]);
	const T La022 = -(La[12]+(La[14]));
	const T La023 = -(La[48]+(La[50]));
	const T La024 =  (La[23]+FMA(T(2),La[25],(La[27])));
	const T La025 =  (La[59]+FMA(T(2),La[61],(La[63])));
	const T La030 =  (La[9]);
	const T La031 =  (La[45]);
	const T La032 = -(La[18]+(La[20]));
	const T La033 = -(La[54]+(La[56]));
	const T La034 =  (La[31]+FMA(T(2),La[33],(La[35])));
	const T La040 =  (La[14]);
	const T La041 =  (La[50]);
	const T La042 = -(La[25]+(La[27]));
	const T La043 = -(La[61]+(La[63]));
	const T La050 =  (La[20]);
	const T La051 =  (La[56]);
	const T La052 = -(La[33]+(La[35]));
	const T La060 =  (La[27]);
	const T La061 =  (La[63]);
	const T La070 =  (La[35]);
	const T La100 =  (La[1]);
	const T La101 =  (La[37]);
	const T La102 = -(La[6]+(La[8]));
	const T La103 = -(La[42]+(La[44]));
	const T La104 =  (La[15]+FMA(T(2),La[17],(La[19])));
	const T La105 =  (La[51]+FMA(T(2),La[53],(La[55])));
	const T La106 = -(La[28]+FMA(T(3),La[30],FMA(T(3),La[32],(La[34]))));
	const T La110 =  (La[4]);
	const T La111 =  (La[40]);
	const T La112 = -(La[11]+(La[13]));
	const T La113 = -(La[47]+(La[49]));
	const T La114 =  (La[22]+FMA(T(2),La[24],(La[26])));
	const T La115 =  (La[58]+FMA(T(2),La[60],(La[62])));
	const T La120 =  (La[8]);
	const T La121 =  (La[44]);
	const T La122 = -(La[17]+(La[19]));
	const T La123 = -(La[53]+(La[55]));
	const T La124 =  (La[30]+FMA(T(2),La[32],(La[34])));
	const T La130 =  (La[13]);
	const T La131 =  (La[49]);
	const T La132 = -(La[24]+(La[26]));
	const T La133 = -(La[60]+(La[62]));
	const T La140 =  (La[19]);
	const T La141 =  (La[55]);
	const T La142 = -(La[32]+(La[34]));
	const T La150 =  (La[26]);
	const T La151 =  (La[62]);
	const T La160 =  (La[34]);
	const T La200 =  (La[3]);
	const T La201 =  (La[39]);
	const T La202 = -(La[10]+(La[12]));
	const T La203 = -(La[46]+(La[48]));
	const T La204 =  (La[21]+FMA(T(2),La[23],(La[25])));
	const T La205 =  (La[57]+FMA(T(2),La[59],(La[61])));
	const T La210 =  (La[7]);
	const T La211 =  (La[43]);
	const T La212 = -(La[16]+(La[18]));
	const T La213 = -(La[52]+(La[54]));
	const T La214 =  (La[29]+FMA(T(2),La[31],(La[33])));
	const T La220 =  (La[12]);
	const T La221 =  (La[48]);
	const T La222 = -(La[23]+(La[25]));
	const T La223 = -(La[59]+(La[61]));
	const T La230 =  (La[18]);
	const T La231 =  (La[54]);
	const T La232 = -(La[31]+(La[33]));
	const T La240 =  (La[25]);
	const T La241 =  (La[61]);
	const T La250 =  (La[33]);
	const T La300 =  (La[6]);
	const T La301 =  (La[42]);
	const T La302 = -(La[15]+(La[17]));
	const T La303 = -(La[51]+(La[53]));
	const T La304 =  (La[28]+FMA(T(2),La[30],(La[32])));
	const T La310 =  (La[11]);
	const T La311 =  (La[47]);
	const T La312 = -(La[22]+(La[24]));
	const T La313 = -(La[58]+(La[60]));
	const T La320 =  (La[17]);
	const T La321 =  (La[53]);
	const T La322 = -(La[30]+(La[32]));
	const T La330 =  (La[24]);
	const T La331 =  (La[60]);
	const T La340 =  (La[32]);
	const T La400 =  (La[10]);
	const T La401 =  (La[46]);
	const T La402 = -(La[21]+(La[23]));
	const T La403 = -(La[57]+(La[59]));
	const T La410 =  (La[16]);
	const T La411 =  (La[52]);
	const T La412 = -(La[29]+(La[31]));
	const T La420 =  (La[23]);
	const T La421 =  (La[59]);
	const T La430 =  (La[31]);
	const T La500 =  (La[15]);
	const T La501 =  (La[51]);
	const T La502 = -(La[28]+(La[30]));
	const T La510 =  (La[22]);
	const T La511 =  (La[58]);
	const T La520 =  (La[30]);
	const T La600 =  (La[21]);
	const T La601 =  (La[57]);
	const T La610 =  (La[29]);
	const T La700 =  (La[28]);
	Lb(0,0,0) = La(0,0,0);
	Lb(1,0,0) = La(1,0,0);
	Lb(0,1,0) = La(0,1,0);
	Lb(0,0,1) = La(0,0,1);
	if( do_phi ) {
		Lb[0] *= T(5.0400000000000000e+03);
		Lb[0] = FMA( x[84], La700, Lb[0]);
		Lb[0] = FMA( x[119], La007, Lb[0]);
		Lb[0] = FMA( x[112], La070, Lb[0]);
		Lb[0] *= T(1.4285714285714285e-01);
		Lb[0] = FMA( x[85], La610, Lb[0]);
		Lb[0] = FMA( x[86], La601, Lb[0]);
		Lb[0] = FMA( x[111], La106, Lb[0]);
		Lb[0] = FMA( x[83], La006, Lb[0]);
		Lb[0] = FMA( x[56], La600, Lb[0]);
		Lb[0] = FMA( x[105], La160, Lb[0]);
		Lb[0] = FMA( x[118], La016, Lb[0]);
		Lb[0] = FMA( x[113], La061, Lb[0]);
		Lb[0] = FMA( x[77], La060, Lb[0]);
		Lb[0] *= T(3.3333333333333337e-01);
		Lb[0] = FMA( x[89], La502, Lb[0]);
		Lb[0] = FMA( x[117], La025, Lb[0]);
		Lb[0] = FMA( x[99], La250, Lb[0]);
		Lb[0] = FMA( x[114], La052, Lb[0]);
		Lb[0] = FMA( x[104], La205, Lb[0]);
		Lb[0] = FMA( x[87], La520, Lb[0]);
		Lb[0] *= T(5.9999999999999998e-01);
		Lb[0] = FMA( x[94], La340, Lb[0]);
		Lb[0] = FMA( x[115], La043, Lb[0]);
		Lb[0] = FMA( x[98], La304, Lb[0]);
		Lb[0] = FMA( x[116], La034, Lb[0]);
		Lb[0] = FMA( x[93], La403, Lb[0]);
		Lb[0] = FMA( x[90], La430, Lb[0]);
		Lb[0] *= T(8.3333333333333326e-01);
		Lb[0] = FMA( x[82], La015, Lb[0]);
		Lb[0] = FMA( x[110], La115, Lb[0]);
		Lb[0] = FMA( x[71], La150, Lb[0]);
		Lb[0] = FMA( x[106], La151, Lb[0]);
		Lb[0] = FMA( x[55], La005, Lb[0]);
		Lb[0] = FMA( x[76], La105, Lb[0]);
		Lb[0] = FMA( x[88], La511, Lb[0]);
		Lb[0] = FMA( x[57], La510, Lb[0]);
		Lb[0] = FMA( x[58], La501, Lb[0]);
		Lb[0] = FMA( x[35], La500, Lb[0]);
		Lb[0] = FMA( x[78], La051, Lb[0]);
		Lb[0] = FMA( x[50], La050, Lb[0]);
		Lb[0] *= T(4.0000000000000002e-01);
		Lb[0] = FMA( x[61], La402, Lb[0]);
		Lb[0] = FMA( x[66], La240, Lb[0]);
		Lb[0] = FMA( x[103], La214, Lb[0]);
		Lb[0] = FMA( x[70], La204, Lb[0]);
		Lb[0] = FMA( x[91], La421, Lb[0]);
		Lb[0] = FMA( x[100], La241, Lb[0]);
		Lb[0] = FMA( x[59], La420, Lb[0]);
		Lb[0] = FMA( x[92], La412, Lb[0]);
		Lb[0] = FMA( x[109], La124, Lb[0]);
		Lb[0] = FMA( x[107], La142, Lb[0]);
		Lb[0] = FMA( x[79], La042, Lb[0]);
		Lb[0] = FMA( x[81], La024, Lb[0]);
		Lb[0] *= T(7.5000000000000000e-01);
		Lb[0] = FMA( x[65], La303, Lb[0]);
		Lb[0] = FMA( x[97], La313, Lb[0]);
		Lb[0] = FMA( x[108], La133, Lb[0]);
		Lb[0] = FMA( x[62], La330, Lb[0]);
		Lb[0] = FMA( x[95], La331, Lb[0]);
		Lb[0] = FMA( x[80], La033, Lb[0]);
		Lb[0] *= T(6.6666666666666663e-01);
		Lb[0] = FMA( x[20], La400, Lb[0]);
		Lb[0] = FMA( x[30], La040, Lb[0]);
		Lb[0] = FMA( x[51], La041, Lb[0]);
		Lb[0] = FMA( x[101], La232, Lb[0]);
		Lb[0] = FMA( x[102], La223, Lb[0]);
		Lb[0] = FMA( x[96], La322, Lb[0]);
		Lb[0] = FMA( x[37], La401, Lb[0]);
		Lb[0] = FMA( x[49], La104, Lb[0]);
		Lb[0] = FMA( x[75], La114, Lb[0]);
		Lb[0] = FMA( x[60], La411, Lb[0]);
		Lb[0] = FMA( x[34], La004, Lb[0]);
		Lb[0] = FMA( x[72], La141, Lb[0]);
		Lb[0] = FMA( x[45], La140, Lb[0]);
		Lb[0] = FMA( x[54], La014, Lb[0]);
		Lb[0] = FMA( x[36], La410, Lb[0]);
		Lb[0] *= T(5.0000000000000000e-01);
		Lb[0] = FMA( x[53], La023, Lb[0]);
		Lb[0] = FMA( x[40], La302, Lb[0]);
		Lb[0] = FMA( x[64], La312, Lb[0]);
		Lb[0] = FMA( x[74], La123, Lb[0]);
		Lb[0] = FMA( x[67], La231, Lb[0]);
		Lb[0] = FMA( x[41], La230, Lb[0]);
		Lb[0] = FMA( x[38], La320, Lb[0]);
		Lb[0] = FMA( x[63], La321, Lb[0]);
		Lb[0] = FMA( x[69], La213, Lb[0]);
		Lb[0] = FMA( x[73], La132, Lb[0]);
		Lb[0] = FMA( x[44], La203, Lb[0]);
		Lb[0] = FMA( x[52], La032, Lb[0]);
		Lb[0] *= T(6.6666666666666663e-01);
		Lb[0] = FMA( x[68], La222, Lb[0]);
		Lb[0] *= T(7.5000000000000000e-01);
		Lb[0] = FMA( x[16], La030, Lb[0]);
		Lb[0] = FMA( x[48], La113, Lb[0]);
		Lb[0] = FMA( x[33], La013, Lb[0]);
		Lb[0] = FMA( x[39], La311, Lb[0]);
		Lb[0] = FMA( x[21], La310, Lb[0]);
		Lb[0] = FMA( x[19], La003, Lb[0]);
		Lb[0] = FMA( x[31], La031, Lb[0]);
		Lb[0] = FMA( x[10], La300, Lb[0]);
		Lb[0] = FMA( x[46], La131, Lb[0]);
		Lb[0] = FMA( x[26], La130, Lb[0]);
		Lb[0] = FMA( x[29], La103, Lb[0]);
		Lb[0] = FMA( x[22], La301, Lb[0]);
		Lb[0] *= T(6.6666666666666663e-01);
		Lb[0] = FMA( x[23], La220, Lb[0]);
		Lb[0] = FMA( x[43], La212, Lb[0]);
		Lb[0] = FMA( x[47], La122, Lb[0]);
		Lb[0] = FMA( x[42], La221, Lb[0]);
		Lb[0] = FMA( x[25], La202, Lb[0]);
		Lb[0] = FMA( x[32], La022, Lb[0]);
		Lb[0] *= T(5.0000000000000000e-01);
		Lb[0] = FMA( x[13], La120, Lb[0]);
		Lb[0] = FMA( x[27], La121, Lb[0]);
		Lb[0] = FMA( x[18], La012, Lb[0]);
		Lb[0] = FMA( x[28], La112, Lb[0]);
		Lb[0] = FMA( x[7], La020, Lb[0]);
		Lb[0] = FMA( x[17], La021, Lb[0]);
		Lb[0] = FMA( x[9], La002, Lb[0]);
		Lb[0] = FMA( x[4], La200, Lb[0]);
		Lb[0] = FMA( x[12], La201, Lb[0]);
		Lb[0] = FMA( x[15], La102, Lb[0]);
		Lb[0] = FMA( x[11], La210, Lb[0]);
		Lb[0] = FMA( x[24], La211, Lb[0]);
		Lb[0] *= T(5.0000000000000000e-01);
		Lb[0] = FMA( x[3], La001, Lb[0]);
		Lb[0] = FMA( x[14], La111, Lb[0]);
		Lb[0] = FMA( x[5], La110, Lb[0]);
		Lb[0] = FMA( x[8], La011, Lb[0]);
		Lb[0] = FMA( x[2], La010, Lb[0]);
		Lb[0] = FMA( x[6], La101, Lb[0]);
		Lb[0] = FMA( x[1], La100, Lb[0]);
	}
	Lb[1] *= T(7.2000000000000000e+02);
	Lb[1] = FMA( x[56], La700, Lb[1]);
	Lb[1] = FMA( x[77], La160, Lb[1]);
	Lb[1] = FMA( x[83], La106, Lb[1]);
	Lb[1] *= T(1.6666666666666669e-01);
	Lb[1] = FMA( x[78], La151, Lb[1]);
	Lb[1] = FMA( x[50], La150, Lb[1]);
	Lb[1] = FMA( x[76], La205, Lb[1]);
	Lb[1] = FMA( x[82], La115, Lb[1]);
	Lb[1] = FMA( x[71], La250, Lb[1]);
	Lb[1] = FMA( x[35], La600, Lb[1]);
	Lb[1] = FMA( x[58], La601, Lb[1]);
	Lb[1] = FMA( x[57], La610, Lb[1]);
	Lb[1] = FMA( x[55], La105, Lb[1]);
	Lb[1] *= T(4.0000000000000002e-01);
	Lb[1] = FMA( x[59], La520, Lb[1]);
	Lb[1] = FMA( x[61], La502, Lb[1]);
	Lb[1] = FMA( x[70], La304, Lb[1]);
	Lb[1] = FMA( x[81], La124, Lb[1]);
	Lb[1] = FMA( x[79], La142, Lb[1]);
	Lb[1] = FMA( x[66], La340, Lb[1]);
	Lb[1] *= T(7.5000000000000000e-01);
	Lb[1] = FMA( x[62], La430, Lb[1]);
	Lb[1] = FMA( x[80], La133, Lb[1]);
	Lb[1] = FMA( x[65], La403, Lb[1]);
	Lb[1] *= T(6.6666666666666663e-01);
	Lb[1] = FMA( x[30], La140, Lb[1]);
	Lb[1] = FMA( x[45], La240, Lb[1]);
	Lb[1] = FMA( x[49], La204, Lb[1]);
	Lb[1] = FMA( x[75], La214, Lb[1]);
	Lb[1] = FMA( x[72], La241, Lb[1]);
	Lb[1] = FMA( x[34], La104, Lb[1]);
	Lb[1] = FMA( x[60], La511, Lb[1]);
	Lb[1] = FMA( x[54], La114, Lb[1]);
	Lb[1] = FMA( x[20], La500, Lb[1]);
	Lb[1] = FMA( x[36], La510, Lb[1]);
	Lb[1] = FMA( x[51], La141, Lb[1]);
	Lb[1] = FMA( x[37], La501, Lb[1]);
	Lb[1] *= T(5.0000000000000000e-01);
	Lb[1] = FMA( x[41], La330, Lb[1]);
	Lb[1] = FMA( x[73], La232, Lb[1]);
	Lb[1] = FMA( x[44], La303, Lb[1]);
	Lb[1] = FMA( x[69], La313, Lb[1]);
	Lb[1] = FMA( x[67], La331, Lb[1]);
	Lb[1] = FMA( x[63], La421, Lb[1]);
	Lb[1] = FMA( x[38], La420, Lb[1]);
	Lb[1] = FMA( x[40], La402, Lb[1]);
	Lb[1] = FMA( x[74], La223, Lb[1]);
	Lb[1] = FMA( x[64], La412, Lb[1]);
	Lb[1] = FMA( x[53], La123, Lb[1]);
	Lb[1] = FMA( x[52], La132, Lb[1]);
	Lb[1] *= T(6.6666666666666663e-01);
	Lb[1] = FMA( x[68], La322, Lb[1]);
	Lb[1] *= T(7.5000000000000000e-01);
	Lb[1] = FMA( x[26], La230, Lb[1]);
	Lb[1] = FMA( x[19], La103, Lb[1]);
	Lb[1] = FMA( x[33], La113, Lb[1]);
	Lb[1] = FMA( x[16], La130, Lb[1]);
	Lb[1] = FMA( x[31], La131, Lb[1]);
	Lb[1] = FMA( x[39], La411, Lb[1]);
	Lb[1] = FMA( x[21], La410, Lb[1]);
	Lb[1] = FMA( x[22], La401, Lb[1]);
	Lb[1] = FMA( x[10], La400, Lb[1]);
	Lb[1] = FMA( x[29], La203, Lb[1]);
	Lb[1] = FMA( x[46], La231, Lb[1]);
	Lb[1] = FMA( x[48], La213, Lb[1]);
	Lb[1] *= T(6.6666666666666663e-01);
	Lb[1] = FMA( x[23], La320, Lb[1]);
	Lb[1] = FMA( x[42], La321, Lb[1]);
	Lb[1] = FMA( x[43], La312, Lb[1]);
	Lb[1] = FMA( x[32], La122, Lb[1]);
	Lb[1] = FMA( x[47], La222, Lb[1]);
	Lb[1] = FMA( x[25], La302, Lb[1]);
	Lb[1] *= T(5.0000000000000000e-01);
	Lb[1] = FMA( x[9], La102, Lb[1]);
	Lb[1] = FMA( x[28], La212, Lb[1]);
	Lb[1] = FMA( x[18], La112, Lb[1]);
	Lb[1] = FMA( x[7], La120, Lb[1]);
	Lb[1] = FMA( x[17], La121, Lb[1]);
	Lb[1] = FMA( x[27], La221, Lb[1]);
	Lb[1] = FMA( x[4], La300, Lb[1]);
	Lb[1] = FMA( x[12], La301, Lb[1]);
	Lb[1] = FMA( x[13], La220, Lb[1]);
	Lb[1] = FMA( x[15], La202, Lb[1]);
	Lb[1] = FMA( x[11], La310, Lb[1]);
	Lb[1] = FMA( x[24], La311, Lb[1]);
	Lb[1] *= T(5.0000000000000000e-01);
	Lb[1] = FMA( x[1], La200, Lb[1]);
	Lb[1] = FMA( x[6], La201, Lb[1]);
	Lb[1] = FMA( x[3], La101, Lb[1]);
	Lb[1] = FMA( x[8], La111, Lb[1]);
	Lb[1] = FMA( x[2], La110, Lb[1]);
	Lb[1] = FMA( x[5], La210, Lb[1]);
	Lb[1] = FMA( x[14], La211, Lb[1]);
	Lb[2] *= T(7.2000000000000000e+02);
	Lb[2] = FMA( x[56], La610, Lb[2]);
	Lb[2] = FMA( x[77], La070, Lb[2]);
	Lb[2] = FMA( x[83], La016, Lb[2]);
	Lb[2] *= T(1.6666666666666669e-01);
	Lb[2] = FMA( x[78], La061, Lb[2]);
	Lb[2] = FMA( x[50], La060, Lb[2]);
	Lb[2] = FMA( x[76], La115, Lb[2]);
	Lb[2] = FMA( x[82], La025, Lb[2]);
	Lb[2] = FMA( x[71], La160, Lb[2]);
	Lb[2] = FMA( x[35], La510, Lb[2]);
	Lb[2] = FMA( x[58], La511, Lb[2]);
	Lb[2] = FMA( x[57], La520, Lb[2]);
	Lb[2] = FMA( x[55], La015, Lb[2]);
	Lb[2] *= T(4.0000000000000002e-01);
	Lb[2] = FMA( x[59], La430, Lb[2]);
	Lb[2] = FMA( x[61], La412, Lb[2]);
	Lb[2] = FMA( x[70], La214, Lb[2]);
	Lb[2] = FMA( x[81], La034, Lb[2]);
	Lb[2] = FMA( x[79], La052, Lb[2]);
	Lb[2] = FMA( x[66], La250, Lb[2]);
	Lb[2] *= T(7.5000000000000000e-01);
	Lb[2] = FMA( x[62], La340, Lb[2]);
	Lb[2] = FMA( x[80], La043, Lb[2]);
	Lb[2] = FMA( x[65], La313, Lb[2]);
	Lb[2] *= T(6.6666666666666663e-01);
	Lb[2] = FMA( x[30], La050, Lb[2]);
	Lb[2] = FMA( x[45], La150, Lb[2]);
	Lb[2] = FMA( x[49], La114, Lb[2]);
	Lb[2] = FMA( x[75], La124, Lb[2]);
	Lb[2] = FMA( x[72], La151, Lb[2]);
	Lb[2] = FMA( x[34], La014, Lb[2]);
	Lb[2] = FMA( x[60], La421, Lb[2]);
	Lb[2] = FMA( x[54], La024, Lb[2]);
	Lb[2] = FMA( x[20], La410, Lb[2]);
	Lb[2] = FMA( x[36], La420, Lb[2]);
	Lb[2] = FMA( x[51], La051, Lb[2]);
	Lb[2] = FMA( x[37], La411, Lb[2]);
	Lb[2] *= T(5.0000000000000000e-01);
	Lb[2] = FMA( x[41], La240, Lb[2]);
	Lb[2] = FMA( x[73], La142, Lb[2]);
	Lb[2] = FMA( x[44], La213, Lb[2]);
	Lb[2] = FMA( x[69], La223, Lb[2]);
	Lb[2] = FMA( x[67], La241, Lb[2]);
	Lb[2] = FMA( x[63], La331, Lb[2]);
	Lb[2] = FMA( x[38], La330, Lb[2]);
	Lb[2] = FMA( x[40], La312, Lb[2]);
	Lb[2] = FMA( x[74], La133, Lb[2]);
	Lb[2] = FMA( x[64], La322, Lb[2]);
	Lb[2] = FMA( x[53], La033, Lb[2]);
	Lb[2] = FMA( x[52], La042, Lb[2]);
	Lb[2] *= T(6.6666666666666663e-01);
	Lb[2] = FMA( x[68], La232, Lb[2]);
	Lb[2] *= T(7.5000000000000000e-01);
	Lb[2] = FMA( x[26], La140, Lb[2]);
	Lb[2] = FMA( x[19], La013, Lb[2]);
	Lb[2] = FMA( x[33], La023, Lb[2]);
	Lb[2] = FMA( x[16], La040, Lb[2]);
	Lb[2] = FMA( x[31], La041, Lb[2]);
	Lb[2] = FMA( x[39], La321, Lb[2]);
	Lb[2] = FMA( x[21], La320, Lb[2]);
	Lb[2] = FMA( x[22], La311, Lb[2]);
	Lb[2] = FMA( x[10], La310, Lb[2]);
	Lb[2] = FMA( x[29], La113, Lb[2]);
	Lb[2] = FMA( x[46], La141, Lb[2]);
	Lb[2] = FMA( x[48], La123, Lb[2]);
	Lb[2] *= T(6.6666666666666663e-01);
	Lb[2] = FMA( x[23], La230, Lb[2]);
	Lb[2] = FMA( x[42], La231, Lb[2]);
	Lb[2] = FMA( x[43], La222, Lb[2]);
	Lb[2] = FMA( x[32], La032, Lb[2]);
	Lb[2] = FMA( x[47], La132, Lb[2]);
	Lb[2] = FMA( x[25], La212, Lb[2]);
	Lb[2] *= T(5.0000000000000000e-01);
	Lb[2] = FMA( x[9], La012, Lb[2]);
	Lb[2] = FMA( x[28], La122, Lb[2]);
	Lb[2] = FMA( x[18], La022, Lb[2]);
	Lb[2] = FMA( x[7], La030, Lb[2]);
	Lb[2] = FMA( x[17], La031, Lb[2]);
	Lb[2] = FMA( x[27], La131, Lb[2]);
	Lb[2] = FMA( x[4], La210, Lb[2]);
	Lb[2] = FMA( x[12], La211, Lb[2]);
	Lb[2] = FMA( x[13], La130, Lb[2]);
	Lb[2] = FMA( x[15], La112, Lb[2]);
	Lb[2] = FMA( x[11], La220, Lb[2]);
	Lb[2] = FMA( x[24], La221, Lb[2]);
	Lb[2] *= T(5.0000000000000000e-01);
	Lb[2] = FMA( x[1], La110, Lb[2]);
	Lb[2] = FMA( x[6], La111, Lb[2]);
	Lb[2] = FMA( x[3], La011, Lb[2]);
	Lb[2] = FMA( x[8], La021, Lb[2]);
	Lb[2] = FMA( x[2], La020, Lb[2]);
	Lb[2] = FMA( x[5], La120, Lb[2]);
	Lb[2] = FMA( x[14], La121, Lb[2]);
	Lb[3] *= T(7.2000000000000000e+02);
	Lb[3] = FMA( x[56], La601, Lb[3]);
	Lb[3] = FMA( x[77], La061, Lb[3]);
	Lb[3] = FMA( x[83], La007, Lb[3]);
	Lb[3] *= T(1.6666666666666669e-01);
	Lb[3] = FMA( x[78], La052, Lb[3]);
	Lb[3] = FMA( x[50], La051, Lb[3]);
	Lb[3] = FMA( x[76], La106, Lb[3]);
	Lb[3] = FMA( x[82], La016, Lb[3]);
	Lb[3] = FMA( x[71], La151, Lb[3]);
	Lb[3] = FMA( x[35], La501, Lb[3]);
	Lb[3] = FMA( x[58], La502, Lb[3]);
	Lb[3] = FMA( x[57], La511, Lb[3]);
	Lb[3] = FMA( x[55], La006, Lb[3]);
	Lb[3] *= T(4.0000000000000002e-01);
	Lb[3] = FMA( x[59], La421, Lb[3]);
	Lb[3] = FMA( x[61], La403, Lb[3]);
	Lb[3] = FMA( x[70], La205, Lb[3]);
	Lb[3] = FMA( x[81], La025, Lb[3]);
	Lb[3] = FMA( x[79], La043, Lb[3]);
	Lb[3] = FMA( x[66], La241, Lb[3]);
	Lb[3] *= T(7.5000000000000000e-01);
	Lb[3] = FMA( x[62], La331, Lb[3]);
	Lb[3] = FMA( x[80], La034, Lb[3]);
	Lb[3] = FMA( x[65], La304, Lb[3]);
	Lb[3] *= T(6.6666666666666663e-01);
	Lb[3] = FMA( x[30], La041, Lb[3]);
	Lb[3] = FMA( x[45], La141, Lb[3]);
	Lb[3] = FMA( x[49], La105, Lb[3]);
	Lb[3] = FMA( x[75], La115, Lb[3]);
	Lb[3] = FMA( x[72], La142, Lb[3]);
	Lb[3] = FMA( x[34], La005, Lb[3]);
	Lb[3] = FMA( x[60], La412, Lb[3]);
	Lb[3] = FMA( x[54], La015, Lb[3]);
	Lb[3] = FMA( x[20], La401, Lb[3]);
	Lb[3] = FMA( x[36], La411, Lb[3]);
	Lb[3] = FMA( x[51], La042, Lb[3]);
	Lb[3] = FMA( x[37], La402, Lb[3]);
	Lb[3] *= T(5.0000000000000000e-01);
	Lb[3] = FMA( x[41], La231, Lb[3]);
	Lb[3] = FMA( x[73], La133, Lb[3]);
	Lb[3] = FMA( x[44], La204, Lb[3]);
	Lb[3] = FMA( x[69], La214, Lb[3]);
	Lb[3] = FMA( x[67], La232, Lb[3]);
	Lb[3] = FMA( x[63], La322, Lb[3]);
	Lb[3] = FMA( x[38], La321, Lb[3]);
	Lb[3] = FMA( x[40], La303, Lb[3]);
	Lb[3] = FMA( x[74], La124, Lb[3]);
	Lb[3] = FMA( x[64], La313, Lb[3]);
	Lb[3] = FMA( x[53], La024, Lb[3]);
	Lb[3] = FMA( x[52], La033, Lb[3]);
	Lb[3] *= T(6.6666666666666663e-01);
	Lb[3] = FMA( x[68], La223, Lb[3]);
	Lb[3] *= T(7.5000000000000000e-01);
	Lb[3] = FMA( x[26], La131, Lb[3]);
	Lb[3] = FMA( x[19], La004, Lb[3]);
	Lb[3] = FMA( x[33], La014, Lb[3]);
	Lb[3] = FMA( x[16], La031, Lb[3]);
	Lb[3] = FMA( x[31], La032, Lb[3]);
	Lb[3] = FMA( x[39], La312, Lb[3]);
	Lb[3] = FMA( x[21], La311, Lb[3]);
	Lb[3] = FMA( x[22], La302, Lb[3]);
	Lb[3] = FMA( x[10], La301, Lb[3]);
	Lb[3] = FMA( x[29], La104, Lb[3]);
	Lb[3] = FMA( x[46], La132, Lb[3]);
	Lb[3] = FMA( x[48], La114, Lb[3]);
	Lb[3] *= T(6.6666666666666663e-01);
	Lb[3] = FMA( x[23], La221, Lb[3]);
	Lb[3] = FMA( x[42], La222, Lb[3]);
	Lb[3] = FMA( x[43], La213, Lb[3]);
	Lb[3] = FMA( x[32], La023, Lb[3]);
	Lb[3] = FMA( x[47], La123, Lb[3]);
	Lb[3] = FMA( x[25], La203, Lb[3]);
	Lb[3] *= T(5.0000000000000000e-01);
	Lb[3] = FMA( x[9], La003, Lb[3]);
	Lb[3] = FMA( x[28], La113, Lb[3]);
	Lb[3] = FMA( x[18], La013, Lb[3]);
	Lb[3] = FMA( x[7], La021, Lb[3]);
	Lb[3] = FMA( x[17], La022, Lb[3]);
	Lb[3] = FMA( x[27], La122, Lb[3]);
	Lb[3] = FMA( x[4], La201, Lb[3]);
	Lb[3] = FMA( x[12], La202, Lb[3]);
	Lb[3] = FMA( x[13], La121, Lb[3]);
	Lb[3] = FMA( x[15], La103, Lb[3]);
	Lb[3] = FMA( x[11], La211, Lb[3]);
	Lb[3] = FMA( x[24], La212, Lb[3]);
	Lb[3] *= T(5.0000000000000000e-01);
	Lb[3] = FMA( x[1], La101, Lb[3]);
	Lb[3] = FMA( x[6], La102, Lb[3]);
	Lb[3] = FMA( x[3], La002, Lb[3]);
	Lb[3] = FMA( x[8], La012, Lb[3]);
	Lb[3] = FMA( x[2], La011, Lb[3]);
	Lb[3] = FMA( x[5], La111, Lb[3]);
	Lb[3] = FMA( x[14], La112, Lb[3]);
	return Lb;
/* FLOPS = 831 + do_phi * 253*/
}
#include <cosmictiger/flops.hpp>
template<class T>
CUDA_EXPORT int ewald_greens_function(tensor_trless_sym<T,8> &D, array<T, NDIM> X) {
	X[0] *= T(SCALE_FACTOR);
	X[1] *= T(SCALE_FACTOR);
	X[2] *= T(SCALE_FACTOR);
	ewald_const econst;
	flop_counter<int> flops = 7;
	array<T,NDIM> xshift;
	T r = sqrt(FMA(X[0], X[0], FMA(X[1], X[1], sqr(X[2]))));
	if( r < T(0.02) ) {
		xshift = X;
		X[XDIM] =X[YDIM]=X[ZDIM] =T(0);
	} else {
		xshift[XDIM] = T(0);
		xshift[YDIM] = T(0);
		xshift[ZDIM] = T(0);
	} 
	r = sqrt(FMA(X[0], X[0], FMA(X[1], X[1], sqr(X[2]))));
	const T fouroversqrtpi = T(2.2567583341910251e+00);
	tensor_sym<T, 8> Dreal;
	tensor_trless_sym<T,8> Dfour;
	Dreal = 0.0f;
	Dfour = 0.0f;
	D = 0.0f;
	const auto realsz = econst.nreal();
	const T zero_mask = r > T(0.0);
	int icnt = 0;
	array<T, NDIM> dx;
	dx = X;
	{
		T r2 = FMA(dx[0], dx[0], FMA(dx[1], dx[1], sqr(dx[2])));
		icnt++;
		const T r = sqrt(r2);
		const T n8r = T(-8*SCALE_FACTOR_INV2) * r;
		const T rinv = (r > T(0)) / f_max(r, 1.0e-20);
		T exp0 = expnearzero( -T(4*SCALE_FACTOR_INV2) * r2 );
		T erf0 = erfnearzero(T(2*SCALE_FACTOR_INV1) * r);
		const T expfactor = T(2.256758334191025*SCALE_FACTOR_INV1) * exp0;
		T e0 = expfactor * rinv;
		const T rinv0 = T(1);
		const T rinv1 = rinv;
		const T rinv2 = rinv1 * rinv1;
		const T rinv3 = rinv1 * rinv2;
		const T d0 = erf0 * rinv;
		const T d1 = FMA(T(-1) * d0, rinv, e0);
		e0 *= n8r;
		const T d2 = FMA(T(-3) * d1, rinv, e0);
		e0 *= n8r;
		const T d3 = FMA(T(-5) * d2, rinv, e0);
		e0 *= n8r;
		const T d4 = FMA(T(-7) * d3, rinv, e0);
		e0 *= n8r;
		const T d5 = FMA(T(-9) * d4, rinv, e0);
		e0 *= n8r;
		const T d6 = FMA(T(-11) * d5, rinv, e0);
		e0 *= n8r;
		const T d7 = FMA(T(-13) * d6, rinv, e0);
		const T Drinvpow_0_0 = d0 * rinv0;
		const T Drinvpow_1_0 = d1 * rinv0;
		const T Drinvpow_1_1 = d1 * rinv1;
		const T Drinvpow_2_0 = d2 * rinv0;
		const T Drinvpow_2_1 = d2 * rinv1;
		const T Drinvpow_2_2 = d2 * rinv2;
		const T Drinvpow_3_0 = d3 * rinv0;
		const T Drinvpow_3_1 = d3 * rinv1;
		const T Drinvpow_3_2 = d3 * rinv2;
		const T Drinvpow_3_3 = d3 * rinv3;
		const T Drinvpow_4_0 = d4 * rinv0;
		const T Drinvpow_4_1 = d4 * rinv1;
		const T Drinvpow_4_2 = d4 * rinv2;
		const T Drinvpow_4_3 = d4 * rinv3;
		const T Drinvpow_5_0 = d5 * rinv0;
		const T Drinvpow_5_1 = d5 * rinv1;
		const T Drinvpow_5_2 = d5 * rinv2;
		const T Drinvpow_6_0 = d6 * rinv0;
		const T Drinvpow_6_1 = d6 * rinv1;
		const T Drinvpow_7_0 = d7 * rinv0;
		array<T,NDIM> dxrinv;
		dxrinv[0] = dx[0] * rinv;
		dxrinv[1] = dx[1] * rinv;
		dxrinv[2] = dx[2] * rinv;
		T x[120];
		x[0] = T(1);
		x[1] = dxrinv[0];
		x[2] = dxrinv[1];
		x[3] = dxrinv[2];
		x[9] = x[3] * x[3]; // 0 0 2 | 0 0 1 | 0 0 1
		x[8] = x[2] * x[3]; // 0 1 1 | 0 0 1 | 0 1 0
		x[7] = x[2] * x[2]; // 0 2 0 | 0 1 0 | 0 1 0
		x[6] = x[1] * x[3]; // 1 0 1 | 0 0 1 | 1 0 0
		x[5] = x[1] * x[2]; // 1 1 0 | 0 1 0 | 1 0 0
		x[4] = x[1] * x[1]; // 2 0 0 | 1 0 0 | 1 0 0
		x[19] = x[9] * x[3]; // 0 0 3 | 0 0 1 | 0 0 2
		x[18] = x[8] * x[3]; // 0 1 2 | 0 0 1 | 0 1 1
		x[17] = x[8] * x[2]; // 0 2 1 | 0 1 0 | 0 1 1
		x[16] = x[7] * x[2]; // 0 3 0 | 0 1 0 | 0 2 0
		x[15] = x[6] * x[3]; // 1 0 2 | 0 0 1 | 1 0 1
		x[14] = x[5] * x[3]; // 1 1 1 | 0 0 1 | 1 1 0
		x[13] = x[5] * x[2]; // 1 2 0 | 0 1 0 | 1 1 0
		x[12] = x[6] * x[1]; // 2 0 1 | 1 0 0 | 1 0 1
		x[11] = x[5] * x[1]; // 2 1 0 | 1 0 0 | 1 1 0
		x[10] = x[4] * x[1]; // 3 0 0 | 1 0 0 | 2 0 0
		x[34] = x[9] * x[9]; // 0 0 4 | 0 0 2 | 0 0 2
		x[33] = x[8] * x[9]; // 0 1 3 | 0 0 2 | 0 1 1
		x[32] = x[8] * x[8]; // 0 2 2 | 0 1 1 | 0 1 1
		x[31] = x[8] * x[7]; // 0 3 1 | 0 2 0 | 0 1 1
		x[30] = x[7] * x[7]; // 0 4 0 | 0 2 0 | 0 2 0
		x[29] = x[6] * x[9]; // 1 0 3 | 0 0 2 | 1 0 1
		x[28] = x[5] * x[9]; // 1 1 2 | 0 0 2 | 1 1 0
		x[27] = x[5] * x[8]; // 1 2 1 | 0 1 1 | 1 1 0
		x[26] = x[5] * x[7]; // 1 3 0 | 0 2 0 | 1 1 0
		x[25] = x[6] * x[6]; // 2 0 2 | 1 0 1 | 1 0 1
		x[24] = x[5] * x[6]; // 2 1 1 | 1 0 1 | 1 1 0
		x[23] = x[5] * x[5]; // 2 2 0 | 1 1 0 | 1 1 0
		x[22] = x[6] * x[4]; // 3 0 1 | 2 0 0 | 1 0 1
		x[21] = x[5] * x[4]; // 3 1 0 | 2 0 0 | 1 1 0
		x[20] = x[4] * x[4]; // 4 0 0 | 2 0 0 | 2 0 0
		x[55] = x[19] * x[9]; // 0 0 5 | 0 0 2 | 0 0 3
		x[54] = x[18] * x[9]; // 0 1 4 | 0 0 2 | 0 1 2
		x[53] = x[17] * x[9]; // 0 2 3 | 0 0 2 | 0 2 1
		x[52] = x[17] * x[8]; // 0 3 2 | 0 1 1 | 0 2 1
		x[51] = x[17] * x[7]; // 0 4 1 | 0 2 0 | 0 2 1
		x[50] = x[16] * x[7]; // 0 5 0 | 0 2 0 | 0 3 0
		x[49] = x[15] * x[9]; // 1 0 4 | 0 0 2 | 1 0 2
		x[48] = x[14] * x[9]; // 1 1 3 | 0 0 2 | 1 1 1
		x[47] = x[14] * x[8]; // 1 2 2 | 0 1 1 | 1 1 1
		x[46] = x[14] * x[7]; // 1 3 1 | 0 2 0 | 1 1 1
		x[45] = x[13] * x[7]; // 1 4 0 | 0 2 0 | 1 2 0
		x[44] = x[12] * x[9]; // 2 0 3 | 0 0 2 | 2 0 1
		x[43] = x[14] * x[6]; // 2 1 2 | 1 0 1 | 1 1 1
		x[42] = x[14] * x[5]; // 2 2 1 | 1 1 0 | 1 1 1
		x[41] = x[11] * x[7]; // 2 3 0 | 0 2 0 | 2 1 0
		x[40] = x[12] * x[6]; // 3 0 2 | 1 0 1 | 2 0 1
		x[39] = x[14] * x[4]; // 3 1 1 | 2 0 0 | 1 1 1
		x[38] = x[11] * x[5]; // 3 2 0 | 1 1 0 | 2 1 0
		x[37] = x[12] * x[4]; // 4 0 1 | 2 0 0 | 2 0 1
		x[36] = x[11] * x[4]; // 4 1 0 | 2 0 0 | 2 1 0
		x[35] = x[10] * x[4]; // 5 0 0 | 2 0 0 | 3 0 0
		x[83] = x[19] * x[19]; // 0 0 6 | 0 0 3 | 0 0 3
		x[82] = x[18] * x[19]; // 0 1 5 | 0 0 3 | 0 1 2
		x[81] = x[17] * x[19]; // 0 2 4 | 0 0 3 | 0 2 1
		x[80] = x[17] * x[18]; // 0 3 3 | 0 1 2 | 0 2 1
		x[79] = x[17] * x[17]; // 0 4 2 | 0 2 1 | 0 2 1
		x[78] = x[17] * x[16]; // 0 5 1 | 0 3 0 | 0 2 1
		x[77] = x[16] * x[16]; // 0 6 0 | 0 3 0 | 0 3 0
		x[76] = x[15] * x[19]; // 1 0 5 | 0 0 3 | 1 0 2
		x[75] = x[14] * x[19]; // 1 1 4 | 0 0 3 | 1 1 1
		x[74] = x[14] * x[18]; // 1 2 3 | 0 1 2 | 1 1 1
		x[73] = x[14] * x[17]; // 1 3 2 | 0 2 1 | 1 1 1
		x[72] = x[14] * x[16]; // 1 4 1 | 0 3 0 | 1 1 1
		x[71] = x[13] * x[16]; // 1 5 0 | 0 3 0 | 1 2 0
		x[70] = x[12] * x[19]; // 2 0 4 | 0 0 3 | 2 0 1
		x[69] = x[14] * x[15]; // 2 1 3 | 1 0 2 | 1 1 1
		x[68] = x[14] * x[14]; // 2 2 2 | 1 1 1 | 1 1 1
		x[67] = x[14] * x[13]; // 2 3 1 | 1 2 0 | 1 1 1
		x[66] = x[11] * x[16]; // 2 4 0 | 0 3 0 | 2 1 0
		x[65] = x[12] * x[15]; // 3 0 3 | 1 0 2 | 2 0 1
		x[64] = x[14] * x[12]; // 3 1 2 | 2 0 1 | 1 1 1
		x[63] = x[14] * x[11]; // 3 2 1 | 2 1 0 | 1 1 1
		x[62] = x[11] * x[13]; // 3 3 0 | 1 2 0 | 2 1 0
		x[61] = x[12] * x[12]; // 4 0 2 | 2 0 1 | 2 0 1
		x[60] = x[14] * x[10]; // 4 1 1 | 3 0 0 | 1 1 1
		x[59] = x[11] * x[11]; // 4 2 0 | 2 1 0 | 2 1 0
		x[58] = x[12] * x[10]; // 5 0 1 | 3 0 0 | 2 0 1
		x[57] = x[11] * x[10]; // 5 1 0 | 3 0 0 | 2 1 0
		x[56] = x[10] * x[10]; // 6 0 0 | 3 0 0 | 3 0 0
		x[119] = x[34] * x[19]; // 0 0 7 | 0 0 3 | 0 0 4
		x[118] = x[33] * x[19]; // 0 1 6 | 0 0 3 | 0 1 3
		x[117] = x[32] * x[19]; // 0 2 5 | 0 0 3 | 0 2 2
		x[116] = x[32] * x[18]; // 0 3 4 | 0 1 2 | 0 2 2
		x[115] = x[32] * x[17]; // 0 4 3 | 0 2 1 | 0 2 2
		x[114] = x[32] * x[16]; // 0 5 2 | 0 3 0 | 0 2 2
		x[113] = x[31] * x[16]; // 0 6 1 | 0 3 0 | 0 3 1
		x[112] = x[30] * x[16]; // 0 7 0 | 0 3 0 | 0 4 0
		x[111] = x[29] * x[19]; // 1 0 6 | 0 0 3 | 1 0 3
		x[110] = x[28] * x[19]; // 1 1 5 | 0 0 3 | 1 1 2
		x[109] = x[27] * x[19]; // 1 2 4 | 0 0 3 | 1 2 1
		x[108] = x[27] * x[18]; // 1 3 3 | 0 1 2 | 1 2 1
		x[107] = x[27] * x[17]; // 1 4 2 | 0 2 1 | 1 2 1
		x[106] = x[27] * x[16]; // 1 5 1 | 0 3 0 | 1 2 1
		x[105] = x[26] * x[16]; // 1 6 0 | 0 3 0 | 1 3 0
		x[104] = x[25] * x[19]; // 2 0 5 | 0 0 3 | 2 0 2
		x[103] = x[24] * x[19]; // 2 1 4 | 0 0 3 | 2 1 1
		x[102] = x[24] * x[18]; // 2 2 3 | 0 1 2 | 2 1 1
		x[101] = x[24] * x[17]; // 2 3 2 | 0 2 1 | 2 1 1
		x[100] = x[24] * x[16]; // 2 4 1 | 0 3 0 | 2 1 1
		x[99] = x[23] * x[16]; // 2 5 0 | 0 3 0 | 2 2 0
		x[98] = x[25] * x[15]; // 3 0 4 | 1 0 2 | 2 0 2
		x[97] = x[24] * x[15]; // 3 1 3 | 1 0 2 | 2 1 1
		x[96] = x[24] * x[14]; // 3 2 2 | 1 1 1 | 2 1 1
		x[95] = x[24] * x[13]; // 3 3 1 | 1 2 0 | 2 1 1
		x[94] = x[23] * x[13]; // 3 4 0 | 1 2 0 | 2 2 0
		x[93] = x[25] * x[12]; // 4 0 3 | 2 0 1 | 2 0 2
		x[92] = x[24] * x[12]; // 4 1 2 | 2 0 1 | 2 1 1
		x[91] = x[24] * x[11]; // 4 2 1 | 2 1 0 | 2 1 1
		x[90] = x[23] * x[11]; // 4 3 0 | 2 1 0 | 2 2 0
		x[89] = x[25] * x[10]; // 5 0 2 | 3 0 0 | 2 0 2
		x[88] = x[24] * x[10]; // 5 1 1 | 3 0 0 | 2 1 1
		x[87] = x[23] * x[10]; // 5 2 0 | 3 0 0 | 2 2 0
		x[86] = x[22] * x[10]; // 6 0 1 | 3 0 0 | 3 0 1
		x[85] = x[21] * x[10]; // 6 1 0 | 3 0 0 | 3 1 0
		x[84] = x[20] * x[10]; // 7 0 0 | 3 0 0 | 4 0 0
		Dreal[0] = FMA(x[0], Drinvpow_0_0, Dreal[0]);
		Dreal[3] = FMA(x[3], Drinvpow_1_0, Dreal[3]);
		Dreal[9] = FMA(x[9], Drinvpow_2_0, Dreal[9]);
		Dreal[9] = FMA(x[0], Drinvpow_1_1, Dreal[9]);
		Dreal[19] = FMA(x[19], Drinvpow_3_0, Dreal[19]);
		Dreal[19] = FMA(T(3.0000000000000000e+00), x[3]*Drinvpow_2_1, Dreal[19]);
		Dreal[34] = FMA(x[34], Drinvpow_4_0, Dreal[34]);
		Dreal[34] = FMA(T(6.0000000000000000e+00), x[9]*Drinvpow_3_1, Dreal[34]);
		Dreal[34] = FMA(T(3.0000000000000000e+00), x[0]*Drinvpow_2_2, Dreal[34]);
		Dreal[55] = FMA(x[55], Drinvpow_5_0, Dreal[55]);
		Dreal[55] = FMA(T(1.0000000000000000e+01), x[19]*Drinvpow_4_1, Dreal[55]);
		Dreal[55] = FMA(T(1.5000000000000000e+01), x[3]*Drinvpow_3_2, Dreal[55]);
		Dreal[83] = FMA(x[83], Drinvpow_6_0, Dreal[83]);
		Dreal[83] = FMA(T(1.5000000000000000e+01), x[34]*Drinvpow_5_1, Dreal[83]);
		Dreal[83] = FMA(T(4.5000000000000000e+01), x[9]*Drinvpow_4_2, Dreal[83]);
		Dreal[83] = FMA(T(1.5000000000000000e+01), x[0]*Drinvpow_3_3, Dreal[83]);
		Dreal[119] = FMA(x[119], Drinvpow_7_0, Dreal[119]);
		Dreal[119] = FMA(T(2.1000000000000000e+01), x[55]*Drinvpow_6_1, Dreal[119]);
		Dreal[119] = FMA(T(1.0500000000000000e+02), x[19]*Drinvpow_5_2, Dreal[119]);
		Dreal[119] = FMA(T(1.0500000000000000e+02), x[3]*Drinvpow_4_3, Dreal[119]);
		Dreal[2] = FMA(x[2], Drinvpow_1_0, Dreal[2]);
		Dreal[8] = FMA(x[8], Drinvpow_2_0, Dreal[8]);
		Dreal[18] = FMA(x[18], Drinvpow_3_0, Dreal[18]);
		Dreal[18] = FMA(x[2], Drinvpow_2_1, Dreal[18]);
		Dreal[33] = FMA(x[33], Drinvpow_4_0, Dreal[33]);
		Dreal[33] = FMA(T(3.0000000000000000e+00), x[8]*Drinvpow_3_1, Dreal[33]);
		Dreal[54] = FMA(x[54], Drinvpow_5_0, Dreal[54]);
		Dreal[54] = FMA(T(6.0000000000000000e+00), x[18]*Drinvpow_4_1, Dreal[54]);
		Dreal[54] = FMA(T(3.0000000000000000e+00), x[2]*Drinvpow_3_2, Dreal[54]);
		Dreal[82] = FMA(x[82], Drinvpow_6_0, Dreal[82]);
		Dreal[82] = FMA(T(1.0000000000000000e+01), x[33]*Drinvpow_5_1, Dreal[82]);
		Dreal[82] = FMA(T(1.5000000000000000e+01), x[8]*Drinvpow_4_2, Dreal[82]);
		Dreal[118] = FMA(x[118], Drinvpow_7_0, Dreal[118]);
		Dreal[118] = FMA(T(1.5000000000000000e+01), x[54]*Drinvpow_6_1, Dreal[118]);
		Dreal[118] = FMA(T(4.5000000000000000e+01), x[18]*Drinvpow_5_2, Dreal[118]);
		Dreal[118] = FMA(T(1.5000000000000000e+01), x[2]*Drinvpow_4_3, Dreal[118]);
		Dreal[7] = FMA(x[7], Drinvpow_2_0, Dreal[7]);
		Dreal[7] = FMA(x[0], Drinvpow_1_1, Dreal[7]);
		Dreal[17] = FMA(x[17], Drinvpow_3_0, Dreal[17]);
		Dreal[17] = FMA(x[3], Drinvpow_2_1, Dreal[17]);
		Dreal[32] = FMA(x[32], Drinvpow_4_0, Dreal[32]);
		Dreal[32] = FMA(x[7], Drinvpow_3_1, Dreal[32]);
		Dreal[32] = FMA(x[9], Drinvpow_3_1, Dreal[32]);
		Dreal[32] = FMA(x[0], Drinvpow_2_2, Dreal[32]);
		Dreal[53] = FMA(x[53], Drinvpow_5_0, Dreal[53]);
		Dreal[53] = FMA(T(3.0000000000000000e+00), x[17]*Drinvpow_4_1, Dreal[53]);
		Dreal[53] = FMA(x[19], Drinvpow_4_1, Dreal[53]);
		Dreal[53] = FMA(T(3.0000000000000000e+00), x[3]*Drinvpow_3_2, Dreal[53]);
		Dreal[81] = FMA(x[81], Drinvpow_6_0, Dreal[81]);
		Dreal[81] = FMA(T(6.0000000000000000e+00), x[32]*Drinvpow_5_1, Dreal[81]);
		Dreal[81] = FMA(T(3.0000000000000000e+00), x[7]*Drinvpow_4_2, Dreal[81]);
		Dreal[81] = FMA(x[34], Drinvpow_5_1, Dreal[81]);
		Dreal[81] = FMA(T(6.0000000000000000e+00), x[9]*Drinvpow_4_2, Dreal[81]);
		Dreal[81] = FMA(T(3.0000000000000000e+00), x[0]*Drinvpow_3_3, Dreal[81]);
		Dreal[117] = FMA(x[117], Drinvpow_7_0, Dreal[117]);
		Dreal[117] = FMA(T(1.0000000000000000e+01), x[53]*Drinvpow_6_1, Dreal[117]);
		Dreal[117] = FMA(T(1.5000000000000000e+01), x[17]*Drinvpow_5_2, Dreal[117]);
		Dreal[117] = FMA(x[55], Drinvpow_6_1, Dreal[117]);
		Dreal[117] = FMA(T(1.0000000000000000e+01), x[19]*Drinvpow_5_2, Dreal[117]);
		Dreal[117] = FMA(T(1.5000000000000000e+01), x[3]*Drinvpow_4_3, Dreal[117]);
		Dreal[16] = FMA(x[16], Drinvpow_3_0, Dreal[16]);
		Dreal[16] = FMA(T(3.0000000000000000e+00), x[2]*Drinvpow_2_1, Dreal[16]);
		Dreal[31] = FMA(x[31], Drinvpow_4_0, Dreal[31]);
		Dreal[31] = FMA(T(3.0000000000000000e+00), x[8]*Drinvpow_3_1, Dreal[31]);
		Dreal[52] = FMA(x[52], Drinvpow_5_0, Dreal[52]);
		Dreal[52] = FMA(x[16], Drinvpow_4_1, Dreal[52]);
		Dreal[52] = FMA(T(3.0000000000000000e+00), x[18]*Drinvpow_4_1, Dreal[52]);
		Dreal[52] = FMA(T(3.0000000000000000e+00), x[2]*Drinvpow_3_2, Dreal[52]);
		Dreal[80] = FMA(x[80], Drinvpow_6_0, Dreal[80]);
		Dreal[80] = FMA(T(3.0000000000000000e+00), x[31]*Drinvpow_5_1, Dreal[80]);
		Dreal[80] = FMA(T(3.0000000000000000e+00), x[33]*Drinvpow_5_1, Dreal[80]);
		Dreal[80] = FMA(T(9.0000000000000000e+00), x[8]*Drinvpow_4_2, Dreal[80]);
		Dreal[116] = FMA(x[116], Drinvpow_7_0, Dreal[116]);
		Dreal[116] = FMA(T(6.0000000000000000e+00), x[52]*Drinvpow_6_1, Dreal[116]);
		Dreal[116] = FMA(T(3.0000000000000000e+00), x[16]*Drinvpow_5_2, Dreal[116]);
		Dreal[116] = FMA(T(3.0000000000000000e+00), x[54]*Drinvpow_6_1, Dreal[116]);
		Dreal[116] = FMA(T(1.8000000000000000e+01), x[18]*Drinvpow_5_2, Dreal[116]);
		Dreal[116] = FMA(T(9.0000000000000000e+00), x[2]*Drinvpow_4_3, Dreal[116]);
		Dreal[30] = FMA(x[30], Drinvpow_4_0, Dreal[30]);
		Dreal[30] = FMA(T(6.0000000000000000e+00), x[7]*Drinvpow_3_1, Dreal[30]);
		Dreal[30] = FMA(T(3.0000000000000000e+00), x[0]*Drinvpow_2_2, Dreal[30]);
		Dreal[51] = FMA(x[51], Drinvpow_5_0, Dreal[51]);
		Dreal[51] = FMA(T(6.0000000000000000e+00), x[17]*Drinvpow_4_1, Dreal[51]);
		Dreal[51] = FMA(T(3.0000000000000000e+00), x[3]*Drinvpow_3_2, Dreal[51]);
		Dreal[79] = FMA(x[79], Drinvpow_6_0, Dreal[79]);
		Dreal[79] = FMA(x[30], Drinvpow_5_1, Dreal[79]);
		Dreal[79] = FMA(T(6.0000000000000000e+00), x[32]*Drinvpow_5_1, Dreal[79]);
		Dreal[79] = FMA(T(6.0000000000000000e+00), x[7]*Drinvpow_4_2, Dreal[79]);
		Dreal[79] = FMA(T(3.0000000000000000e+00), x[9]*Drinvpow_4_2, Dreal[79]);
		Dreal[79] = FMA(T(3.0000000000000000e+00), x[0]*Drinvpow_3_3, Dreal[79]);
		Dreal[115] = FMA(x[115], Drinvpow_7_0, Dreal[115]);
		Dreal[115] = FMA(T(3.0000000000000000e+00), x[51]*Drinvpow_6_1, Dreal[115]);
		Dreal[115] = FMA(T(6.0000000000000000e+00), x[53]*Drinvpow_6_1, Dreal[115]);
		Dreal[115] = FMA(T(1.8000000000000000e+01), x[17]*Drinvpow_5_2, Dreal[115]);
		Dreal[115] = FMA(T(3.0000000000000000e+00), x[19]*Drinvpow_5_2, Dreal[115]);
		Dreal[115] = FMA(T(9.0000000000000000e+00), x[3]*Drinvpow_4_3, Dreal[115]);
		Dreal[50] = FMA(x[50], Drinvpow_5_0, Dreal[50]);
		Dreal[50] = FMA(T(1.0000000000000000e+01), x[16]*Drinvpow_4_1, Dreal[50]);
		Dreal[50] = FMA(T(1.5000000000000000e+01), x[2]*Drinvpow_3_2, Dreal[50]);
		Dreal[78] = FMA(x[78], Drinvpow_6_0, Dreal[78]);
		Dreal[78] = FMA(T(1.0000000000000000e+01), x[31]*Drinvpow_5_1, Dreal[78]);
		Dreal[78] = FMA(T(1.5000000000000000e+01), x[8]*Drinvpow_4_2, Dreal[78]);
		Dreal[114] = FMA(x[114], Drinvpow_7_0, Dreal[114]);
		Dreal[114] = FMA(x[50], Drinvpow_6_1, Dreal[114]);
		Dreal[114] = FMA(T(1.0000000000000000e+01), x[52]*Drinvpow_6_1, Dreal[114]);
		Dreal[114] = FMA(T(1.0000000000000000e+01), x[16]*Drinvpow_5_2, Dreal[114]);
		Dreal[114] = FMA(T(1.5000000000000000e+01), x[18]*Drinvpow_5_2, Dreal[114]);
		Dreal[114] = FMA(T(1.5000000000000000e+01), x[2]*Drinvpow_4_3, Dreal[114]);
		Dreal[77] = FMA(x[77], Drinvpow_6_0, Dreal[77]);
		Dreal[77] = FMA(T(1.5000000000000000e+01), x[30]*Drinvpow_5_1, Dreal[77]);
		Dreal[77] = FMA(T(4.5000000000000000e+01), x[7]*Drinvpow_4_2, Dreal[77]);
		Dreal[77] = FMA(T(1.5000000000000000e+01), x[0]*Drinvpow_3_3, Dreal[77]);
		Dreal[113] = FMA(x[113], Drinvpow_7_0, Dreal[113]);
		Dreal[113] = FMA(T(1.5000000000000000e+01), x[51]*Drinvpow_6_1, Dreal[113]);
		Dreal[113] = FMA(T(4.5000000000000000e+01), x[17]*Drinvpow_5_2, Dreal[113]);
		Dreal[113] = FMA(T(1.5000000000000000e+01), x[3]*Drinvpow_4_3, Dreal[113]);
		Dreal[112] = FMA(x[112], Drinvpow_7_0, Dreal[112]);
		Dreal[112] = FMA(T(2.1000000000000000e+01), x[50]*Drinvpow_6_1, Dreal[112]);
		Dreal[112] = FMA(T(1.0500000000000000e+02), x[16]*Drinvpow_5_2, Dreal[112]);
		Dreal[112] = FMA(T(1.0500000000000000e+02), x[2]*Drinvpow_4_3, Dreal[112]);
		Dreal[1] = FMA(x[1], Drinvpow_1_0, Dreal[1]);
		Dreal[6] = FMA(x[6], Drinvpow_2_0, Dreal[6]);
		Dreal[15] = FMA(x[15], Drinvpow_3_0, Dreal[15]);
		Dreal[15] = FMA(x[1], Drinvpow_2_1, Dreal[15]);
		Dreal[29] = FMA(x[29], Drinvpow_4_0, Dreal[29]);
		Dreal[29] = FMA(T(3.0000000000000000e+00), x[6]*Drinvpow_3_1, Dreal[29]);
		Dreal[49] = FMA(x[49], Drinvpow_5_0, Dreal[49]);
		Dreal[49] = FMA(T(6.0000000000000000e+00), x[15]*Drinvpow_4_1, Dreal[49]);
		Dreal[49] = FMA(T(3.0000000000000000e+00), x[1]*Drinvpow_3_2, Dreal[49]);
		Dreal[76] = FMA(x[76], Drinvpow_6_0, Dreal[76]);
		Dreal[76] = FMA(T(1.0000000000000000e+01), x[29]*Drinvpow_5_1, Dreal[76]);
		Dreal[76] = FMA(T(1.5000000000000000e+01), x[6]*Drinvpow_4_2, Dreal[76]);
		Dreal[111] = FMA(x[111], Drinvpow_7_0, Dreal[111]);
		Dreal[111] = FMA(T(1.5000000000000000e+01), x[49]*Drinvpow_6_1, Dreal[111]);
		Dreal[111] = FMA(T(4.5000000000000000e+01), x[15]*Drinvpow_5_2, Dreal[111]);
		Dreal[111] = FMA(T(1.5000000000000000e+01), x[1]*Drinvpow_4_3, Dreal[111]);
		Dreal[5] = FMA(x[5], Drinvpow_2_0, Dreal[5]);
		Dreal[14] = FMA(x[14], Drinvpow_3_0, Dreal[14]);
		Dreal[28] = FMA(x[28], Drinvpow_4_0, Dreal[28]);
		Dreal[28] = FMA(x[5], Drinvpow_3_1, Dreal[28]);
		Dreal[48] = FMA(x[48], Drinvpow_5_0, Dreal[48]);
		Dreal[48] = FMA(T(3.0000000000000000e+00), x[14]*Drinvpow_4_1, Dreal[48]);
		Dreal[75] = FMA(x[75], Drinvpow_6_0, Dreal[75]);
		Dreal[75] = FMA(T(6.0000000000000000e+00), x[28]*Drinvpow_5_1, Dreal[75]);
		Dreal[75] = FMA(T(3.0000000000000000e+00), x[5]*Drinvpow_4_2, Dreal[75]);
		Dreal[110] = FMA(x[110], Drinvpow_7_0, Dreal[110]);
		Dreal[110] = FMA(T(1.0000000000000000e+01), x[48]*Drinvpow_6_1, Dreal[110]);
		Dreal[110] = FMA(T(1.5000000000000000e+01), x[14]*Drinvpow_5_2, Dreal[110]);
		Dreal[13] = FMA(x[13], Drinvpow_3_0, Dreal[13]);
		Dreal[13] = FMA(x[1], Drinvpow_2_1, Dreal[13]);
		Dreal[27] = FMA(x[27], Drinvpow_4_0, Dreal[27]);
		Dreal[27] = FMA(x[6], Drinvpow_3_1, Dreal[27]);
		Dreal[47] = FMA(x[47], Drinvpow_5_0, Dreal[47]);
		Dreal[47] = FMA(x[13], Drinvpow_4_1, Dreal[47]);
		Dreal[47] = FMA(x[15], Drinvpow_4_1, Dreal[47]);
		Dreal[47] = FMA(x[1], Drinvpow_3_2, Dreal[47]);
		Dreal[74] = FMA(x[74], Drinvpow_6_0, Dreal[74]);
		Dreal[74] = FMA(T(3.0000000000000000e+00), x[27]*Drinvpow_5_1, Dreal[74]);
		Dreal[74] = FMA(x[29], Drinvpow_5_1, Dreal[74]);
		Dreal[74] = FMA(T(3.0000000000000000e+00), x[6]*Drinvpow_4_2, Dreal[74]);
		Dreal[109] = FMA(x[109], Drinvpow_7_0, Dreal[109]);
		Dreal[109] = FMA(T(6.0000000000000000e+00), x[47]*Drinvpow_6_1, Dreal[109]);
		Dreal[109] = FMA(T(3.0000000000000000e+00), x[13]*Drinvpow_5_2, Dreal[109]);
		Dreal[109] = FMA(x[49], Drinvpow_6_1, Dreal[109]);
		Dreal[109] = FMA(T(6.0000000000000000e+00), x[15]*Drinvpow_5_2, Dreal[109]);
		Dreal[109] = FMA(T(3.0000000000000000e+00), x[1]*Drinvpow_4_3, Dreal[109]);
		Dreal[26] = FMA(x[26], Drinvpow_4_0, Dreal[26]);
		Dreal[26] = FMA(T(3.0000000000000000e+00), x[5]*Drinvpow_3_1, Dreal[26]);
		Dreal[46] = FMA(x[46], Drinvpow_5_0, Dreal[46]);
		Dreal[46] = FMA(T(3.0000000000000000e+00), x[14]*Drinvpow_4_1, Dreal[46]);
		Dreal[73] = FMA(x[73], Drinvpow_6_0, Dreal[73]);
		Dreal[73] = FMA(x[26], Drinvpow_5_1, Dreal[73]);
		Dreal[73] = FMA(T(3.0000000000000000e+00), x[28]*Drinvpow_5_1, Dreal[73]);
		Dreal[73] = FMA(T(3.0000000000000000e+00), x[5]*Drinvpow_4_2, Dreal[73]);
		Dreal[108] = FMA(x[108], Drinvpow_7_0, Dreal[108]);
		Dreal[108] = FMA(T(3.0000000000000000e+00), x[46]*Drinvpow_6_1, Dreal[108]);
		Dreal[108] = FMA(T(3.0000000000000000e+00), x[48]*Drinvpow_6_1, Dreal[108]);
		Dreal[108] = FMA(T(9.0000000000000000e+00), x[14]*Drinvpow_5_2, Dreal[108]);
		Dreal[45] = FMA(x[45], Drinvpow_5_0, Dreal[45]);
		Dreal[45] = FMA(T(6.0000000000000000e+00), x[13]*Drinvpow_4_1, Dreal[45]);
		Dreal[45] = FMA(T(3.0000000000000000e+00), x[1]*Drinvpow_3_2, Dreal[45]);
		Dreal[72] = FMA(x[72], Drinvpow_6_0, Dreal[72]);
		Dreal[72] = FMA(T(6.0000000000000000e+00), x[27]*Drinvpow_5_1, Dreal[72]);
		Dreal[72] = FMA(T(3.0000000000000000e+00), x[6]*Drinvpow_4_2, Dreal[72]);
		Dreal[107] = FMA(x[107], Drinvpow_7_0, Dreal[107]);
		Dreal[107] = FMA(x[45], Drinvpow_6_1, Dreal[107]);
		Dreal[107] = FMA(T(6.0000000000000000e+00), x[47]*Drinvpow_6_1, Dreal[107]);
		Dreal[107] = FMA(T(6.0000000000000000e+00), x[13]*Drinvpow_5_2, Dreal[107]);
		Dreal[107] = FMA(T(3.0000000000000000e+00), x[15]*Drinvpow_5_2, Dreal[107]);
		Dreal[107] = FMA(T(3.0000000000000000e+00), x[1]*Drinvpow_4_3, Dreal[107]);
		Dreal[71] = FMA(x[71], Drinvpow_6_0, Dreal[71]);
		Dreal[71] = FMA(T(1.0000000000000000e+01), x[26]*Drinvpow_5_1, Dreal[71]);
		Dreal[71] = FMA(T(1.5000000000000000e+01), x[5]*Drinvpow_4_2, Dreal[71]);
		Dreal[106] = FMA(x[106], Drinvpow_7_0, Dreal[106]);
		Dreal[106] = FMA(T(1.0000000000000000e+01), x[46]*Drinvpow_6_1, Dreal[106]);
		Dreal[106] = FMA(T(1.5000000000000000e+01), x[14]*Drinvpow_5_2, Dreal[106]);
		Dreal[105] = FMA(x[105], Drinvpow_7_0, Dreal[105]);
		Dreal[105] = FMA(T(1.5000000000000000e+01), x[45]*Drinvpow_6_1, Dreal[105]);
		Dreal[105] = FMA(T(4.5000000000000000e+01), x[13]*Drinvpow_5_2, Dreal[105]);
		Dreal[105] = FMA(T(1.5000000000000000e+01), x[1]*Drinvpow_4_3, Dreal[105]);
		Dreal[4] = FMA(x[4], Drinvpow_2_0, Dreal[4]);
		Dreal[4] = FMA(x[0], Drinvpow_1_1, Dreal[4]);
		Dreal[12] = FMA(x[12], Drinvpow_3_0, Dreal[12]);
		Dreal[12] = FMA(x[3], Drinvpow_2_1, Dreal[12]);
		Dreal[25] = FMA(x[25], Drinvpow_4_0, Dreal[25]);
		Dreal[25] = FMA(x[4], Drinvpow_3_1, Dreal[25]);
		Dreal[25] = FMA(x[9], Drinvpow_3_1, Dreal[25]);
		Dreal[25] = FMA(x[0], Drinvpow_2_2, Dreal[25]);
		Dreal[44] = FMA(x[44], Drinvpow_5_0, Dreal[44]);
		Dreal[44] = FMA(T(3.0000000000000000e+00), x[12]*Drinvpow_4_1, Dreal[44]);
		Dreal[44] = FMA(x[19], Drinvpow_4_1, Dreal[44]);
		Dreal[44] = FMA(T(3.0000000000000000e+00), x[3]*Drinvpow_3_2, Dreal[44]);
		Dreal[70] = FMA(x[70], Drinvpow_6_0, Dreal[70]);
		Dreal[70] = FMA(T(6.0000000000000000e+00), x[25]*Drinvpow_5_1, Dreal[70]);
		Dreal[70] = FMA(T(3.0000000000000000e+00), x[4]*Drinvpow_4_2, Dreal[70]);
		Dreal[70] = FMA(x[34], Drinvpow_5_1, Dreal[70]);
		Dreal[70] = FMA(T(6.0000000000000000e+00), x[9]*Drinvpow_4_2, Dreal[70]);
		Dreal[70] = FMA(T(3.0000000000000000e+00), x[0]*Drinvpow_3_3, Dreal[70]);
		Dreal[104] = FMA(x[104], Drinvpow_7_0, Dreal[104]);
		Dreal[104] = FMA(T(1.0000000000000000e+01), x[44]*Drinvpow_6_1, Dreal[104]);
		Dreal[104] = FMA(T(1.5000000000000000e+01), x[12]*Drinvpow_5_2, Dreal[104]);
		Dreal[104] = FMA(x[55], Drinvpow_6_1, Dreal[104]);
		Dreal[104] = FMA(T(1.0000000000000000e+01), x[19]*Drinvpow_5_2, Dreal[104]);
		Dreal[104] = FMA(T(1.5000000000000000e+01), x[3]*Drinvpow_4_3, Dreal[104]);
		Dreal[11] = FMA(x[11], Drinvpow_3_0, Dreal[11]);
		Dreal[11] = FMA(x[2], Drinvpow_2_1, Dreal[11]);
		Dreal[24] = FMA(x[24], Drinvpow_4_0, Dreal[24]);
		Dreal[24] = FMA(x[8], Drinvpow_3_1, Dreal[24]);
		Dreal[43] = FMA(x[43], Drinvpow_5_0, Dreal[43]);
		Dreal[43] = FMA(x[11], Drinvpow_4_1, Dreal[43]);
		Dreal[43] = FMA(x[18], Drinvpow_4_1, Dreal[43]);
		Dreal[43] = FMA(x[2], Drinvpow_3_2, Dreal[43]);
		Dreal[69] = FMA(x[69], Drinvpow_6_0, Dreal[69]);
		Dreal[69] = FMA(T(3.0000000000000000e+00), x[24]*Drinvpow_5_1, Dreal[69]);
		Dreal[69] = FMA(x[33], Drinvpow_5_1, Dreal[69]);
		Dreal[69] = FMA(T(3.0000000000000000e+00), x[8]*Drinvpow_4_2, Dreal[69]);
		Dreal[103] = FMA(x[103], Drinvpow_7_0, Dreal[103]);
		Dreal[103] = FMA(T(6.0000000000000000e+00), x[43]*Drinvpow_6_1, Dreal[103]);
		Dreal[103] = FMA(T(3.0000000000000000e+00), x[11]*Drinvpow_5_2, Dreal[103]);
		Dreal[103] = FMA(x[54], Drinvpow_6_1, Dreal[103]);
		Dreal[103] = FMA(T(6.0000000000000000e+00), x[18]*Drinvpow_5_2, Dreal[103]);
		Dreal[103] = FMA(T(3.0000000000000000e+00), x[2]*Drinvpow_4_3, Dreal[103]);
		Dreal[23] = FMA(x[23], Drinvpow_4_0, Dreal[23]);
		Dreal[23] = FMA(x[4], Drinvpow_3_1, Dreal[23]);
		Dreal[23] = FMA(x[7], Drinvpow_3_1, Dreal[23]);
		Dreal[23] = FMA(x[0], Drinvpow_2_2, Dreal[23]);
		Dreal[42] = FMA(x[42], Drinvpow_5_0, Dreal[42]);
		Dreal[42] = FMA(x[12], Drinvpow_4_1, Dreal[42]);
		Dreal[42] = FMA(x[17], Drinvpow_4_1, Dreal[42]);
		Dreal[42] = FMA(x[3], Drinvpow_3_2, Dreal[42]);
		Dreal[68] = FMA(x[68], Drinvpow_6_0, Dreal[68]);
		Dreal[68] = FMA(x[23], Drinvpow_5_1, Dreal[68]);
		Dreal[68] = FMA(x[25], Drinvpow_5_1, Dreal[68]);
		Dreal[68] = FMA(x[4], Drinvpow_4_2, Dreal[68]);
		Dreal[68] = FMA(x[32], Drinvpow_5_1, Dreal[68]);
		Dreal[68] = FMA(x[7], Drinvpow_4_2, Dreal[68]);
		Dreal[68] = FMA(x[9], Drinvpow_4_2, Dreal[68]);
		Dreal[68] = FMA(x[0], Drinvpow_3_3, Dreal[68]);
		Dreal[102] = FMA(x[102], Drinvpow_7_0, Dreal[102]);
		Dreal[102] = FMA(T(3.0000000000000000e+00), x[42]*Drinvpow_6_1, Dreal[102]);
		Dreal[102] = FMA(x[44], Drinvpow_6_1, Dreal[102]);
		Dreal[102] = FMA(T(3.0000000000000000e+00), x[12]*Drinvpow_5_2, Dreal[102]);
		Dreal[102] = FMA(x[53], Drinvpow_6_1, Dreal[102]);
		Dreal[102] = FMA(T(3.0000000000000000e+00), x[17]*Drinvpow_5_2, Dreal[102]);
		Dreal[102] = FMA(x[19], Drinvpow_5_2, Dreal[102]);
		Dreal[102] = FMA(T(3.0000000000000000e+00), x[3]*Drinvpow_4_3, Dreal[102]);
		Dreal[41] = FMA(x[41], Drinvpow_5_0, Dreal[41]);
		Dreal[41] = FMA(T(3.0000000000000000e+00), x[11]*Drinvpow_4_1, Dreal[41]);
		Dreal[41] = FMA(x[16], Drinvpow_4_1, Dreal[41]);
		Dreal[41] = FMA(T(3.0000000000000000e+00), x[2]*Drinvpow_3_2, Dreal[41]);
		Dreal[67] = FMA(x[67], Drinvpow_6_0, Dreal[67]);
		Dreal[67] = FMA(T(3.0000000000000000e+00), x[24]*Drinvpow_5_1, Dreal[67]);
		Dreal[67] = FMA(x[31], Drinvpow_5_1, Dreal[67]);
		Dreal[67] = FMA(T(3.0000000000000000e+00), x[8]*Drinvpow_4_2, Dreal[67]);
		Dreal[101] = FMA(x[101], Drinvpow_7_0, Dreal[101]);
		Dreal[101] = FMA(x[41], Drinvpow_6_1, Dreal[101]);
		Dreal[101] = FMA(T(3.0000000000000000e+00), x[43]*Drinvpow_6_1, Dreal[101]);
		Dreal[101] = FMA(T(3.0000000000000000e+00), x[11]*Drinvpow_5_2, Dreal[101]);
		Dreal[101] = FMA(x[52], Drinvpow_6_1, Dreal[101]);
		Dreal[101] = FMA(x[16], Drinvpow_5_2, Dreal[101]);
		Dreal[101] = FMA(T(3.0000000000000000e+00), x[18]*Drinvpow_5_2, Dreal[101]);
		Dreal[101] = FMA(T(3.0000000000000000e+00), x[2]*Drinvpow_4_3, Dreal[101]);
		Dreal[66] = FMA(x[66], Drinvpow_6_0, Dreal[66]);
		Dreal[66] = FMA(T(6.0000000000000000e+00), x[23]*Drinvpow_5_1, Dreal[66]);
		Dreal[66] = FMA(T(3.0000000000000000e+00), x[4]*Drinvpow_4_2, Dreal[66]);
		Dreal[66] = FMA(x[30], Drinvpow_5_1, Dreal[66]);
		Dreal[66] = FMA(T(6.0000000000000000e+00), x[7]*Drinvpow_4_2, Dreal[66]);
		Dreal[66] = FMA(T(3.0000000000000000e+00), x[0]*Drinvpow_3_3, Dreal[66]);
		Dreal[100] = FMA(x[100], Drinvpow_7_0, Dreal[100]);
		Dreal[100] = FMA(T(6.0000000000000000e+00), x[42]*Drinvpow_6_1, Dreal[100]);
		Dreal[100] = FMA(T(3.0000000000000000e+00), x[12]*Drinvpow_5_2, Dreal[100]);
		Dreal[100] = FMA(x[51], Drinvpow_6_1, Dreal[100]);
		Dreal[100] = FMA(T(6.0000000000000000e+00), x[17]*Drinvpow_5_2, Dreal[100]);
		Dreal[100] = FMA(T(3.0000000000000000e+00), x[3]*Drinvpow_4_3, Dreal[100]);
		Dreal[99] = FMA(x[99], Drinvpow_7_0, Dreal[99]);
		Dreal[99] = FMA(T(1.0000000000000000e+01), x[41]*Drinvpow_6_1, Dreal[99]);
		Dreal[99] = FMA(T(1.5000000000000000e+01), x[11]*Drinvpow_5_2, Dreal[99]);
		Dreal[99] = FMA(x[50], Drinvpow_6_1, Dreal[99]);
		Dreal[99] = FMA(T(1.0000000000000000e+01), x[16]*Drinvpow_5_2, Dreal[99]);
		Dreal[99] = FMA(T(1.5000000000000000e+01), x[2]*Drinvpow_4_3, Dreal[99]);
		Dreal[10] = FMA(x[10], Drinvpow_3_0, Dreal[10]);
		Dreal[10] = FMA(T(3.0000000000000000e+00), x[1]*Drinvpow_2_1, Dreal[10]);
		Dreal[22] = FMA(x[22], Drinvpow_4_0, Dreal[22]);
		Dreal[22] = FMA(T(3.0000000000000000e+00), x[6]*Drinvpow_3_1, Dreal[22]);
		Dreal[40] = FMA(x[40], Drinvpow_5_0, Dreal[40]);
		Dreal[40] = FMA(x[10], Drinvpow_4_1, Dreal[40]);
		Dreal[40] = FMA(T(3.0000000000000000e+00), x[15]*Drinvpow_4_1, Dreal[40]);
		Dreal[40] = FMA(T(3.0000000000000000e+00), x[1]*Drinvpow_3_2, Dreal[40]);
		Dreal[65] = FMA(x[65], Drinvpow_6_0, Dreal[65]);
		Dreal[65] = FMA(T(3.0000000000000000e+00), x[22]*Drinvpow_5_1, Dreal[65]);
		Dreal[65] = FMA(T(3.0000000000000000e+00), x[29]*Drinvpow_5_1, Dreal[65]);
		Dreal[65] = FMA(T(9.0000000000000000e+00), x[6]*Drinvpow_4_2, Dreal[65]);
		Dreal[98] = FMA(x[98], Drinvpow_7_0, Dreal[98]);
		Dreal[98] = FMA(T(6.0000000000000000e+00), x[40]*Drinvpow_6_1, Dreal[98]);
		Dreal[98] = FMA(T(3.0000000000000000e+00), x[10]*Drinvpow_5_2, Dreal[98]);
		Dreal[98] = FMA(T(3.0000000000000000e+00), x[49]*Drinvpow_6_1, Dreal[98]);
		Dreal[98] = FMA(T(1.8000000000000000e+01), x[15]*Drinvpow_5_2, Dreal[98]);
		Dreal[98] = FMA(T(9.0000000000000000e+00), x[1]*Drinvpow_4_3, Dreal[98]);
		Dreal[21] = FMA(x[21], Drinvpow_4_0, Dreal[21]);
		Dreal[21] = FMA(T(3.0000000000000000e+00), x[5]*Drinvpow_3_1, Dreal[21]);
		Dreal[39] = FMA(x[39], Drinvpow_5_0, Dreal[39]);
		Dreal[39] = FMA(T(3.0000000000000000e+00), x[14]*Drinvpow_4_1, Dreal[39]);
		Dreal[64] = FMA(x[64], Drinvpow_6_0, Dreal[64]);
		Dreal[64] = FMA(x[21], Drinvpow_5_1, Dreal[64]);
		Dreal[64] = FMA(T(3.0000000000000000e+00), x[28]*Drinvpow_5_1, Dreal[64]);
		Dreal[64] = FMA(T(3.0000000000000000e+00), x[5]*Drinvpow_4_2, Dreal[64]);
		Dreal[97] = FMA(x[97], Drinvpow_7_0, Dreal[97]);
		Dreal[97] = FMA(T(3.0000000000000000e+00), x[39]*Drinvpow_6_1, Dreal[97]);
		Dreal[97] = FMA(T(3.0000000000000000e+00), x[48]*Drinvpow_6_1, Dreal[97]);
		Dreal[97] = FMA(T(9.0000000000000000e+00), x[14]*Drinvpow_5_2, Dreal[97]);
		Dreal[38] = FMA(x[38], Drinvpow_5_0, Dreal[38]);
		Dreal[38] = FMA(x[10], Drinvpow_4_1, Dreal[38]);
		Dreal[38] = FMA(T(3.0000000000000000e+00), x[13]*Drinvpow_4_1, Dreal[38]);
		Dreal[38] = FMA(T(3.0000000000000000e+00), x[1]*Drinvpow_3_2, Dreal[38]);
		Dreal[63] = FMA(x[63], Drinvpow_6_0, Dreal[63]);
		Dreal[63] = FMA(x[22], Drinvpow_5_1, Dreal[63]);
		Dreal[63] = FMA(T(3.0000000000000000e+00), x[27]*Drinvpow_5_1, Dreal[63]);
		Dreal[63] = FMA(T(3.0000000000000000e+00), x[6]*Drinvpow_4_2, Dreal[63]);
		Dreal[96] = FMA(x[96], Drinvpow_7_0, Dreal[96]);
		Dreal[96] = FMA(x[38], Drinvpow_6_1, Dreal[96]);
		Dreal[96] = FMA(x[40], Drinvpow_6_1, Dreal[96]);
		Dreal[96] = FMA(x[10], Drinvpow_5_2, Dreal[96]);
		Dreal[96] = FMA(T(3.0000000000000000e+00), x[47]*Drinvpow_6_1, Dreal[96]);
		Dreal[96] = FMA(T(3.0000000000000000e+00), x[13]*Drinvpow_5_2, Dreal[96]);
		Dreal[96] = FMA(T(3.0000000000000000e+00), x[15]*Drinvpow_5_2, Dreal[96]);
		Dreal[96] = FMA(T(3.0000000000000000e+00), x[1]*Drinvpow_4_3, Dreal[96]);
		Dreal[62] = FMA(x[62], Drinvpow_6_0, Dreal[62]);
		Dreal[62] = FMA(T(3.0000000000000000e+00), x[21]*Drinvpow_5_1, Dreal[62]);
		Dreal[62] = FMA(T(3.0000000000000000e+00), x[26]*Drinvpow_5_1, Dreal[62]);
		Dreal[62] = FMA(T(9.0000000000000000e+00), x[5]*Drinvpow_4_2, Dreal[62]);
		Dreal[95] = FMA(x[95], Drinvpow_7_0, Dreal[95]);
		Dreal[95] = FMA(T(3.0000000000000000e+00), x[39]*Drinvpow_6_1, Dreal[95]);
		Dreal[95] = FMA(T(3.0000000000000000e+00), x[46]*Drinvpow_6_1, Dreal[95]);
		Dreal[95] = FMA(T(9.0000000000000000e+00), x[14]*Drinvpow_5_2, Dreal[95]);
		Dreal[94] = FMA(x[94], Drinvpow_7_0, Dreal[94]);
		Dreal[94] = FMA(T(6.0000000000000000e+00), x[38]*Drinvpow_6_1, Dreal[94]);
		Dreal[94] = FMA(T(3.0000000000000000e+00), x[10]*Drinvpow_5_2, Dreal[94]);
		Dreal[94] = FMA(T(3.0000000000000000e+00), x[45]*Drinvpow_6_1, Dreal[94]);
		Dreal[94] = FMA(T(1.8000000000000000e+01), x[13]*Drinvpow_5_2, Dreal[94]);
		Dreal[94] = FMA(T(9.0000000000000000e+00), x[1]*Drinvpow_4_3, Dreal[94]);
		Dreal[20] = FMA(x[20], Drinvpow_4_0, Dreal[20]);
		Dreal[20] = FMA(T(6.0000000000000000e+00), x[4]*Drinvpow_3_1, Dreal[20]);
		Dreal[20] = FMA(T(3.0000000000000000e+00), x[0]*Drinvpow_2_2, Dreal[20]);
		Dreal[37] = FMA(x[37], Drinvpow_5_0, Dreal[37]);
		Dreal[37] = FMA(T(6.0000000000000000e+00), x[12]*Drinvpow_4_1, Dreal[37]);
		Dreal[37] = FMA(T(3.0000000000000000e+00), x[3]*Drinvpow_3_2, Dreal[37]);
		Dreal[61] = FMA(x[61], Drinvpow_6_0, Dreal[61]);
		Dreal[61] = FMA(x[20], Drinvpow_5_1, Dreal[61]);
		Dreal[61] = FMA(T(6.0000000000000000e+00), x[25]*Drinvpow_5_1, Dreal[61]);
		Dreal[61] = FMA(T(6.0000000000000000e+00), x[4]*Drinvpow_4_2, Dreal[61]);
		Dreal[61] = FMA(T(3.0000000000000000e+00), x[9]*Drinvpow_4_2, Dreal[61]);
		Dreal[61] = FMA(T(3.0000000000000000e+00), x[0]*Drinvpow_3_3, Dreal[61]);
		Dreal[93] = FMA(x[93], Drinvpow_7_0, Dreal[93]);
		Dreal[93] = FMA(T(3.0000000000000000e+00), x[37]*Drinvpow_6_1, Dreal[93]);
		Dreal[93] = FMA(T(6.0000000000000000e+00), x[44]*Drinvpow_6_1, Dreal[93]);
		Dreal[93] = FMA(T(1.8000000000000000e+01), x[12]*Drinvpow_5_2, Dreal[93]);
		Dreal[93] = FMA(T(3.0000000000000000e+00), x[19]*Drinvpow_5_2, Dreal[93]);
		Dreal[93] = FMA(T(9.0000000000000000e+00), x[3]*Drinvpow_4_3, Dreal[93]);
		Dreal[36] = FMA(x[36], Drinvpow_5_0, Dreal[36]);
		Dreal[36] = FMA(T(6.0000000000000000e+00), x[11]*Drinvpow_4_1, Dreal[36]);
		Dreal[36] = FMA(T(3.0000000000000000e+00), x[2]*Drinvpow_3_2, Dreal[36]);
		Dreal[60] = FMA(x[60], Drinvpow_6_0, Dreal[60]);
		Dreal[60] = FMA(T(6.0000000000000000e+00), x[24]*Drinvpow_5_1, Dreal[60]);
		Dreal[60] = FMA(T(3.0000000000000000e+00), x[8]*Drinvpow_4_2, Dreal[60]);
		Dreal[92] = FMA(x[92], Drinvpow_7_0, Dreal[92]);
		Dreal[92] = FMA(x[36], Drinvpow_6_1, Dreal[92]);
		Dreal[92] = FMA(T(6.0000000000000000e+00), x[43]*Drinvpow_6_1, Dreal[92]);
		Dreal[92] = FMA(T(6.0000000000000000e+00), x[11]*Drinvpow_5_2, Dreal[92]);
		Dreal[92] = FMA(T(3.0000000000000000e+00), x[18]*Drinvpow_5_2, Dreal[92]);
		Dreal[92] = FMA(T(3.0000000000000000e+00), x[2]*Drinvpow_4_3, Dreal[92]);
		Dreal[59] = FMA(x[59], Drinvpow_6_0, Dreal[59]);
		Dreal[59] = FMA(x[20], Drinvpow_5_1, Dreal[59]);
		Dreal[59] = FMA(T(6.0000000000000000e+00), x[23]*Drinvpow_5_1, Dreal[59]);
		Dreal[59] = FMA(T(6.0000000000000000e+00), x[4]*Drinvpow_4_2, Dreal[59]);
		Dreal[59] = FMA(T(3.0000000000000000e+00), x[7]*Drinvpow_4_2, Dreal[59]);
		Dreal[59] = FMA(T(3.0000000000000000e+00), x[0]*Drinvpow_3_3, Dreal[59]);
		Dreal[91] = FMA(x[91], Drinvpow_7_0, Dreal[91]);
		Dreal[91] = FMA(x[37], Drinvpow_6_1, Dreal[91]);
		Dreal[91] = FMA(T(6.0000000000000000e+00), x[42]*Drinvpow_6_1, Dreal[91]);
		Dreal[91] = FMA(T(6.0000000000000000e+00), x[12]*Drinvpow_5_2, Dreal[91]);
		Dreal[91] = FMA(T(3.0000000000000000e+00), x[17]*Drinvpow_5_2, Dreal[91]);
		Dreal[91] = FMA(T(3.0000000000000000e+00), x[3]*Drinvpow_4_3, Dreal[91]);
		Dreal[90] = FMA(x[90], Drinvpow_7_0, Dreal[90]);
		Dreal[90] = FMA(T(3.0000000000000000e+00), x[36]*Drinvpow_6_1, Dreal[90]);
		Dreal[90] = FMA(T(6.0000000000000000e+00), x[41]*Drinvpow_6_1, Dreal[90]);
		Dreal[90] = FMA(T(1.8000000000000000e+01), x[11]*Drinvpow_5_2, Dreal[90]);
		Dreal[90] = FMA(T(3.0000000000000000e+00), x[16]*Drinvpow_5_2, Dreal[90]);
		Dreal[90] = FMA(T(9.0000000000000000e+00), x[2]*Drinvpow_4_3, Dreal[90]);
		Dreal[35] = FMA(x[35], Drinvpow_5_0, Dreal[35]);
		Dreal[35] = FMA(T(1.0000000000000000e+01), x[10]*Drinvpow_4_1, Dreal[35]);
		Dreal[35] = FMA(T(1.5000000000000000e+01), x[1]*Drinvpow_3_2, Dreal[35]);
		Dreal[58] = FMA(x[58], Drinvpow_6_0, Dreal[58]);
		Dreal[58] = FMA(T(1.0000000000000000e+01), x[22]*Drinvpow_5_1, Dreal[58]);
		Dreal[58] = FMA(T(1.5000000000000000e+01), x[6]*Drinvpow_4_2, Dreal[58]);
		Dreal[89] = FMA(x[89], Drinvpow_7_0, Dreal[89]);
		Dreal[89] = FMA(x[35], Drinvpow_6_1, Dreal[89]);
		Dreal[89] = FMA(T(1.0000000000000000e+01), x[40]*Drinvpow_6_1, Dreal[89]);
		Dreal[89] = FMA(T(1.0000000000000000e+01), x[10]*Drinvpow_5_2, Dreal[89]);
		Dreal[89] = FMA(T(1.5000000000000000e+01), x[15]*Drinvpow_5_2, Dreal[89]);
		Dreal[89] = FMA(T(1.5000000000000000e+01), x[1]*Drinvpow_4_3, Dreal[89]);
		Dreal[57] = FMA(x[57], Drinvpow_6_0, Dreal[57]);
		Dreal[57] = FMA(T(1.0000000000000000e+01), x[21]*Drinvpow_5_1, Dreal[57]);
		Dreal[57] = FMA(T(1.5000000000000000e+01), x[5]*Drinvpow_4_2, Dreal[57]);
		Dreal[88] = FMA(x[88], Drinvpow_7_0, Dreal[88]);
		Dreal[88] = FMA(T(1.0000000000000000e+01), x[39]*Drinvpow_6_1, Dreal[88]);
		Dreal[88] = FMA(T(1.5000000000000000e+01), x[14]*Drinvpow_5_2, Dreal[88]);
		Dreal[87] = FMA(x[87], Drinvpow_7_0, Dreal[87]);
		Dreal[87] = FMA(x[35], Drinvpow_6_1, Dreal[87]);
		Dreal[87] = FMA(T(1.0000000000000000e+01), x[38]*Drinvpow_6_1, Dreal[87]);
		Dreal[87] = FMA(T(1.0000000000000000e+01), x[10]*Drinvpow_5_2, Dreal[87]);
		Dreal[87] = FMA(T(1.5000000000000000e+01), x[13]*Drinvpow_5_2, Dreal[87]);
		Dreal[87] = FMA(T(1.5000000000000000e+01), x[1]*Drinvpow_4_3, Dreal[87]);
		Dreal[56] = FMA(x[56], Drinvpow_6_0, Dreal[56]);
		Dreal[56] = FMA(T(1.5000000000000000e+01), x[20]*Drinvpow_5_1, Dreal[56]);
		Dreal[56] = FMA(T(4.5000000000000000e+01), x[4]*Drinvpow_4_2, Dreal[56]);
		Dreal[56] = FMA(T(1.5000000000000000e+01), x[0]*Drinvpow_3_3, Dreal[56]);
		Dreal[86] = FMA(x[86], Drinvpow_7_0, Dreal[86]);
		Dreal[86] = FMA(T(1.5000000000000000e+01), x[37]*Drinvpow_6_1, Dreal[86]);
		Dreal[86] = FMA(T(4.5000000000000000e+01), x[12]*Drinvpow_5_2, Dreal[86]);
		Dreal[86] = FMA(T(1.5000000000000000e+01), x[3]*Drinvpow_4_3, Dreal[86]);
		Dreal[85] = FMA(x[85], Drinvpow_7_0, Dreal[85]);
		Dreal[85] = FMA(T(1.5000000000000000e+01), x[36]*Drinvpow_6_1, Dreal[85]);
		Dreal[85] = FMA(T(4.5000000000000000e+01), x[11]*Drinvpow_5_2, Dreal[85]);
		Dreal[85] = FMA(T(1.5000000000000000e+01), x[2]*Drinvpow_4_3, Dreal[85]);
		Dreal[84] = FMA(x[84], Drinvpow_7_0, Dreal[84]);
		Dreal[84] = FMA(T(2.1000000000000000e+01), x[35]*Drinvpow_6_1, Dreal[84]);
		Dreal[84] = FMA(T(1.0500000000000000e+02), x[10]*Drinvpow_5_2, Dreal[84]);
		Dreal[84] = FMA(T(1.0500000000000000e+02), x[1]*Drinvpow_4_3, Dreal[84]);
		const auto Drz = econst.D0();
		for( int i = 0; i < 120; i++) {
			Dreal[i] *= zero_mask;
			Dreal[i] -= (T(1) - zero_mask) * Drz[i];
		}
	}
	flops += icnt * 1408;
	for (int i = 0; i < realsz; i++) {
		const auto n = econst.real_index(i);
		array<T, NDIM> dx;
		for (int dim = 0; dim < NDIM; dim++) {
			dx[dim] = X[dim] - T(SCALE_FACTOR) * n[dim];
		}
		T r2 = FMA(dx[0], dx[0], FMA(dx[1], dx[1], sqr(dx[2])));
		if (anytrue(r2 < T(SCALE_FACTOR2*EWALD_REAL_CUTOFF2))) {
			icnt++;
			const T r = sqrt(r2);
			const T n8r = T(-8 * SCALE_FACTOR_INV2) * r;
			const T rinv = (r > T(0)) / f_max(r, 1.0e-20);
			T exp0;
			T erfc0;
			ERFCEXP(T(2.*SCALE_FACTOR_INV1) * r, &erfc0, &exp0);
			const T expfactor = fouroversqrtpi  * T(SCALE_FACTOR_INV1) * exp0;
			T e0 = expfactor * rinv;
			const T rinv0 = T(1);
			const T rinv1 = rinv;
			const T rinv2 = rinv1 * rinv1;
			const T rinv3 = rinv1 * rinv2;
			const T d0 = -erfc0 * rinv;
			const T d1 = FMA(T(-1) * d0, rinv, e0);
			e0 *= n8r;
			const T d2 = FMA(T(-3) * d1, rinv, e0);
			e0 *= n8r;
			const T d3 = FMA(T(-5) * d2, rinv, e0);
			e0 *= n8r;
			const T d4 = FMA(T(-7) * d3, rinv, e0);
			e0 *= n8r;
			const T d5 = FMA(T(-9) * d4, rinv, e0);
			e0 *= n8r;
			const T d6 = FMA(T(-11) * d5, rinv, e0);
			e0 *= n8r;
			const T d7 = FMA(T(-13) * d6, rinv, e0);
			const T Drinvpow_0_0 = d0 * rinv0;
			const T Drinvpow_1_0 = d1 * rinv0;
			const T Drinvpow_1_1 = d1 * rinv1;
			const T Drinvpow_2_0 = d2 * rinv0;
			const T Drinvpow_2_1 = d2 * rinv1;
			const T Drinvpow_2_2 = d2 * rinv2;
			const T Drinvpow_3_0 = d3 * rinv0;
			const T Drinvpow_3_1 = d3 * rinv1;
			const T Drinvpow_3_2 = d3 * rinv2;
			const T Drinvpow_3_3 = d3 * rinv3;
			const T Drinvpow_4_0 = d4 * rinv0;
			const T Drinvpow_4_1 = d4 * rinv1;
			const T Drinvpow_4_2 = d4 * rinv2;
			const T Drinvpow_4_3 = d4 * rinv3;
			const T Drinvpow_5_0 = d5 * rinv0;
			const T Drinvpow_5_1 = d5 * rinv1;
			const T Drinvpow_5_2 = d5 * rinv2;
			const T Drinvpow_6_0 = d6 * rinv0;
			const T Drinvpow_6_1 = d6 * rinv1;
			const T Drinvpow_7_0 = d7 * rinv0;
			array<T,NDIM> dxrinv;
			dxrinv[0] = dx[0] * rinv;
			dxrinv[1] = dx[1] * rinv;
			dxrinv[2] = dx[2] * rinv;
			T x[120];
			x[0] = T(1);
			x[1] = dxrinv[0];
			x[2] = dxrinv[1];
			x[3] = dxrinv[2];
			x[9] = x[3] * x[3]; // 0 0 2 | 0 0 1 | 0 0 1
			x[8] = x[2] * x[3]; // 0 1 1 | 0 0 1 | 0 1 0
			x[7] = x[2] * x[2]; // 0 2 0 | 0 1 0 | 0 1 0
			x[6] = x[1] * x[3]; // 1 0 1 | 0 0 1 | 1 0 0
			x[5] = x[1] * x[2]; // 1 1 0 | 0 1 0 | 1 0 0
			x[4] = x[1] * x[1]; // 2 0 0 | 1 0 0 | 1 0 0
			x[19] = x[9] * x[3]; // 0 0 3 | 0 0 1 | 0 0 2
			x[18] = x[8] * x[3]; // 0 1 2 | 0 0 1 | 0 1 1
			x[17] = x[8] * x[2]; // 0 2 1 | 0 1 0 | 0 1 1
			x[16] = x[7] * x[2]; // 0 3 0 | 0 1 0 | 0 2 0
			x[15] = x[6] * x[3]; // 1 0 2 | 0 0 1 | 1 0 1
			x[14] = x[5] * x[3]; // 1 1 1 | 0 0 1 | 1 1 0
			x[13] = x[5] * x[2]; // 1 2 0 | 0 1 0 | 1 1 0
			x[12] = x[6] * x[1]; // 2 0 1 | 1 0 0 | 1 0 1
			x[11] = x[5] * x[1]; // 2 1 0 | 1 0 0 | 1 1 0
			x[10] = x[4] * x[1]; // 3 0 0 | 1 0 0 | 2 0 0
			x[34] = x[9] * x[9]; // 0 0 4 | 0 0 2 | 0 0 2
			x[33] = x[8] * x[9]; // 0 1 3 | 0 0 2 | 0 1 1
			x[32] = x[8] * x[8]; // 0 2 2 | 0 1 1 | 0 1 1
			x[31] = x[8] * x[7]; // 0 3 1 | 0 2 0 | 0 1 1
			x[30] = x[7] * x[7]; // 0 4 0 | 0 2 0 | 0 2 0
			x[29] = x[6] * x[9]; // 1 0 3 | 0 0 2 | 1 0 1
			x[28] = x[5] * x[9]; // 1 1 2 | 0 0 2 | 1 1 0
			x[27] = x[5] * x[8]; // 1 2 1 | 0 1 1 | 1 1 0
			x[26] = x[5] * x[7]; // 1 3 0 | 0 2 0 | 1 1 0
			x[25] = x[6] * x[6]; // 2 0 2 | 1 0 1 | 1 0 1
			x[24] = x[5] * x[6]; // 2 1 1 | 1 0 1 | 1 1 0
			x[23] = x[5] * x[5]; // 2 2 0 | 1 1 0 | 1 1 0
			x[22] = x[6] * x[4]; // 3 0 1 | 2 0 0 | 1 0 1
			x[21] = x[5] * x[4]; // 3 1 0 | 2 0 0 | 1 1 0
			x[20] = x[4] * x[4]; // 4 0 0 | 2 0 0 | 2 0 0
			x[55] = x[19] * x[9]; // 0 0 5 | 0 0 2 | 0 0 3
			x[54] = x[18] * x[9]; // 0 1 4 | 0 0 2 | 0 1 2
			x[53] = x[17] * x[9]; // 0 2 3 | 0 0 2 | 0 2 1
			x[52] = x[17] * x[8]; // 0 3 2 | 0 1 1 | 0 2 1
			x[51] = x[17] * x[7]; // 0 4 1 | 0 2 0 | 0 2 1
			x[50] = x[16] * x[7]; // 0 5 0 | 0 2 0 | 0 3 0
			x[49] = x[15] * x[9]; // 1 0 4 | 0 0 2 | 1 0 2
			x[48] = x[14] * x[9]; // 1 1 3 | 0 0 2 | 1 1 1
			x[47] = x[14] * x[8]; // 1 2 2 | 0 1 1 | 1 1 1
			x[46] = x[14] * x[7]; // 1 3 1 | 0 2 0 | 1 1 1
			x[45] = x[13] * x[7]; // 1 4 0 | 0 2 0 | 1 2 0
			x[44] = x[12] * x[9]; // 2 0 3 | 0 0 2 | 2 0 1
			x[43] = x[14] * x[6]; // 2 1 2 | 1 0 1 | 1 1 1
			x[42] = x[14] * x[5]; // 2 2 1 | 1 1 0 | 1 1 1
			x[41] = x[11] * x[7]; // 2 3 0 | 0 2 0 | 2 1 0
			x[40] = x[12] * x[6]; // 3 0 2 | 1 0 1 | 2 0 1
			x[39] = x[14] * x[4]; // 3 1 1 | 2 0 0 | 1 1 1
			x[38] = x[11] * x[5]; // 3 2 0 | 1 1 0 | 2 1 0
			x[37] = x[12] * x[4]; // 4 0 1 | 2 0 0 | 2 0 1
			x[36] = x[11] * x[4]; // 4 1 0 | 2 0 0 | 2 1 0
			x[35] = x[10] * x[4]; // 5 0 0 | 2 0 0 | 3 0 0
			x[83] = x[19] * x[19]; // 0 0 6 | 0 0 3 | 0 0 3
			x[82] = x[18] * x[19]; // 0 1 5 | 0 0 3 | 0 1 2
			x[81] = x[17] * x[19]; // 0 2 4 | 0 0 3 | 0 2 1
			x[80] = x[17] * x[18]; // 0 3 3 | 0 1 2 | 0 2 1
			x[79] = x[17] * x[17]; // 0 4 2 | 0 2 1 | 0 2 1
			x[78] = x[17] * x[16]; // 0 5 1 | 0 3 0 | 0 2 1
			x[77] = x[16] * x[16]; // 0 6 0 | 0 3 0 | 0 3 0
			x[76] = x[15] * x[19]; // 1 0 5 | 0 0 3 | 1 0 2
			x[75] = x[14] * x[19]; // 1 1 4 | 0 0 3 | 1 1 1
			x[74] = x[14] * x[18]; // 1 2 3 | 0 1 2 | 1 1 1
			x[73] = x[14] * x[17]; // 1 3 2 | 0 2 1 | 1 1 1
			x[72] = x[14] * x[16]; // 1 4 1 | 0 3 0 | 1 1 1
			x[71] = x[13] * x[16]; // 1 5 0 | 0 3 0 | 1 2 0
			x[70] = x[12] * x[19]; // 2 0 4 | 0 0 3 | 2 0 1
			x[69] = x[14] * x[15]; // 2 1 3 | 1 0 2 | 1 1 1
			x[68] = x[14] * x[14]; // 2 2 2 | 1 1 1 | 1 1 1
			x[67] = x[14] * x[13]; // 2 3 1 | 1 2 0 | 1 1 1
			x[66] = x[11] * x[16]; // 2 4 0 | 0 3 0 | 2 1 0
			x[65] = x[12] * x[15]; // 3 0 3 | 1 0 2 | 2 0 1
			x[64] = x[14] * x[12]; // 3 1 2 | 2 0 1 | 1 1 1
			x[63] = x[14] * x[11]; // 3 2 1 | 2 1 0 | 1 1 1
			x[62] = x[11] * x[13]; // 3 3 0 | 1 2 0 | 2 1 0
			x[61] = x[12] * x[12]; // 4 0 2 | 2 0 1 | 2 0 1
			x[60] = x[14] * x[10]; // 4 1 1 | 3 0 0 | 1 1 1
			x[59] = x[11] * x[11]; // 4 2 0 | 2 1 0 | 2 1 0
			x[58] = x[12] * x[10]; // 5 0 1 | 3 0 0 | 2 0 1
			x[57] = x[11] * x[10]; // 5 1 0 | 3 0 0 | 2 1 0
			x[56] = x[10] * x[10]; // 6 0 0 | 3 0 0 | 3 0 0
			x[119] = x[34] * x[19]; // 0 0 7 | 0 0 3 | 0 0 4
			x[118] = x[33] * x[19]; // 0 1 6 | 0 0 3 | 0 1 3
			x[117] = x[32] * x[19]; // 0 2 5 | 0 0 3 | 0 2 2
			x[116] = x[32] * x[18]; // 0 3 4 | 0 1 2 | 0 2 2
			x[115] = x[32] * x[17]; // 0 4 3 | 0 2 1 | 0 2 2
			x[114] = x[32] * x[16]; // 0 5 2 | 0 3 0 | 0 2 2
			x[113] = x[31] * x[16]; // 0 6 1 | 0 3 0 | 0 3 1
			x[112] = x[30] * x[16]; // 0 7 0 | 0 3 0 | 0 4 0
			x[111] = x[29] * x[19]; // 1 0 6 | 0 0 3 | 1 0 3
			x[110] = x[28] * x[19]; // 1 1 5 | 0 0 3 | 1 1 2
			x[109] = x[27] * x[19]; // 1 2 4 | 0 0 3 | 1 2 1
			x[108] = x[27] * x[18]; // 1 3 3 | 0 1 2 | 1 2 1
			x[107] = x[27] * x[17]; // 1 4 2 | 0 2 1 | 1 2 1
			x[106] = x[27] * x[16]; // 1 5 1 | 0 3 0 | 1 2 1
			x[105] = x[26] * x[16]; // 1 6 0 | 0 3 0 | 1 3 0
			x[104] = x[25] * x[19]; // 2 0 5 | 0 0 3 | 2 0 2
			x[103] = x[24] * x[19]; // 2 1 4 | 0 0 3 | 2 1 1
			x[102] = x[24] * x[18]; // 2 2 3 | 0 1 2 | 2 1 1
			x[101] = x[24] * x[17]; // 2 3 2 | 0 2 1 | 2 1 1
			x[100] = x[24] * x[16]; // 2 4 1 | 0 3 0 | 2 1 1
			x[99] = x[23] * x[16]; // 2 5 0 | 0 3 0 | 2 2 0
			x[98] = x[25] * x[15]; // 3 0 4 | 1 0 2 | 2 0 2
			x[97] = x[24] * x[15]; // 3 1 3 | 1 0 2 | 2 1 1
			x[96] = x[24] * x[14]; // 3 2 2 | 1 1 1 | 2 1 1
			x[95] = x[24] * x[13]; // 3 3 1 | 1 2 0 | 2 1 1
			x[94] = x[23] * x[13]; // 3 4 0 | 1 2 0 | 2 2 0
			x[93] = x[25] * x[12]; // 4 0 3 | 2 0 1 | 2 0 2
			x[92] = x[24] * x[12]; // 4 1 2 | 2 0 1 | 2 1 1
			x[91] = x[24] * x[11]; // 4 2 1 | 2 1 0 | 2 1 1
			x[90] = x[23] * x[11]; // 4 3 0 | 2 1 0 | 2 2 0
			x[89] = x[25] * x[10]; // 5 0 2 | 3 0 0 | 2 0 2
			x[88] = x[24] * x[10]; // 5 1 1 | 3 0 0 | 2 1 1
			x[87] = x[23] * x[10]; // 5 2 0 | 3 0 0 | 2 2 0
			x[86] = x[22] * x[10]; // 6 0 1 | 3 0 0 | 3 0 1
			x[85] = x[21] * x[10]; // 6 1 0 | 3 0 0 | 3 1 0
			x[84] = x[20] * x[10]; // 7 0 0 | 3 0 0 | 4 0 0
			Dreal[0] = FMA(x[0], Drinvpow_0_0, Dreal[0]);
			Dreal[3] = FMA(x[3], Drinvpow_1_0, Dreal[3]);
			Dreal[9] = FMA(x[9], Drinvpow_2_0, Dreal[9]);
			Dreal[9] = FMA(x[0], Drinvpow_1_1, Dreal[9]);
			Dreal[19] = FMA(x[19], Drinvpow_3_0, Dreal[19]);
			Dreal[19] = FMA(T(3.0000000000000000e+00), x[3]*Drinvpow_2_1, Dreal[19]);
			Dreal[34] = FMA(x[34], Drinvpow_4_0, Dreal[34]);
			Dreal[34] = FMA(T(6.0000000000000000e+00), x[9]*Drinvpow_3_1, Dreal[34]);
			Dreal[34] = FMA(T(3.0000000000000000e+00), x[0]*Drinvpow_2_2, Dreal[34]);
			Dreal[55] = FMA(x[55], Drinvpow_5_0, Dreal[55]);
			Dreal[55] = FMA(T(1.0000000000000000e+01), x[19]*Drinvpow_4_1, Dreal[55]);
			Dreal[55] = FMA(T(1.5000000000000000e+01), x[3]*Drinvpow_3_2, Dreal[55]);
			Dreal[83] = FMA(x[83], Drinvpow_6_0, Dreal[83]);
			Dreal[83] = FMA(T(1.5000000000000000e+01), x[34]*Drinvpow_5_1, Dreal[83]);
			Dreal[83] = FMA(T(4.5000000000000000e+01), x[9]*Drinvpow_4_2, Dreal[83]);
			Dreal[83] = FMA(T(1.5000000000000000e+01), x[0]*Drinvpow_3_3, Dreal[83]);
			Dreal[119] = FMA(x[119], Drinvpow_7_0, Dreal[119]);
			Dreal[119] = FMA(T(2.1000000000000000e+01), x[55]*Drinvpow_6_1, Dreal[119]);
			Dreal[119] = FMA(T(1.0500000000000000e+02), x[19]*Drinvpow_5_2, Dreal[119]);
			Dreal[119] = FMA(T(1.0500000000000000e+02), x[3]*Drinvpow_4_3, Dreal[119]);
			Dreal[2] = FMA(x[2], Drinvpow_1_0, Dreal[2]);
			Dreal[8] = FMA(x[8], Drinvpow_2_0, Dreal[8]);
			Dreal[18] = FMA(x[18], Drinvpow_3_0, Dreal[18]);
			Dreal[18] = FMA(x[2], Drinvpow_2_1, Dreal[18]);
			Dreal[33] = FMA(x[33], Drinvpow_4_0, Dreal[33]);
			Dreal[33] = FMA(T(3.0000000000000000e+00), x[8]*Drinvpow_3_1, Dreal[33]);
			Dreal[54] = FMA(x[54], Drinvpow_5_0, Dreal[54]);
			Dreal[54] = FMA(T(6.0000000000000000e+00), x[18]*Drinvpow_4_1, Dreal[54]);
			Dreal[54] = FMA(T(3.0000000000000000e+00), x[2]*Drinvpow_3_2, Dreal[54]);
			Dreal[82] = FMA(x[82], Drinvpow_6_0, Dreal[82]);
			Dreal[82] = FMA(T(1.0000000000000000e+01), x[33]*Drinvpow_5_1, Dreal[82]);
			Dreal[82] = FMA(T(1.5000000000000000e+01), x[8]*Drinvpow_4_2, Dreal[82]);
			Dreal[118] = FMA(x[118], Drinvpow_7_0, Dreal[118]);
			Dreal[118] = FMA(T(1.5000000000000000e+01), x[54]*Drinvpow_6_1, Dreal[118]);
			Dreal[118] = FMA(T(4.5000000000000000e+01), x[18]*Drinvpow_5_2, Dreal[118]);
			Dreal[118] = FMA(T(1.5000000000000000e+01), x[2]*Drinvpow_4_3, Dreal[118]);
			Dreal[7] = FMA(x[7], Drinvpow_2_0, Dreal[7]);
			Dreal[7] = FMA(x[0], Drinvpow_1_1, Dreal[7]);
			Dreal[17] = FMA(x[17], Drinvpow_3_0, Dreal[17]);
			Dreal[17] = FMA(x[3], Drinvpow_2_1, Dreal[17]);
			Dreal[32] = FMA(x[32], Drinvpow_4_0, Dreal[32]);
			Dreal[32] = FMA(x[7], Drinvpow_3_1, Dreal[32]);
			Dreal[32] = FMA(x[9], Drinvpow_3_1, Dreal[32]);
			Dreal[32] = FMA(x[0], Drinvpow_2_2, Dreal[32]);
			Dreal[53] = FMA(x[53], Drinvpow_5_0, Dreal[53]);
			Dreal[53] = FMA(T(3.0000000000000000e+00), x[17]*Drinvpow_4_1, Dreal[53]);
			Dreal[53] = FMA(x[19], Drinvpow_4_1, Dreal[53]);
			Dreal[53] = FMA(T(3.0000000000000000e+00), x[3]*Drinvpow_3_2, Dreal[53]);
			Dreal[81] = FMA(x[81], Drinvpow_6_0, Dreal[81]);
			Dreal[81] = FMA(T(6.0000000000000000e+00), x[32]*Drinvpow_5_1, Dreal[81]);
			Dreal[81] = FMA(T(3.0000000000000000e+00), x[7]*Drinvpow_4_2, Dreal[81]);
			Dreal[81] = FMA(x[34], Drinvpow_5_1, Dreal[81]);
			Dreal[81] = FMA(T(6.0000000000000000e+00), x[9]*Drinvpow_4_2, Dreal[81]);
			Dreal[81] = FMA(T(3.0000000000000000e+00), x[0]*Drinvpow_3_3, Dreal[81]);
			Dreal[117] = FMA(x[117], Drinvpow_7_0, Dreal[117]);
			Dreal[117] = FMA(T(1.0000000000000000e+01), x[53]*Drinvpow_6_1, Dreal[117]);
			Dreal[117] = FMA(T(1.5000000000000000e+01), x[17]*Drinvpow_5_2, Dreal[117]);
			Dreal[117] = FMA(x[55], Drinvpow_6_1, Dreal[117]);
			Dreal[117] = FMA(T(1.0000000000000000e+01), x[19]*Drinvpow_5_2, Dreal[117]);
			Dreal[117] = FMA(T(1.5000000000000000e+01), x[3]*Drinvpow_4_3, Dreal[117]);
			Dreal[16] = FMA(x[16], Drinvpow_3_0, Dreal[16]);
			Dreal[16] = FMA(T(3.0000000000000000e+00), x[2]*Drinvpow_2_1, Dreal[16]);
			Dreal[31] = FMA(x[31], Drinvpow_4_0, Dreal[31]);
			Dreal[31] = FMA(T(3.0000000000000000e+00), x[8]*Drinvpow_3_1, Dreal[31]);
			Dreal[52] = FMA(x[52], Drinvpow_5_0, Dreal[52]);
			Dreal[52] = FMA(x[16], Drinvpow_4_1, Dreal[52]);
			Dreal[52] = FMA(T(3.0000000000000000e+00), x[18]*Drinvpow_4_1, Dreal[52]);
			Dreal[52] = FMA(T(3.0000000000000000e+00), x[2]*Drinvpow_3_2, Dreal[52]);
			Dreal[80] = FMA(x[80], Drinvpow_6_0, Dreal[80]);
			Dreal[80] = FMA(T(3.0000000000000000e+00), x[31]*Drinvpow_5_1, Dreal[80]);
			Dreal[80] = FMA(T(3.0000000000000000e+00), x[33]*Drinvpow_5_1, Dreal[80]);
			Dreal[80] = FMA(T(9.0000000000000000e+00), x[8]*Drinvpow_4_2, Dreal[80]);
			Dreal[116] = FMA(x[116], Drinvpow_7_0, Dreal[116]);
			Dreal[116] = FMA(T(6.0000000000000000e+00), x[52]*Drinvpow_6_1, Dreal[116]);
			Dreal[116] = FMA(T(3.0000000000000000e+00), x[16]*Drinvpow_5_2, Dreal[116]);
			Dreal[116] = FMA(T(3.0000000000000000e+00), x[54]*Drinvpow_6_1, Dreal[116]);
			Dreal[116] = FMA(T(1.8000000000000000e+01), x[18]*Drinvpow_5_2, Dreal[116]);
			Dreal[116] = FMA(T(9.0000000000000000e+00), x[2]*Drinvpow_4_3, Dreal[116]);
			Dreal[30] = FMA(x[30], Drinvpow_4_0, Dreal[30]);
			Dreal[30] = FMA(T(6.0000000000000000e+00), x[7]*Drinvpow_3_1, Dreal[30]);
			Dreal[30] = FMA(T(3.0000000000000000e+00), x[0]*Drinvpow_2_2, Dreal[30]);
			Dreal[51] = FMA(x[51], Drinvpow_5_0, Dreal[51]);
			Dreal[51] = FMA(T(6.0000000000000000e+00), x[17]*Drinvpow_4_1, Dreal[51]);
			Dreal[51] = FMA(T(3.0000000000000000e+00), x[3]*Drinvpow_3_2, Dreal[51]);
			Dreal[79] = FMA(x[79], Drinvpow_6_0, Dreal[79]);
			Dreal[79] = FMA(x[30], Drinvpow_5_1, Dreal[79]);
			Dreal[79] = FMA(T(6.0000000000000000e+00), x[32]*Drinvpow_5_1, Dreal[79]);
			Dreal[79] = FMA(T(6.0000000000000000e+00), x[7]*Drinvpow_4_2, Dreal[79]);
			Dreal[79] = FMA(T(3.0000000000000000e+00), x[9]*Drinvpow_4_2, Dreal[79]);
			Dreal[79] = FMA(T(3.0000000000000000e+00), x[0]*Drinvpow_3_3, Dreal[79]);
			Dreal[115] = FMA(x[115], Drinvpow_7_0, Dreal[115]);
			Dreal[115] = FMA(T(3.0000000000000000e+00), x[51]*Drinvpow_6_1, Dreal[115]);
			Dreal[115] = FMA(T(6.0000000000000000e+00), x[53]*Drinvpow_6_1, Dreal[115]);
			Dreal[115] = FMA(T(1.8000000000000000e+01), x[17]*Drinvpow_5_2, Dreal[115]);
			Dreal[115] = FMA(T(3.0000000000000000e+00), x[19]*Drinvpow_5_2, Dreal[115]);
			Dreal[115] = FMA(T(9.0000000000000000e+00), x[3]*Drinvpow_4_3, Dreal[115]);
			Dreal[50] = FMA(x[50], Drinvpow_5_0, Dreal[50]);
			Dreal[50] = FMA(T(1.0000000000000000e+01), x[16]*Drinvpow_4_1, Dreal[50]);
			Dreal[50] = FMA(T(1.5000000000000000e+01), x[2]*Drinvpow_3_2, Dreal[50]);
			Dreal[78] = FMA(x[78], Drinvpow_6_0, Dreal[78]);
			Dreal[78] = FMA(T(1.0000000000000000e+01), x[31]*Drinvpow_5_1, Dreal[78]);
			Dreal[78] = FMA(T(1.5000000000000000e+01), x[8]*Drinvpow_4_2, Dreal[78]);
			Dreal[114] = FMA(x[114], Drinvpow_7_0, Dreal[114]);
			Dreal[114] = FMA(x[50], Drinvpow_6_1, Dreal[114]);
			Dreal[114] = FMA(T(1.0000000000000000e+01), x[52]*Drinvpow_6_1, Dreal[114]);
			Dreal[114] = FMA(T(1.0000000000000000e+01), x[16]*Drinvpow_5_2, Dreal[114]);
			Dreal[114] = FMA(T(1.5000000000000000e+01), x[18]*Drinvpow_5_2, Dreal[114]);
			Dreal[114] = FMA(T(1.5000000000000000e+01), x[2]*Drinvpow_4_3, Dreal[114]);
			Dreal[77] = FMA(x[77], Drinvpow_6_0, Dreal[77]);
			Dreal[77] = FMA(T(1.5000000000000000e+01), x[30]*Drinvpow_5_1, Dreal[77]);
			Dreal[77] = FMA(T(4.5000000000000000e+01), x[7]*Drinvpow_4_2, Dreal[77]);
			Dreal[77] = FMA(T(1.5000000000000000e+01), x[0]*Drinvpow_3_3, Dreal[77]);
			Dreal[113] = FMA(x[113], Drinvpow_7_0, Dreal[113]);
			Dreal[113] = FMA(T(1.5000000000000000e+01), x[51]*Drinvpow_6_1, Dreal[113]);
			Dreal[113] = FMA(T(4.5000000000000000e+01), x[17]*Drinvpow_5_2, Dreal[113]);
			Dreal[113] = FMA(T(1.5000000000000000e+01), x[3]*Drinvpow_4_3, Dreal[113]);
			Dreal[112] = FMA(x[112], Drinvpow_7_0, Dreal[112]);
			Dreal[112] = FMA(T(2.1000000000000000e+01), x[50]*Drinvpow_6_1, Dreal[112]);
			Dreal[112] = FMA(T(1.0500000000000000e+02), x[16]*Drinvpow_5_2, Dreal[112]);
			Dreal[112] = FMA(T(1.0500000000000000e+02), x[2]*Drinvpow_4_3, Dreal[112]);
			Dreal[1] = FMA(x[1], Drinvpow_1_0, Dreal[1]);
			Dreal[6] = FMA(x[6], Drinvpow_2_0, Dreal[6]);
			Dreal[15] = FMA(x[15], Drinvpow_3_0, Dreal[15]);
			Dreal[15] = FMA(x[1], Drinvpow_2_1, Dreal[15]);
			Dreal[29] = FMA(x[29], Drinvpow_4_0, Dreal[29]);
			Dreal[29] = FMA(T(3.0000000000000000e+00), x[6]*Drinvpow_3_1, Dreal[29]);
			Dreal[49] = FMA(x[49], Drinvpow_5_0, Dreal[49]);
			Dreal[49] = FMA(T(6.0000000000000000e+00), x[15]*Drinvpow_4_1, Dreal[49]);
			Dreal[49] = FMA(T(3.0000000000000000e+00), x[1]*Drinvpow_3_2, Dreal[49]);
			Dreal[76] = FMA(x[76], Drinvpow_6_0, Dreal[76]);
			Dreal[76] = FMA(T(1.0000000000000000e+01), x[29]*Drinvpow_5_1, Dreal[76]);
			Dreal[76] = FMA(T(1.5000000000000000e+01), x[6]*Drinvpow_4_2, Dreal[76]);
			Dreal[111] = FMA(x[111], Drinvpow_7_0, Dreal[111]);
			Dreal[111] = FMA(T(1.5000000000000000e+01), x[49]*Drinvpow_6_1, Dreal[111]);
			Dreal[111] = FMA(T(4.5000000000000000e+01), x[15]*Drinvpow_5_2, Dreal[111]);
			Dreal[111] = FMA(T(1.5000000000000000e+01), x[1]*Drinvpow_4_3, Dreal[111]);
			Dreal[5] = FMA(x[5], Drinvpow_2_0, Dreal[5]);
			Dreal[14] = FMA(x[14], Drinvpow_3_0, Dreal[14]);
			Dreal[28] = FMA(x[28], Drinvpow_4_0, Dreal[28]);
			Dreal[28] = FMA(x[5], Drinvpow_3_1, Dreal[28]);
			Dreal[48] = FMA(x[48], Drinvpow_5_0, Dreal[48]);
			Dreal[48] = FMA(T(3.0000000000000000e+00), x[14]*Drinvpow_4_1, Dreal[48]);
			Dreal[75] = FMA(x[75], Drinvpow_6_0, Dreal[75]);
			Dreal[75] = FMA(T(6.0000000000000000e+00), x[28]*Drinvpow_5_1, Dreal[75]);
			Dreal[75] = FMA(T(3.0000000000000000e+00), x[5]*Drinvpow_4_2, Dreal[75]);
			Dreal[110] = FMA(x[110], Drinvpow_7_0, Dreal[110]);
			Dreal[110] = FMA(T(1.0000000000000000e+01), x[48]*Drinvpow_6_1, Dreal[110]);
			Dreal[110] = FMA(T(1.5000000000000000e+01), x[14]*Drinvpow_5_2, Dreal[110]);
			Dreal[13] = FMA(x[13], Drinvpow_3_0, Dreal[13]);
			Dreal[13] = FMA(x[1], Drinvpow_2_1, Dreal[13]);
			Dreal[27] = FMA(x[27], Drinvpow_4_0, Dreal[27]);
			Dreal[27] = FMA(x[6], Drinvpow_3_1, Dreal[27]);
			Dreal[47] = FMA(x[47], Drinvpow_5_0, Dreal[47]);
			Dreal[47] = FMA(x[13], Drinvpow_4_1, Dreal[47]);
			Dreal[47] = FMA(x[15], Drinvpow_4_1, Dreal[47]);
			Dreal[47] = FMA(x[1], Drinvpow_3_2, Dreal[47]);
			Dreal[74] = FMA(x[74], Drinvpow_6_0, Dreal[74]);
			Dreal[74] = FMA(T(3.0000000000000000e+00), x[27]*Drinvpow_5_1, Dreal[74]);
			Dreal[74] = FMA(x[29], Drinvpow_5_1, Dreal[74]);
			Dreal[74] = FMA(T(3.0000000000000000e+00), x[6]*Drinvpow_4_2, Dreal[74]);
			Dreal[109] = FMA(x[109], Drinvpow_7_0, Dreal[109]);
			Dreal[109] = FMA(T(6.0000000000000000e+00), x[47]*Drinvpow_6_1, Dreal[109]);
			Dreal[109] = FMA(T(3.0000000000000000e+00), x[13]*Drinvpow_5_2, Dreal[109]);
			Dreal[109] = FMA(x[49], Drinvpow_6_1, Dreal[109]);
			Dreal[109] = FMA(T(6.0000000000000000e+00), x[15]*Drinvpow_5_2, Dreal[109]);
			Dreal[109] = FMA(T(3.0000000000000000e+00), x[1]*Drinvpow_4_3, Dreal[109]);
			Dreal[26] = FMA(x[26], Drinvpow_4_0, Dreal[26]);
			Dreal[26] = FMA(T(3.0000000000000000e+00), x[5]*Drinvpow_3_1, Dreal[26]);
			Dreal[46] = FMA(x[46], Drinvpow_5_0, Dreal[46]);
			Dreal[46] = FMA(T(3.0000000000000000e+00), x[14]*Drinvpow_4_1, Dreal[46]);
			Dreal[73] = FMA(x[73], Drinvpow_6_0, Dreal[73]);
			Dreal[73] = FMA(x[26], Drinvpow_5_1, Dreal[73]);
			Dreal[73] = FMA(T(3.0000000000000000e+00), x[28]*Drinvpow_5_1, Dreal[73]);
			Dreal[73] = FMA(T(3.0000000000000000e+00), x[5]*Drinvpow_4_2, Dreal[73]);
			Dreal[108] = FMA(x[108], Drinvpow_7_0, Dreal[108]);
			Dreal[108] = FMA(T(3.0000000000000000e+00), x[46]*Drinvpow_6_1, Dreal[108]);
			Dreal[108] = FMA(T(3.0000000000000000e+00), x[48]*Drinvpow_6_1, Dreal[108]);
			Dreal[108] = FMA(T(9.0000000000000000e+00), x[14]*Drinvpow_5_2, Dreal[108]);
			Dreal[45] = FMA(x[45], Drinvpow_5_0, Dreal[45]);
			Dreal[45] = FMA(T(6.0000000000000000e+00), x[13]*Drinvpow_4_1, Dreal[45]);
			Dreal[45] = FMA(T(3.0000000000000000e+00), x[1]*Drinvpow_3_2, Dreal[45]);
			Dreal[72] = FMA(x[72], Drinvpow_6_0, Dreal[72]);
			Dreal[72] = FMA(T(6.0000000000000000e+00), x[27]*Drinvpow_5_1, Dreal[72]);
			Dreal[72] = FMA(T(3.0000000000000000e+00), x[6]*Drinvpow_4_2, Dreal[72]);
			Dreal[107] = FMA(x[107], Drinvpow_7_0, Dreal[107]);
			Dreal[107] = FMA(x[45], Drinvpow_6_1, Dreal[107]);
			Dreal[107] = FMA(T(6.0000000000000000e+00), x[47]*Drinvpow_6_1, Dreal[107]);
			Dreal[107] = FMA(T(6.0000000000000000e+00), x[13]*Drinvpow_5_2, Dreal[107]);
			Dreal[107] = FMA(T(3.0000000000000000e+00), x[15]*Drinvpow_5_2, Dreal[107]);
			Dreal[107] = FMA(T(3.0000000000000000e+00), x[1]*Drinvpow_4_3, Dreal[107]);
			Dreal[71] = FMA(x[71], Drinvpow_6_0, Dreal[71]);
			Dreal[71] = FMA(T(1.0000000000000000e+01), x[26]*Drinvpow_5_1, Dreal[71]);
			Dreal[71] = FMA(T(1.5000000000000000e+01), x[5]*Drinvpow_4_2, Dreal[71]);
			Dreal[106] = FMA(x[106], Drinvpow_7_0, Dreal[106]);
			Dreal[106] = FMA(T(1.0000000000000000e+01), x[46]*Drinvpow_6_1, Dreal[106]);
			Dreal[106] = FMA(T(1.5000000000000000e+01), x[14]*Drinvpow_5_2, Dreal[106]);
			Dreal[105] = FMA(x[105], Drinvpow_7_0, Dreal[105]);
			Dreal[105] = FMA(T(1.5000000000000000e+01), x[45]*Drinvpow_6_1, Dreal[105]);
			Dreal[105] = FMA(T(4.5000000000000000e+01), x[13]*Drinvpow_5_2, Dreal[105]);
			Dreal[105] = FMA(T(1.5000000000000000e+01), x[1]*Drinvpow_4_3, Dreal[105]);
			Dreal[4] = FMA(x[4], Drinvpow_2_0, Dreal[4]);
			Dreal[4] = FMA(x[0], Drinvpow_1_1, Dreal[4]);
			Dreal[12] = FMA(x[12], Drinvpow_3_0, Dreal[12]);
			Dreal[12] = FMA(x[3], Drinvpow_2_1, Dreal[12]);
			Dreal[25] = FMA(x[25], Drinvpow_4_0, Dreal[25]);
			Dreal[25] = FMA(x[4], Drinvpow_3_1, Dreal[25]);
			Dreal[25] = FMA(x[9], Drinvpow_3_1, Dreal[25]);
			Dreal[25] = FMA(x[0], Drinvpow_2_2, Dreal[25]);
			Dreal[44] = FMA(x[44], Drinvpow_5_0, Dreal[44]);
			Dreal[44] = FMA(T(3.0000000000000000e+00), x[12]*Drinvpow_4_1, Dreal[44]);
			Dreal[44] = FMA(x[19], Drinvpow_4_1, Dreal[44]);
			Dreal[44] = FMA(T(3.0000000000000000e+00), x[3]*Drinvpow_3_2, Dreal[44]);
			Dreal[70] = FMA(x[70], Drinvpow_6_0, Dreal[70]);
			Dreal[70] = FMA(T(6.0000000000000000e+00), x[25]*Drinvpow_5_1, Dreal[70]);
			Dreal[70] = FMA(T(3.0000000000000000e+00), x[4]*Drinvpow_4_2, Dreal[70]);
			Dreal[70] = FMA(x[34], Drinvpow_5_1, Dreal[70]);
			Dreal[70] = FMA(T(6.0000000000000000e+00), x[9]*Drinvpow_4_2, Dreal[70]);
			Dreal[70] = FMA(T(3.0000000000000000e+00), x[0]*Drinvpow_3_3, Dreal[70]);
			Dreal[104] = FMA(x[104], Drinvpow_7_0, Dreal[104]);
			Dreal[104] = FMA(T(1.0000000000000000e+01), x[44]*Drinvpow_6_1, Dreal[104]);
			Dreal[104] = FMA(T(1.5000000000000000e+01), x[12]*Drinvpow_5_2, Dreal[104]);
			Dreal[104] = FMA(x[55], Drinvpow_6_1, Dreal[104]);
			Dreal[104] = FMA(T(1.0000000000000000e+01), x[19]*Drinvpow_5_2, Dreal[104]);
			Dreal[104] = FMA(T(1.5000000000000000e+01), x[3]*Drinvpow_4_3, Dreal[104]);
			Dreal[11] = FMA(x[11], Drinvpow_3_0, Dreal[11]);
			Dreal[11] = FMA(x[2], Drinvpow_2_1, Dreal[11]);
			Dreal[24] = FMA(x[24], Drinvpow_4_0, Dreal[24]);
			Dreal[24] = FMA(x[8], Drinvpow_3_1, Dreal[24]);
			Dreal[43] = FMA(x[43], Drinvpow_5_0, Dreal[43]);
			Dreal[43] = FMA(x[11], Drinvpow_4_1, Dreal[43]);
			Dreal[43] = FMA(x[18], Drinvpow_4_1, Dreal[43]);
			Dreal[43] = FMA(x[2], Drinvpow_3_2, Dreal[43]);
			Dreal[69] = FMA(x[69], Drinvpow_6_0, Dreal[69]);
			Dreal[69] = FMA(T(3.0000000000000000e+00), x[24]*Drinvpow_5_1, Dreal[69]);
			Dreal[69] = FMA(x[33], Drinvpow_5_1, Dreal[69]);
			Dreal[69] = FMA(T(3.0000000000000000e+00), x[8]*Drinvpow_4_2, Dreal[69]);
			Dreal[103] = FMA(x[103], Drinvpow_7_0, Dreal[103]);
			Dreal[103] = FMA(T(6.0000000000000000e+00), x[43]*Drinvpow_6_1, Dreal[103]);
			Dreal[103] = FMA(T(3.0000000000000000e+00), x[11]*Drinvpow_5_2, Dreal[103]);
			Dreal[103] = FMA(x[54], Drinvpow_6_1, Dreal[103]);
			Dreal[103] = FMA(T(6.0000000000000000e+00), x[18]*Drinvpow_5_2, Dreal[103]);
			Dreal[103] = FMA(T(3.0000000000000000e+00), x[2]*Drinvpow_4_3, Dreal[103]);
			Dreal[23] = FMA(x[23], Drinvpow_4_0, Dreal[23]);
			Dreal[23] = FMA(x[4], Drinvpow_3_1, Dreal[23]);
			Dreal[23] = FMA(x[7], Drinvpow_3_1, Dreal[23]);
			Dreal[23] = FMA(x[0], Drinvpow_2_2, Dreal[23]);
			Dreal[42] = FMA(x[42], Drinvpow_5_0, Dreal[42]);
			Dreal[42] = FMA(x[12], Drinvpow_4_1, Dreal[42]);
			Dreal[42] = FMA(x[17], Drinvpow_4_1, Dreal[42]);
			Dreal[42] = FMA(x[3], Drinvpow_3_2, Dreal[42]);
			Dreal[68] = FMA(x[68], Drinvpow_6_0, Dreal[68]);
			Dreal[68] = FMA(x[23], Drinvpow_5_1, Dreal[68]);
			Dreal[68] = FMA(x[25], Drinvpow_5_1, Dreal[68]);
			Dreal[68] = FMA(x[4], Drinvpow_4_2, Dreal[68]);
			Dreal[68] = FMA(x[32], Drinvpow_5_1, Dreal[68]);
			Dreal[68] = FMA(x[7], Drinvpow_4_2, Dreal[68]);
			Dreal[68] = FMA(x[9], Drinvpow_4_2, Dreal[68]);
			Dreal[68] = FMA(x[0], Drinvpow_3_3, Dreal[68]);
			Dreal[102] = FMA(x[102], Drinvpow_7_0, Dreal[102]);
			Dreal[102] = FMA(T(3.0000000000000000e+00), x[42]*Drinvpow_6_1, Dreal[102]);
			Dreal[102] = FMA(x[44], Drinvpow_6_1, Dreal[102]);
			Dreal[102] = FMA(T(3.0000000000000000e+00), x[12]*Drinvpow_5_2, Dreal[102]);
			Dreal[102] = FMA(x[53], Drinvpow_6_1, Dreal[102]);
			Dreal[102] = FMA(T(3.0000000000000000e+00), x[17]*Drinvpow_5_2, Dreal[102]);
			Dreal[102] = FMA(x[19], Drinvpow_5_2, Dreal[102]);
			Dreal[102] = FMA(T(3.0000000000000000e+00), x[3]*Drinvpow_4_3, Dreal[102]);
			Dreal[41] = FMA(x[41], Drinvpow_5_0, Dreal[41]);
			Dreal[41] = FMA(T(3.0000000000000000e+00), x[11]*Drinvpow_4_1, Dreal[41]);
			Dreal[41] = FMA(x[16], Drinvpow_4_1, Dreal[41]);
			Dreal[41] = FMA(T(3.0000000000000000e+00), x[2]*Drinvpow_3_2, Dreal[41]);
			Dreal[67] = FMA(x[67], Drinvpow_6_0, Dreal[67]);
			Dreal[67] = FMA(T(3.0000000000000000e+00), x[24]*Drinvpow_5_1, Dreal[67]);
			Dreal[67] = FMA(x[31], Drinvpow_5_1, Dreal[67]);
			Dreal[67] = FMA(T(3.0000000000000000e+00), x[8]*Drinvpow_4_2, Dreal[67]);
			Dreal[101] = FMA(x[101], Drinvpow_7_0, Dreal[101]);
			Dreal[101] = FMA(x[41], Drinvpow_6_1, Dreal[101]);
			Dreal[101] = FMA(T(3.0000000000000000e+00), x[43]*Drinvpow_6_1, Dreal[101]);
			Dreal[101] = FMA(T(3.0000000000000000e+00), x[11]*Drinvpow_5_2, Dreal[101]);
			Dreal[101] = FMA(x[52], Drinvpow_6_1, Dreal[101]);
			Dreal[101] = FMA(x[16], Drinvpow_5_2, Dreal[101]);
			Dreal[101] = FMA(T(3.0000000000000000e+00), x[18]*Drinvpow_5_2, Dreal[101]);
			Dreal[101] = FMA(T(3.0000000000000000e+00), x[2]*Drinvpow_4_3, Dreal[101]);
			Dreal[66] = FMA(x[66], Drinvpow_6_0, Dreal[66]);
			Dreal[66] = FMA(T(6.0000000000000000e+00), x[23]*Drinvpow_5_1, Dreal[66]);
			Dreal[66] = FMA(T(3.0000000000000000e+00), x[4]*Drinvpow_4_2, Dreal[66]);
			Dreal[66] = FMA(x[30], Drinvpow_5_1, Dreal[66]);
			Dreal[66] = FMA(T(6.0000000000000000e+00), x[7]*Drinvpow_4_2, Dreal[66]);
			Dreal[66] = FMA(T(3.0000000000000000e+00), x[0]*Drinvpow_3_3, Dreal[66]);
			Dreal[100] = FMA(x[100], Drinvpow_7_0, Dreal[100]);
			Dreal[100] = FMA(T(6.0000000000000000e+00), x[42]*Drinvpow_6_1, Dreal[100]);
			Dreal[100] = FMA(T(3.0000000000000000e+00), x[12]*Drinvpow_5_2, Dreal[100]);
			Dreal[100] = FMA(x[51], Drinvpow_6_1, Dreal[100]);
			Dreal[100] = FMA(T(6.0000000000000000e+00), x[17]*Drinvpow_5_2, Dreal[100]);
			Dreal[100] = FMA(T(3.0000000000000000e+00), x[3]*Drinvpow_4_3, Dreal[100]);
			Dreal[99] = FMA(x[99], Drinvpow_7_0, Dreal[99]);
			Dreal[99] = FMA(T(1.0000000000000000e+01), x[41]*Drinvpow_6_1, Dreal[99]);
			Dreal[99] = FMA(T(1.5000000000000000e+01), x[11]*Drinvpow_5_2, Dreal[99]);
			Dreal[99] = FMA(x[50], Drinvpow_6_1, Dreal[99]);
			Dreal[99] = FMA(T(1.0000000000000000e+01), x[16]*Drinvpow_5_2, Dreal[99]);
			Dreal[99] = FMA(T(1.5000000000000000e+01), x[2]*Drinvpow_4_3, Dreal[99]);
			Dreal[10] = FMA(x[10], Drinvpow_3_0, Dreal[10]);
			Dreal[10] = FMA(T(3.0000000000000000e+00), x[1]*Drinvpow_2_1, Dreal[10]);
			Dreal[22] = FMA(x[22], Drinvpow_4_0, Dreal[22]);
			Dreal[22] = FMA(T(3.0000000000000000e+00), x[6]*Drinvpow_3_1, Dreal[22]);
			Dreal[40] = FMA(x[40], Drinvpow_5_0, Dreal[40]);
			Dreal[40] = FMA(x[10], Drinvpow_4_1, Dreal[40]);
			Dreal[40] = FMA(T(3.0000000000000000e+00), x[15]*Drinvpow_4_1, Dreal[40]);
			Dreal[40] = FMA(T(3.0000000000000000e+00), x[1]*Drinvpow_3_2, Dreal[40]);
			Dreal[65] = FMA(x[65], Drinvpow_6_0, Dreal[65]);
			Dreal[65] = FMA(T(3.0000000000000000e+00), x[22]*Drinvpow_5_1, Dreal[65]);
			Dreal[65] = FMA(T(3.0000000000000000e+00), x[29]*Drinvpow_5_1, Dreal[65]);
			Dreal[65] = FMA(T(9.0000000000000000e+00), x[6]*Drinvpow_4_2, Dreal[65]);
			Dreal[98] = FMA(x[98], Drinvpow_7_0, Dreal[98]);
			Dreal[98] = FMA(T(6.0000000000000000e+00), x[40]*Drinvpow_6_1, Dreal[98]);
			Dreal[98] = FMA(T(3.0000000000000000e+00), x[10]*Drinvpow_5_2, Dreal[98]);
			Dreal[98] = FMA(T(3.0000000000000000e+00), x[49]*Drinvpow_6_1, Dreal[98]);
			Dreal[98] = FMA(T(1.8000000000000000e+01), x[15]*Drinvpow_5_2, Dreal[98]);
			Dreal[98] = FMA(T(9.0000000000000000e+00), x[1]*Drinvpow_4_3, Dreal[98]);
			Dreal[21] = FMA(x[21], Drinvpow_4_0, Dreal[21]);
			Dreal[21] = FMA(T(3.0000000000000000e+00), x[5]*Drinvpow_3_1, Dreal[21]);
			Dreal[39] = FMA(x[39], Drinvpow_5_0, Dreal[39]);
			Dreal[39] = FMA(T(3.0000000000000000e+00), x[14]*Drinvpow_4_1, Dreal[39]);
			Dreal[64] = FMA(x[64], Drinvpow_6_0, Dreal[64]);
			Dreal[64] = FMA(x[21], Drinvpow_5_1, Dreal[64]);
			Dreal[64] = FMA(T(3.0000000000000000e+00), x[28]*Drinvpow_5_1, Dreal[64]);
			Dreal[64] = FMA(T(3.0000000000000000e+00), x[5]*Drinvpow_4_2, Dreal[64]);
			Dreal[97] = FMA(x[97], Drinvpow_7_0, Dreal[97]);
			Dreal[97] = FMA(T(3.0000000000000000e+00), x[39]*Drinvpow_6_1, Dreal[97]);
			Dreal[97] = FMA(T(3.0000000000000000e+00), x[48]*Drinvpow_6_1, Dreal[97]);
			Dreal[97] = FMA(T(9.0000000000000000e+00), x[14]*Drinvpow_5_2, Dreal[97]);
			Dreal[38] = FMA(x[38], Drinvpow_5_0, Dreal[38]);
			Dreal[38] = FMA(x[10], Drinvpow_4_1, Dreal[38]);
			Dreal[38] = FMA(T(3.0000000000000000e+00), x[13]*Drinvpow_4_1, Dreal[38]);
			Dreal[38] = FMA(T(3.0000000000000000e+00), x[1]*Drinvpow_3_2, Dreal[38]);
			Dreal[63] = FMA(x[63], Drinvpow_6_0, Dreal[63]);
			Dreal[63] = FMA(x[22], Drinvpow_5_1, Dreal[63]);
			Dreal[63] = FMA(T(3.0000000000000000e+00), x[27]*Drinvpow_5_1, Dreal[63]);
			Dreal[63] = FMA(T(3.0000000000000000e+00), x[6]*Drinvpow_4_2, Dreal[63]);
			Dreal[96] = FMA(x[96], Drinvpow_7_0, Dreal[96]);
			Dreal[96] = FMA(x[38], Drinvpow_6_1, Dreal[96]);
			Dreal[96] = FMA(x[40], Drinvpow_6_1, Dreal[96]);
			Dreal[96] = FMA(x[10], Drinvpow_5_2, Dreal[96]);
			Dreal[96] = FMA(T(3.0000000000000000e+00), x[47]*Drinvpow_6_1, Dreal[96]);
			Dreal[96] = FMA(T(3.0000000000000000e+00), x[13]*Drinvpow_5_2, Dreal[96]);
			Dreal[96] = FMA(T(3.0000000000000000e+00), x[15]*Drinvpow_5_2, Dreal[96]);
			Dreal[96] = FMA(T(3.0000000000000000e+00), x[1]*Drinvpow_4_3, Dreal[96]);
			Dreal[62] = FMA(x[62], Drinvpow_6_0, Dreal[62]);
			Dreal[62] = FMA(T(3.0000000000000000e+00), x[21]*Drinvpow_5_1, Dreal[62]);
			Dreal[62] = FMA(T(3.0000000000000000e+00), x[26]*Drinvpow_5_1, Dreal[62]);
			Dreal[62] = FMA(T(9.0000000000000000e+00), x[5]*Drinvpow_4_2, Dreal[62]);
			Dreal[95] = FMA(x[95], Drinvpow_7_0, Dreal[95]);
			Dreal[95] = FMA(T(3.0000000000000000e+00), x[39]*Drinvpow_6_1, Dreal[95]);
			Dreal[95] = FMA(T(3.0000000000000000e+00), x[46]*Drinvpow_6_1, Dreal[95]);
			Dreal[95] = FMA(T(9.0000000000000000e+00), x[14]*Drinvpow_5_2, Dreal[95]);
			Dreal[94] = FMA(x[94], Drinvpow_7_0, Dreal[94]);
			Dreal[94] = FMA(T(6.0000000000000000e+00), x[38]*Drinvpow_6_1, Dreal[94]);
			Dreal[94] = FMA(T(3.0000000000000000e+00), x[10]*Drinvpow_5_2, Dreal[94]);
			Dreal[94] = FMA(T(3.0000000000000000e+00), x[45]*Drinvpow_6_1, Dreal[94]);
			Dreal[94] = FMA(T(1.8000000000000000e+01), x[13]*Drinvpow_5_2, Dreal[94]);
			Dreal[94] = FMA(T(9.0000000000000000e+00), x[1]*Drinvpow_4_3, Dreal[94]);
			Dreal[20] = FMA(x[20], Drinvpow_4_0, Dreal[20]);
			Dreal[20] = FMA(T(6.0000000000000000e+00), x[4]*Drinvpow_3_1, Dreal[20]);
			Dreal[20] = FMA(T(3.0000000000000000e+00), x[0]*Drinvpow_2_2, Dreal[20]);
			Dreal[37] = FMA(x[37], Drinvpow_5_0, Dreal[37]);
			Dreal[37] = FMA(T(6.0000000000000000e+00), x[12]*Drinvpow_4_1, Dreal[37]);
			Dreal[37] = FMA(T(3.0000000000000000e+00), x[3]*Drinvpow_3_2, Dreal[37]);
			Dreal[61] = FMA(x[61], Drinvpow_6_0, Dreal[61]);
			Dreal[61] = FMA(x[20], Drinvpow_5_1, Dreal[61]);
			Dreal[61] = FMA(T(6.0000000000000000e+00), x[25]*Drinvpow_5_1, Dreal[61]);
			Dreal[61] = FMA(T(6.0000000000000000e+00), x[4]*Drinvpow_4_2, Dreal[61]);
			Dreal[61] = FMA(T(3.0000000000000000e+00), x[9]*Drinvpow_4_2, Dreal[61]);
			Dreal[61] = FMA(T(3.0000000000000000e+00), x[0]*Drinvpow_3_3, Dreal[61]);
			Dreal[93] = FMA(x[93], Drinvpow_7_0, Dreal[93]);
			Dreal[93] = FMA(T(3.0000000000000000e+00), x[37]*Drinvpow_6_1, Dreal[93]);
			Dreal[93] = FMA(T(6.0000000000000000e+00), x[44]*Drinvpow_6_1, Dreal[93]);
			Dreal[93] = FMA(T(1.8000000000000000e+01), x[12]*Drinvpow_5_2, Dreal[93]);
			Dreal[93] = FMA(T(3.0000000000000000e+00), x[19]*Drinvpow_5_2, Dreal[93]);
			Dreal[93] = FMA(T(9.0000000000000000e+00), x[3]*Drinvpow_4_3, Dreal[93]);
			Dreal[36] = FMA(x[36], Drinvpow_5_0, Dreal[36]);
			Dreal[36] = FMA(T(6.0000000000000000e+00), x[11]*Drinvpow_4_1, Dreal[36]);
			Dreal[36] = FMA(T(3.0000000000000000e+00), x[2]*Drinvpow_3_2, Dreal[36]);
			Dreal[60] = FMA(x[60], Drinvpow_6_0, Dreal[60]);
			Dreal[60] = FMA(T(6.0000000000000000e+00), x[24]*Drinvpow_5_1, Dreal[60]);
			Dreal[60] = FMA(T(3.0000000000000000e+00), x[8]*Drinvpow_4_2, Dreal[60]);
			Dreal[92] = FMA(x[92], Drinvpow_7_0, Dreal[92]);
			Dreal[92] = FMA(x[36], Drinvpow_6_1, Dreal[92]);
			Dreal[92] = FMA(T(6.0000000000000000e+00), x[43]*Drinvpow_6_1, Dreal[92]);
			Dreal[92] = FMA(T(6.0000000000000000e+00), x[11]*Drinvpow_5_2, Dreal[92]);
			Dreal[92] = FMA(T(3.0000000000000000e+00), x[18]*Drinvpow_5_2, Dreal[92]);
			Dreal[92] = FMA(T(3.0000000000000000e+00), x[2]*Drinvpow_4_3, Dreal[92]);
			Dreal[59] = FMA(x[59], Drinvpow_6_0, Dreal[59]);
			Dreal[59] = FMA(x[20], Drinvpow_5_1, Dreal[59]);
			Dreal[59] = FMA(T(6.0000000000000000e+00), x[23]*Drinvpow_5_1, Dreal[59]);
			Dreal[59] = FMA(T(6.0000000000000000e+00), x[4]*Drinvpow_4_2, Dreal[59]);
			Dreal[59] = FMA(T(3.0000000000000000e+00), x[7]*Drinvpow_4_2, Dreal[59]);
			Dreal[59] = FMA(T(3.0000000000000000e+00), x[0]*Drinvpow_3_3, Dreal[59]);
			Dreal[91] = FMA(x[91], Drinvpow_7_0, Dreal[91]);
			Dreal[91] = FMA(x[37], Drinvpow_6_1, Dreal[91]);
			Dreal[91] = FMA(T(6.0000000000000000e+00), x[42]*Drinvpow_6_1, Dreal[91]);
			Dreal[91] = FMA(T(6.0000000000000000e+00), x[12]*Drinvpow_5_2, Dreal[91]);
			Dreal[91] = FMA(T(3.0000000000000000e+00), x[17]*Drinvpow_5_2, Dreal[91]);
			Dreal[91] = FMA(T(3.0000000000000000e+00), x[3]*Drinvpow_4_3, Dreal[91]);
			Dreal[90] = FMA(x[90], Drinvpow_7_0, Dreal[90]);
			Dreal[90] = FMA(T(3.0000000000000000e+00), x[36]*Drinvpow_6_1, Dreal[90]);
			Dreal[90] = FMA(T(6.0000000000000000e+00), x[41]*Drinvpow_6_1, Dreal[90]);
			Dreal[90] = FMA(T(1.8000000000000000e+01), x[11]*Drinvpow_5_2, Dreal[90]);
			Dreal[90] = FMA(T(3.0000000000000000e+00), x[16]*Drinvpow_5_2, Dreal[90]);
			Dreal[90] = FMA(T(9.0000000000000000e+00), x[2]*Drinvpow_4_3, Dreal[90]);
			Dreal[35] = FMA(x[35], Drinvpow_5_0, Dreal[35]);
			Dreal[35] = FMA(T(1.0000000000000000e+01), x[10]*Drinvpow_4_1, Dreal[35]);
			Dreal[35] = FMA(T(1.5000000000000000e+01), x[1]*Drinvpow_3_2, Dreal[35]);
			Dreal[58] = FMA(x[58], Drinvpow_6_0, Dreal[58]);
			Dreal[58] = FMA(T(1.0000000000000000e+01), x[22]*Drinvpow_5_1, Dreal[58]);
			Dreal[58] = FMA(T(1.5000000000000000e+01), x[6]*Drinvpow_4_2, Dreal[58]);
			Dreal[89] = FMA(x[89], Drinvpow_7_0, Dreal[89]);
			Dreal[89] = FMA(x[35], Drinvpow_6_1, Dreal[89]);
			Dreal[89] = FMA(T(1.0000000000000000e+01), x[40]*Drinvpow_6_1, Dreal[89]);
			Dreal[89] = FMA(T(1.0000000000000000e+01), x[10]*Drinvpow_5_2, Dreal[89]);
			Dreal[89] = FMA(T(1.5000000000000000e+01), x[15]*Drinvpow_5_2, Dreal[89]);
			Dreal[89] = FMA(T(1.5000000000000000e+01), x[1]*Drinvpow_4_3, Dreal[89]);
			Dreal[57] = FMA(x[57], Drinvpow_6_0, Dreal[57]);
			Dreal[57] = FMA(T(1.0000000000000000e+01), x[21]*Drinvpow_5_1, Dreal[57]);
			Dreal[57] = FMA(T(1.5000000000000000e+01), x[5]*Drinvpow_4_2, Dreal[57]);
			Dreal[88] = FMA(x[88], Drinvpow_7_0, Dreal[88]);
			Dreal[88] = FMA(T(1.0000000000000000e+01), x[39]*Drinvpow_6_1, Dreal[88]);
			Dreal[88] = FMA(T(1.5000000000000000e+01), x[14]*Drinvpow_5_2, Dreal[88]);
			Dreal[87] = FMA(x[87], Drinvpow_7_0, Dreal[87]);
			Dreal[87] = FMA(x[35], Drinvpow_6_1, Dreal[87]);
			Dreal[87] = FMA(T(1.0000000000000000e+01), x[38]*Drinvpow_6_1, Dreal[87]);
			Dreal[87] = FMA(T(1.0000000000000000e+01), x[10]*Drinvpow_5_2, Dreal[87]);
			Dreal[87] = FMA(T(1.5000000000000000e+01), x[13]*Drinvpow_5_2, Dreal[87]);
			Dreal[87] = FMA(T(1.5000000000000000e+01), x[1]*Drinvpow_4_3, Dreal[87]);
			Dreal[56] = FMA(x[56], Drinvpow_6_0, Dreal[56]);
			Dreal[56] = FMA(T(1.5000000000000000e+01), x[20]*Drinvpow_5_1, Dreal[56]);
			Dreal[56] = FMA(T(4.5000000000000000e+01), x[4]*Drinvpow_4_2, Dreal[56]);
			Dreal[56] = FMA(T(1.5000000000000000e+01), x[0]*Drinvpow_3_3, Dreal[56]);
			Dreal[86] = FMA(x[86], Drinvpow_7_0, Dreal[86]);
			Dreal[86] = FMA(T(1.5000000000000000e+01), x[37]*Drinvpow_6_1, Dreal[86]);
			Dreal[86] = FMA(T(4.5000000000000000e+01), x[12]*Drinvpow_5_2, Dreal[86]);
			Dreal[86] = FMA(T(1.5000000000000000e+01), x[3]*Drinvpow_4_3, Dreal[86]);
			Dreal[85] = FMA(x[85], Drinvpow_7_0, Dreal[85]);
			Dreal[85] = FMA(T(1.5000000000000000e+01), x[36]*Drinvpow_6_1, Dreal[85]);
			Dreal[85] = FMA(T(4.5000000000000000e+01), x[11]*Drinvpow_5_2, Dreal[85]);
			Dreal[85] = FMA(T(1.5000000000000000e+01), x[2]*Drinvpow_4_3, Dreal[85]);
			Dreal[84] = FMA(x[84], Drinvpow_7_0, Dreal[84]);
			Dreal[84] = FMA(T(2.1000000000000000e+01), x[35]*Drinvpow_6_1, Dreal[84]);
			Dreal[84] = FMA(T(1.0500000000000000e+02), x[10]*Drinvpow_5_2, Dreal[84]);
			Dreal[84] = FMA(T(1.0500000000000000e+02), x[1]*Drinvpow_4_3, Dreal[84]);
		}
	}
	const auto foursz = econst.nfour();
	for (int i = 0; i < foursz; i++) {
		const auto &h = econst.four_index(i);
		const auto& D0 = econst.four_expansion(i);
		const T hdotx = FMA(h[0], X[0], FMA(h[1], X[1], h[2] * X[2]));
		T cn, sn;
		SINCOS(T(2.0 * M_PI * SCALE_FACTOR_INV1) * hdotx, &sn, &cn);
		Dfour[0] = FMA(cn, D0[0], Dfour[0]);
		Dfour[1] = FMA(sn, D0[1], Dfour[1]);
		Dfour[2] = FMA(sn, D0[2], Dfour[2]);
		Dfour[3] = FMA(cn, D0[3], Dfour[3]);
		Dfour[4] = FMA(cn, D0[4], Dfour[4]);
		Dfour[5] = FMA(cn, D0[5], Dfour[5]);
		Dfour[6] = FMA(sn, D0[6], Dfour[6]);
		Dfour[7] = FMA(sn, D0[7], Dfour[7]);
		Dfour[8] = FMA(sn, D0[8], Dfour[8]);
		Dfour[9] = FMA(sn, D0[9], Dfour[9]);
		Dfour[10] = FMA(cn, D0[10], Dfour[10]);
		Dfour[11] = FMA(cn, D0[11], Dfour[11]);
		Dfour[12] = FMA(cn, D0[12], Dfour[12]);
		Dfour[13] = FMA(cn, D0[13], Dfour[13]);
		Dfour[14] = FMA(cn, D0[14], Dfour[14]);
		Dfour[15] = FMA(sn, D0[15], Dfour[15]);
		Dfour[16] = FMA(sn, D0[16], Dfour[16]);
		Dfour[17] = FMA(sn, D0[17], Dfour[17]);
		Dfour[18] = FMA(sn, D0[18], Dfour[18]);
		Dfour[19] = FMA(sn, D0[19], Dfour[19]);
		Dfour[20] = FMA(sn, D0[20], Dfour[20]);
		Dfour[21] = FMA(cn, D0[21], Dfour[21]);
		Dfour[22] = FMA(cn, D0[22], Dfour[22]);
		Dfour[23] = FMA(cn, D0[23], Dfour[23]);
		Dfour[24] = FMA(cn, D0[24], Dfour[24]);
		Dfour[25] = FMA(cn, D0[25], Dfour[25]);
		Dfour[26] = FMA(cn, D0[26], Dfour[26]);
		Dfour[27] = FMA(cn, D0[27], Dfour[27]);
		Dfour[28] = FMA(sn, D0[28], Dfour[28]);
		Dfour[29] = FMA(sn, D0[29], Dfour[29]);
		Dfour[30] = FMA(sn, D0[30], Dfour[30]);
		Dfour[31] = FMA(sn, D0[31], Dfour[31]);
		Dfour[32] = FMA(sn, D0[32], Dfour[32]);
		Dfour[33] = FMA(sn, D0[33], Dfour[33]);
		Dfour[34] = FMA(sn, D0[34], Dfour[34]);
		Dfour[35] = FMA(sn, D0[35], Dfour[35]);
		Dfour[36] = FMA(sn, D0[36], Dfour[36]);
		Dfour[37] = FMA(cn, D0[37], Dfour[37]);
		Dfour[38] = FMA(cn, D0[38], Dfour[38]);
		Dfour[39] = FMA(sn, D0[39], Dfour[39]);
		Dfour[40] = FMA(sn, D0[40], Dfour[40]);
		Dfour[41] = FMA(sn, D0[41], Dfour[41]);
		Dfour[42] = FMA(cn, D0[42], Dfour[42]);
		Dfour[43] = FMA(cn, D0[43], Dfour[43]);
		Dfour[44] = FMA(cn, D0[44], Dfour[44]);
		Dfour[45] = FMA(cn, D0[45], Dfour[45]);
		Dfour[46] = FMA(sn, D0[46], Dfour[46]);
		Dfour[47] = FMA(sn, D0[47], Dfour[47]);
		Dfour[48] = FMA(sn, D0[48], Dfour[48]);
		Dfour[49] = FMA(sn, D0[49], Dfour[49]);
		Dfour[50] = FMA(sn, D0[50], Dfour[50]);
		Dfour[51] = FMA(cn, D0[51], Dfour[51]);
		Dfour[52] = FMA(cn, D0[52], Dfour[52]);
		Dfour[53] = FMA(cn, D0[53], Dfour[53]);
		Dfour[54] = FMA(cn, D0[54], Dfour[54]);
		Dfour[55] = FMA(cn, D0[55], Dfour[55]);
		Dfour[56] = FMA(cn, D0[56], Dfour[56]);
		Dfour[57] = FMA(sn, D0[57], Dfour[57]);
		Dfour[58] = FMA(sn, D0[58], Dfour[58]);
		Dfour[59] = FMA(sn, D0[59], Dfour[59]);
		Dfour[60] = FMA(sn, D0[60], Dfour[60]);
		Dfour[61] = FMA(sn, D0[61], Dfour[61]);
		Dfour[62] = FMA(sn, D0[62], Dfour[62]);
		Dfour[63] = FMA(sn, D0[63], Dfour[63]);
		Dfour[64] = FMA(cn, D0[64], Dfour[64]);
	}
	T Dreal_2_1_000 = Dreal[9];
	T Dreal_3_1_001 = Dreal[19];
	T Dreal_4_1_002 = Dreal[34];
	T Dreal_5_1_003 = Dreal[55];
	T Dreal_6_1_004 = Dreal[83];
	T Dreal_7_1_005 = Dreal[119];
	T Dreal_3_1_010 = Dreal[18];
	T Dreal_4_1_011 = Dreal[33];
	T Dreal_5_1_012 = Dreal[54];
	T Dreal_6_1_013 = Dreal[82];
	T Dreal_7_1_014 = Dreal[118];
	T Dreal_4_1_020 = Dreal[32];
	T Dreal_5_1_021 = Dreal[53];
	T Dreal_6_1_022 = Dreal[81];
	T Dreal_7_1_023 = Dreal[117];
	T Dreal_5_1_030 = Dreal[52];
	T Dreal_6_1_031 = Dreal[80];
	T Dreal_7_1_032 = Dreal[116];
	T Dreal_6_1_040 = Dreal[79];
	T Dreal_7_1_041 = Dreal[115];
	T Dreal_7_1_050 = Dreal[114];
	T Dreal_3_1_100 = Dreal[15];
	T Dreal_4_1_101 = Dreal[29];
	T Dreal_5_1_102 = Dreal[49];
	T Dreal_6_1_103 = Dreal[76];
	T Dreal_7_1_104 = Dreal[111];
	T Dreal_4_1_110 = Dreal[28];
	T Dreal_5_1_111 = Dreal[48];
	T Dreal_6_1_112 = Dreal[75];
	T Dreal_7_1_113 = Dreal[110];
	T Dreal_5_1_120 = Dreal[47];
	T Dreal_6_1_121 = Dreal[74];
	T Dreal_7_1_122 = Dreal[109];
	T Dreal_6_1_130 = Dreal[73];
	T Dreal_7_1_131 = Dreal[108];
	T Dreal_7_1_140 = Dreal[107];
	T Dreal_4_1_200 = Dreal[25];
	T Dreal_5_1_201 = Dreal[44];
	T Dreal_6_1_202 = Dreal[70];
	T Dreal_7_1_203 = Dreal[104];
	T Dreal_5_1_210 = Dreal[43];
	T Dreal_6_1_211 = Dreal[69];
	T Dreal_7_1_212 = Dreal[103];
	T Dreal_6_1_220 = Dreal[68];
	T Dreal_7_1_221 = Dreal[102];
	T Dreal_7_1_230 = Dreal[101];
	T Dreal_5_1_300 = Dreal[40];
	T Dreal_6_1_301 = Dreal[65];
	T Dreal_7_1_302 = Dreal[98];
	T Dreal_6_1_310 = Dreal[64];
	T Dreal_7_1_311 = Dreal[97];
	T Dreal_7_1_320 = Dreal[96];
	T Dreal_6_1_400 = Dreal[61];
	T Dreal_7_1_401 = Dreal[93];
	T Dreal_7_1_410 = Dreal[92];
	T Dreal_7_1_500 = Dreal[89];
	T Dreal_4_2_000 = Dreal[34];
	T Dreal_5_2_001 = Dreal[55];
	T Dreal_6_2_002 = Dreal[83];
	T Dreal_7_2_003 = Dreal[119];
	T Dreal_5_2_010 = Dreal[54];
	T Dreal_6_2_011 = Dreal[82];
	T Dreal_7_2_012 = Dreal[118];
	T Dreal_6_2_020 = Dreal[81];
	T Dreal_7_2_021 = Dreal[117];
	T Dreal_7_2_030 = Dreal[116];
	T Dreal_5_2_100 = Dreal[49];
	T Dreal_6_2_101 = Dreal[76];
	T Dreal_7_2_102 = Dreal[111];
	T Dreal_6_2_110 = Dreal[75];
	T Dreal_7_2_111 = Dreal[110];
	T Dreal_7_2_120 = Dreal[109];
	T Dreal_6_2_200 = Dreal[70];
	T Dreal_7_2_201 = Dreal[104];
	T Dreal_7_2_210 = Dreal[103];
	T Dreal_7_2_300 = Dreal[98];
	T Dreal_6_3_000 = Dreal[83];
	T Dreal_7_3_001 = Dreal[119];
	T Dreal_7_3_010 = Dreal[118];
	T Dreal_7_3_100 = Dreal[111];
	Dreal_2_1_000 += Dreal[7];
	Dreal_6_2_002 = FMA(T(2.0000000000000000e+00), Dreal[70], Dreal_6_2_002);
	Dreal_2_1_000 += Dreal[4];
	Dreal_6_2_002 = FMA(T(2.0000000000000000e+00), Dreal[68], Dreal_6_2_002);
	Dreal_3_1_001 += Dreal[17];
	Dreal_6_2_002 += Dreal[61];
	Dreal_3_1_001 += Dreal[12];
	Dreal_7_2_003 = FMA(T(2.0000000000000000e+00), Dreal[117], Dreal_7_2_003);
	Dreal_4_1_002 += Dreal[32];
	Dreal_7_2_003 += Dreal[115];
	Dreal_4_1_002 += Dreal[25];
	Dreal_7_2_003 = FMA(T(2.0000000000000000e+00), Dreal[104], Dreal_7_2_003);
	Dreal_5_1_003 += Dreal[53];
	Dreal_7_2_003 = FMA(T(2.0000000000000000e+00), Dreal[102], Dreal_7_2_003);
	Dreal_5_1_003 += Dreal[44];
	Dreal_7_2_003 += Dreal[93];
	Dreal_6_1_004 += Dreal[81];
	Dreal_5_2_010 = FMA(T(2.0000000000000000e+00), Dreal[52], Dreal_5_2_010);
	Dreal_6_1_004 += Dreal[70];
	Dreal_5_2_010 += Dreal[50];
	Dreal_7_1_005 += Dreal[117];
	Dreal_5_2_010 = FMA(T(2.0000000000000000e+00), Dreal[43], Dreal_5_2_010);
	Dreal_7_1_005 += Dreal[104];
	Dreal_5_2_010 = FMA(T(2.0000000000000000e+00), Dreal[41], Dreal_5_2_010);
	Dreal_3_1_010 += Dreal[16];
	Dreal_5_2_010 += Dreal[36];
	Dreal_3_1_010 += Dreal[11];
	Dreal_6_2_011 = FMA(T(2.0000000000000000e+00), Dreal[80], Dreal_6_2_011);
	Dreal_4_1_011 += Dreal[31];
	Dreal_6_2_011 += Dreal[78];
	Dreal_4_1_011 += Dreal[24];
	Dreal_6_2_011 = FMA(T(2.0000000000000000e+00), Dreal[69], Dreal_6_2_011);
	Dreal_5_1_012 += Dreal[52];
	Dreal_6_2_011 = FMA(T(2.0000000000000000e+00), Dreal[67], Dreal_6_2_011);
	Dreal_5_1_012 += Dreal[43];
	Dreal_6_2_011 += Dreal[60];
	Dreal_6_1_013 += Dreal[80];
	Dreal_7_2_012 = FMA(T(2.0000000000000000e+00), Dreal[116], Dreal_7_2_012);
	Dreal_6_1_013 += Dreal[69];
	Dreal_7_2_012 += Dreal[114];
	Dreal_7_1_014 += Dreal[116];
	Dreal_7_2_012 = FMA(T(2.0000000000000000e+00), Dreal[103], Dreal_7_2_012);
	Dreal_7_1_014 += Dreal[103];
	Dreal_7_2_012 = FMA(T(2.0000000000000000e+00), Dreal[101], Dreal_7_2_012);
	Dreal_4_1_020 += Dreal[30];
	Dreal_7_2_012 += Dreal[92];
	Dreal_4_1_020 += Dreal[23];
	Dreal_6_2_020 = FMA(T(2.0000000000000000e+00), Dreal[79], Dreal_6_2_020);
	Dreal_5_1_021 += Dreal[51];
	Dreal_6_2_020 += Dreal[77];
	Dreal_5_1_021 += Dreal[42];
	Dreal_6_2_020 = FMA(T(2.0000000000000000e+00), Dreal[68], Dreal_6_2_020);
	Dreal_6_1_022 += Dreal[79];
	Dreal_6_2_020 = FMA(T(2.0000000000000000e+00), Dreal[66], Dreal_6_2_020);
	Dreal_6_1_022 += Dreal[68];
	Dreal_6_2_020 += Dreal[59];
	Dreal_7_1_023 += Dreal[115];
	Dreal_7_2_021 = FMA(T(2.0000000000000000e+00), Dreal[115], Dreal_7_2_021);
	Dreal_7_1_023 += Dreal[102];
	Dreal_7_2_021 += Dreal[113];
	Dreal_5_1_030 += Dreal[50];
	Dreal_7_2_021 = FMA(T(2.0000000000000000e+00), Dreal[102], Dreal_7_2_021);
	Dreal_5_1_030 += Dreal[41];
	Dreal_7_2_021 = FMA(T(2.0000000000000000e+00), Dreal[100], Dreal_7_2_021);
	Dreal_6_1_031 += Dreal[78];
	Dreal_7_2_021 += Dreal[91];
	Dreal_6_1_031 += Dreal[67];
	Dreal_7_2_030 = FMA(T(2.0000000000000000e+00), Dreal[114], Dreal_7_2_030);
	Dreal_7_1_032 += Dreal[114];
	Dreal_7_2_030 += Dreal[112];
	Dreal_7_1_032 += Dreal[101];
	Dreal_7_2_030 = FMA(T(2.0000000000000000e+00), Dreal[101], Dreal_7_2_030);
	Dreal_6_1_040 += Dreal[77];
	Dreal_7_2_030 = FMA(T(2.0000000000000000e+00), Dreal[99], Dreal_7_2_030);
	Dreal_6_1_040 += Dreal[66];
	Dreal_7_2_030 += Dreal[90];
	Dreal_7_1_041 += Dreal[113];
	Dreal_5_2_100 = FMA(T(2.0000000000000000e+00), Dreal[47], Dreal_5_2_100);
	Dreal_7_1_041 += Dreal[100];
	Dreal_5_2_100 += Dreal[45];
	Dreal_7_1_050 += Dreal[112];
	Dreal_5_2_100 = FMA(T(2.0000000000000000e+00), Dreal[40], Dreal_5_2_100);
	Dreal_7_1_050 += Dreal[99];
	Dreal_5_2_100 = FMA(T(2.0000000000000000e+00), Dreal[38], Dreal_5_2_100);
	Dreal_3_1_100 += Dreal[13];
	Dreal_5_2_100 += Dreal[35];
	Dreal_3_1_100 += Dreal[10];
	Dreal_6_2_101 = FMA(T(2.0000000000000000e+00), Dreal[74], Dreal_6_2_101);
	Dreal_4_1_101 += Dreal[27];
	Dreal_6_2_101 += Dreal[72];
	Dreal_4_1_101 += Dreal[22];
	Dreal_6_2_101 = FMA(T(2.0000000000000000e+00), Dreal[65], Dreal_6_2_101);
	Dreal_5_1_102 += Dreal[47];
	Dreal_6_2_101 = FMA(T(2.0000000000000000e+00), Dreal[63], Dreal_6_2_101);
	Dreal_5_1_102 += Dreal[40];
	Dreal_6_2_101 += Dreal[58];
	Dreal_6_1_103 += Dreal[74];
	Dreal_7_2_102 = FMA(T(2.0000000000000000e+00), Dreal[109], Dreal_7_2_102);
	Dreal_6_1_103 += Dreal[65];
	Dreal_7_2_102 += Dreal[107];
	Dreal_7_1_104 += Dreal[109];
	Dreal_7_2_102 = FMA(T(2.0000000000000000e+00), Dreal[98], Dreal_7_2_102);
	Dreal_7_1_104 += Dreal[98];
	Dreal_7_2_102 = FMA(T(2.0000000000000000e+00), Dreal[96], Dreal_7_2_102);
	Dreal_4_1_110 += Dreal[26];
	Dreal_7_2_102 += Dreal[89];
	Dreal_4_1_110 += Dreal[21];
	Dreal_6_2_110 = FMA(T(2.0000000000000000e+00), Dreal[73], Dreal_6_2_110);
	Dreal_5_1_111 += Dreal[46];
	Dreal_6_2_110 += Dreal[71];
	Dreal_5_1_111 += Dreal[39];
	Dreal_6_2_110 = FMA(T(2.0000000000000000e+00), Dreal[64], Dreal_6_2_110);
	Dreal_6_1_112 += Dreal[73];
	Dreal_6_2_110 = FMA(T(2.0000000000000000e+00), Dreal[62], Dreal_6_2_110);
	Dreal_6_1_112 += Dreal[64];
	Dreal_6_2_110 += Dreal[57];
	Dreal_7_1_113 += Dreal[108];
	Dreal_7_2_111 = FMA(T(2.0000000000000000e+00), Dreal[108], Dreal_7_2_111);
	Dreal_7_1_113 += Dreal[97];
	Dreal_7_2_111 += Dreal[106];
	Dreal_5_1_120 += Dreal[45];
	Dreal_7_2_111 = FMA(T(2.0000000000000000e+00), Dreal[97], Dreal_7_2_111);
	Dreal_5_1_120 += Dreal[38];
	Dreal_7_2_111 = FMA(T(2.0000000000000000e+00), Dreal[95], Dreal_7_2_111);
	Dreal_6_1_121 += Dreal[72];
	Dreal_7_2_111 += Dreal[88];
	Dreal_6_1_121 += Dreal[63];
	Dreal_7_2_120 = FMA(T(2.0000000000000000e+00), Dreal[107], Dreal_7_2_120);
	Dreal_7_1_122 += Dreal[107];
	Dreal_7_2_120 += Dreal[105];
	Dreal_7_1_122 += Dreal[96];
	Dreal_7_2_120 = FMA(T(2.0000000000000000e+00), Dreal[96], Dreal_7_2_120);
	Dreal_6_1_130 += Dreal[71];
	Dreal_7_2_120 = FMA(T(2.0000000000000000e+00), Dreal[94], Dreal_7_2_120);
	Dreal_6_1_130 += Dreal[62];
	Dreal_7_2_120 += Dreal[87];
	Dreal_7_1_131 += Dreal[106];
	Dreal_6_2_200 = FMA(T(2.0000000000000000e+00), Dreal[68], Dreal_6_2_200);
	Dreal_7_1_131 += Dreal[95];
	Dreal_6_2_200 += Dreal[66];
	Dreal_7_1_140 += Dreal[105];
	Dreal_6_2_200 = FMA(T(2.0000000000000000e+00), Dreal[61], Dreal_6_2_200);
	Dreal_7_1_140 += Dreal[94];
	Dreal_6_2_200 = FMA(T(2.0000000000000000e+00), Dreal[59], Dreal_6_2_200);
	Dreal_4_1_200 += Dreal[23];
	Dreal_6_2_200 += Dreal[56];
	Dreal_4_1_200 += Dreal[20];
	Dreal_7_2_201 = FMA(T(2.0000000000000000e+00), Dreal[102], Dreal_7_2_201);
	Dreal_5_1_201 += Dreal[42];
	Dreal_7_2_201 += Dreal[100];
	Dreal_5_1_201 += Dreal[37];
	Dreal_7_2_201 = FMA(T(2.0000000000000000e+00), Dreal[93], Dreal_7_2_201);
	Dreal_6_1_202 += Dreal[68];
	Dreal_7_2_201 = FMA(T(2.0000000000000000e+00), Dreal[91], Dreal_7_2_201);
	Dreal_6_1_202 += Dreal[61];
	Dreal_7_2_201 += Dreal[86];
	Dreal_7_1_203 += Dreal[102];
	Dreal_7_2_210 = FMA(T(2.0000000000000000e+00), Dreal[101], Dreal_7_2_210);
	Dreal_7_1_203 += Dreal[93];
	Dreal_7_2_210 += Dreal[99];
	Dreal_5_1_210 += Dreal[41];
	Dreal_7_2_210 = FMA(T(2.0000000000000000e+00), Dreal[92], Dreal_7_2_210);
	Dreal_5_1_210 += Dreal[36];
	Dreal_7_2_210 = FMA(T(2.0000000000000000e+00), Dreal[90], Dreal_7_2_210);
	Dreal_6_1_211 += Dreal[67];
	Dreal_7_2_210 += Dreal[85];
	Dreal_6_1_211 += Dreal[60];
	Dreal_7_2_300 = FMA(T(2.0000000000000000e+00), Dreal[96], Dreal_7_2_300);
	Dreal_7_1_212 += Dreal[101];
	Dreal_7_2_300 += Dreal[94];
	Dreal_7_1_212 += Dreal[92];
	Dreal_7_2_300 = FMA(T(2.0000000000000000e+00), Dreal[89], Dreal_7_2_300);
	Dreal_6_1_220 += Dreal[66];
	Dreal_7_2_300 = FMA(T(2.0000000000000000e+00), Dreal[87], Dreal_7_2_300);
	Dreal_6_1_220 += Dreal[59];
	Dreal_7_2_300 += Dreal[84];
	Dreal_7_1_221 += Dreal[100];
	Dreal_6_3_000 = FMA(T(3.0000000000000000e+00), Dreal[81], Dreal_6_3_000);
	Dreal_7_1_221 += Dreal[91];
	Dreal_6_3_000 = FMA(T(3.0000000000000000e+00), Dreal[79], Dreal_6_3_000);
	Dreal_7_1_230 += Dreal[99];
	Dreal_6_3_000 += Dreal[77];
	Dreal_7_1_230 += Dreal[90];
	Dreal_6_3_000 = FMA(T(3.0000000000000000e+00), Dreal[70], Dreal_6_3_000);
	Dreal_5_1_300 += Dreal[38];
	Dreal_6_3_000 = FMA(T(6.0000000000000000e+00), Dreal[68], Dreal_6_3_000);
	Dreal_5_1_300 += Dreal[35];
	Dreal_6_3_000 = FMA(T(3.0000000000000000e+00), Dreal[66], Dreal_6_3_000);
	Dreal_6_1_301 += Dreal[63];
	Dreal_6_3_000 = FMA(T(3.0000000000000000e+00), Dreal[61], Dreal_6_3_000);
	Dreal_6_1_301 += Dreal[58];
	Dreal_6_3_000 = FMA(T(3.0000000000000000e+00), Dreal[59], Dreal_6_3_000);
	Dreal_7_1_302 += Dreal[96];
	Dreal_6_3_000 += Dreal[56];
	Dreal_7_1_302 += Dreal[89];
	Dreal_7_3_001 = FMA(T(3.0000000000000000e+00), Dreal[117], Dreal_7_3_001);
	Dreal_6_1_310 += Dreal[62];
	Dreal_7_3_001 = FMA(T(3.0000000000000000e+00), Dreal[115], Dreal_7_3_001);
	Dreal_6_1_310 += Dreal[57];
	Dreal_7_3_001 += Dreal[113];
	Dreal_7_1_311 += Dreal[95];
	Dreal_7_3_001 = FMA(T(3.0000000000000000e+00), Dreal[104], Dreal_7_3_001);
	Dreal_7_1_311 += Dreal[88];
	Dreal_7_3_001 = FMA(T(6.0000000000000000e+00), Dreal[102], Dreal_7_3_001);
	Dreal_7_1_320 += Dreal[94];
	Dreal_7_3_001 = FMA(T(3.0000000000000000e+00), Dreal[100], Dreal_7_3_001);
	Dreal_7_1_320 += Dreal[87];
	Dreal_7_3_001 = FMA(T(3.0000000000000000e+00), Dreal[93], Dreal_7_3_001);
	Dreal_6_1_400 += Dreal[59];
	Dreal_7_3_001 = FMA(T(3.0000000000000000e+00), Dreal[91], Dreal_7_3_001);
	Dreal_6_1_400 += Dreal[56];
	Dreal_7_3_001 += Dreal[86];
	Dreal_7_1_401 += Dreal[91];
	Dreal_7_3_010 = FMA(T(3.0000000000000000e+00), Dreal[116], Dreal_7_3_010);
	Dreal_7_1_401 += Dreal[86];
	Dreal_7_3_010 = FMA(T(3.0000000000000000e+00), Dreal[114], Dreal_7_3_010);
	Dreal_7_1_410 += Dreal[90];
	Dreal_7_3_010 += Dreal[112];
	Dreal_7_1_410 += Dreal[85];
	Dreal_7_3_010 = FMA(T(3.0000000000000000e+00), Dreal[103], Dreal_7_3_010);
	Dreal_7_1_500 += Dreal[87];
	Dreal_7_3_010 = FMA(T(6.0000000000000000e+00), Dreal[101], Dreal_7_3_010);
	Dreal_7_1_500 += Dreal[84];
	Dreal_7_3_010 = FMA(T(3.0000000000000000e+00), Dreal[99], Dreal_7_3_010);
	Dreal_4_2_000 = FMA(T(2.0000000000000000e+00), Dreal[32], Dreal_4_2_000);
	Dreal_7_3_010 = FMA(T(3.0000000000000000e+00), Dreal[92], Dreal_7_3_010);
	Dreal_4_2_000 += Dreal[30];
	Dreal_7_3_010 = FMA(T(3.0000000000000000e+00), Dreal[90], Dreal_7_3_010);
	Dreal_4_2_000 = FMA(T(2.0000000000000000e+00), Dreal[25], Dreal_4_2_000);
	Dreal_7_3_010 += Dreal[85];
	Dreal_4_2_000 = FMA(T(2.0000000000000000e+00), Dreal[23], Dreal_4_2_000);
	Dreal_7_3_100 = FMA(T(3.0000000000000000e+00), Dreal[109], Dreal_7_3_100);
	Dreal_4_2_000 += Dreal[20];
	Dreal_7_3_100 = FMA(T(3.0000000000000000e+00), Dreal[107], Dreal_7_3_100);
	Dreal_5_2_001 = FMA(T(2.0000000000000000e+00), Dreal[53], Dreal_5_2_001);
	Dreal_7_3_100 += Dreal[105];
	Dreal_5_2_001 += Dreal[51];
	Dreal_7_3_100 = FMA(T(3.0000000000000000e+00), Dreal[98], Dreal_7_3_100);
	Dreal_5_2_001 = FMA(T(2.0000000000000000e+00), Dreal[44], Dreal_5_2_001);
	Dreal_7_3_100 = FMA(T(6.0000000000000000e+00), Dreal[96], Dreal_7_3_100);
	Dreal_5_2_001 = FMA(T(2.0000000000000000e+00), Dreal[42], Dreal_5_2_001);
	Dreal_7_3_100 = FMA(T(3.0000000000000000e+00), Dreal[94], Dreal_7_3_100);
	Dreal_5_2_001 += Dreal[37];
	Dreal_7_3_100 = FMA(T(3.0000000000000000e+00), Dreal[89], Dreal_7_3_100);
	Dreal_6_2_002 = FMA(T(2.0000000000000000e+00), Dreal[81], Dreal_6_2_002);
	Dreal_7_3_100 = FMA(T(3.0000000000000000e+00), Dreal[87], Dreal_7_3_100);
	Dreal_6_2_002 += Dreal[79];
	Dreal_7_3_100 += Dreal[84];
	D[0] = Dreal[0];
	D[36] = Dreal[3];
	D[64] = Dreal[9];
	D[2] = Dreal[2];
	D[38] = Dreal[8];
	D[5] = Dreal[7];
	D[41] = Dreal[17];
	D[9] = Dreal[16];
	D[45] = Dreal[31];
	D[14] = Dreal[30];
	D[50] = Dreal[51];
	D[20] = Dreal[50];
	D[56] = Dreal[78];
	D[27] = Dreal[77];
	D[63] = Dreal[113];
	D[35] = Dreal[112];
	D[1] = Dreal[1];
	D[37] = Dreal[6];
	D[4] = Dreal[5];
	D[40] = Dreal[14];
	D[8] = Dreal[13];
	D[44] = Dreal[27];
	D[13] = Dreal[26];
	D[49] = Dreal[46];
	D[19] = Dreal[45];
	D[55] = Dreal[72];
	D[26] = Dreal[71];
	D[62] = Dreal[106];
	D[34] = Dreal[105];
	D[3] = Dreal[4];
	D[39] = Dreal[12];
	D[7] = Dreal[11];
	D[43] = Dreal[24];
	D[12] = Dreal[23];
	D[48] = Dreal[42];
	D[18] = Dreal[41];
	D[54] = Dreal[67];
	D[25] = Dreal[66];
	D[61] = Dreal[100];
	D[33] = Dreal[99];
	D[6] = Dreal[10];
	D[42] = Dreal[22];
	D[11] = Dreal[21];
	D[47] = Dreal[39];
	D[17] = Dreal[38];
	D[53] = Dreal[63];
	D[24] = Dreal[62];
	D[60] = Dreal[95];
	D[32] = Dreal[94];
	D[10] = Dreal[20];
	D[46] = Dreal[37];
	D[16] = Dreal[36];
	D[52] = Dreal[60];
	D[23] = Dreal[59];
	D[59] = Dreal[91];
	D[31] = Dreal[90];
	D[15] = Dreal[35];
	D[51] = Dreal[58];
	D[22] = Dreal[57];
	D[58] = Dreal[88];
	D[30] = Dreal[87];
	D[21] = Dreal[56];
	D[57] = Dreal[86];
	D[29] = Dreal[85];
	D[28] = Dreal[84];
	D[41] = FMA(T(-2.0000000000000001e-01), Dreal_3_1_001, D[41]);
	D[11] = FMA(T(-4.2857142857142860e-01), Dreal_4_1_110, D[11]);
	D[9] = FMA(T(-5.9999999999999998e-01), Dreal_3_1_010, D[9]);
	D[47] = FMA(T(-3.3333333333333337e-01), Dreal_5_1_111, D[47]);
	D[45] = FMA(T(-4.2857142857142860e-01), Dreal_4_1_011, D[45]);
	D[17] = FMA(T(-1.1111111111111112e-01), Dreal_5_1_300, D[17]);
	D[14] = FMA(T(-8.5714285714285721e-01), Dreal_4_1_020, D[14]);
	D[17] = FMA(T(-3.3333333333333337e-01), Dreal_5_1_120, D[17]);
	D[14] = FMA(T(8.5714285714285715e-02), Dreal_4_2_000, D[14]);
	D[17] = FMA(T(4.7619047619047623e-02), Dreal_5_2_100, D[17]);
	D[50] = FMA(T(-6.6666666666666674e-01), Dreal_5_1_021, D[50]);
	D[53] = FMA(T(-9.0909090909090912e-02), Dreal_6_1_301, D[53]);
	D[50] = FMA(T(4.7619047619047623e-02), Dreal_5_2_001, D[50]);
	D[53] = FMA(T(-2.7272727272727271e-01), Dreal_6_1_121, D[53]);
	D[20] = FMA(T(-1.1111111111111112e+00), Dreal_5_1_030, D[20]);
	D[53] = FMA(T(3.0303030303030300e-02), Dreal_6_2_101, D[53]);
	D[20] = FMA(T(2.3809523809523811e-01), Dreal_5_2_010, D[20]);
	D[24] = FMA(T(-2.7272727272727271e-01), Dreal_6_1_310, D[24]);
	D[56] = FMA(T(-9.0909090909090906e-01), Dreal_6_1_031, D[56]);
	D[24] = FMA(T(-2.7272727272727271e-01), Dreal_6_1_130, D[24]);
	D[56] = FMA(T(1.5151515151515152e-01), Dreal_6_2_011, D[56]);
	D[24] = FMA(T(9.0909090909090912e-02), Dreal_6_2_110, D[24]);
	D[27] = FMA(T(-1.3636363636363635e+00), Dreal_6_1_040, D[27]);
	D[60] = FMA(T(-2.3076923076923075e-01), Dreal_7_1_311, D[60]);
	D[27] = FMA(T(4.5454545454545453e-01), Dreal_6_2_020, D[27]);
	D[60] = FMA(T(-2.3076923076923075e-01), Dreal_7_1_131, D[60]);
	D[27] = FMA(T(-2.1645021645021644e-02), Dreal_6_3_000, D[27]);
	D[60] = FMA(T(6.2937062937062929e-02), Dreal_7_2_111, D[60]);
	D[63] = FMA(T(-1.1538461538461537e+00), Dreal_7_1_041, D[63]);
	D[32] = FMA(T(-4.6153846153846151e-01), Dreal_7_1_320, D[32]);
	D[63] = FMA(T(3.1468531468531469e-01), Dreal_7_2_021, D[63]);
	D[32] = FMA(T(2.0979020979020980e-02), Dreal_7_2_300, D[32]);
	D[63] = FMA(T(-1.1655011655011654e-02), Dreal_7_3_001, D[63]);
	D[32] = FMA(T(-2.3076923076923075e-01), Dreal_7_1_140, D[32]);
	D[35] = FMA(T(-1.6153846153846154e+00), Dreal_7_1_050, D[35]);
	D[32] = FMA(T(1.2587412587412586e-01), Dreal_7_2_120, D[32]);
	D[35] = FMA(T(7.3426573426573427e-01), Dreal_7_2_030, D[35]);
	D[32] = FMA(T(-6.9930069930069930e-03), Dreal_7_3_100, D[32]);
	D[35] = FMA(T(-8.1585081585081584e-02), Dreal_7_3_010, D[35]);
	D[10] = FMA(T(-8.5714285714285721e-01), Dreal_4_1_200, D[10]);
	D[8] = FMA(T(-2.0000000000000001e-01), Dreal_3_1_100, D[8]);
	D[10] = FMA(T(8.5714285714285715e-02), Dreal_4_2_000, D[10]);
	D[44] = FMA(T(-1.4285714285714288e-01), Dreal_4_1_101, D[44]);
	D[46] = FMA(T(-6.6666666666666674e-01), Dreal_5_1_201, D[46]);
	D[13] = FMA(T(-4.2857142857142860e-01), Dreal_4_1_110, D[13]);
	D[46] = FMA(T(4.7619047619047623e-02), Dreal_5_2_001, D[46]);
	D[49] = FMA(T(-3.3333333333333337e-01), Dreal_5_1_111, D[49]);
	D[16] = FMA(T(-6.6666666666666674e-01), Dreal_5_1_210, D[16]);
	D[19] = FMA(T(-6.6666666666666674e-01), Dreal_5_1_120, D[19]);
	D[16] = FMA(T(4.7619047619047623e-02), Dreal_5_2_010, D[16]);
	D[19] = FMA(T(4.7619047619047623e-02), Dreal_5_2_100, D[19]);
	D[52] = FMA(T(-5.4545454545454541e-01), Dreal_6_1_211, D[52]);
	D[55] = FMA(T(-5.4545454545454541e-01), Dreal_6_1_121, D[55]);
	D[52] = FMA(T(3.0303030303030300e-02), Dreal_6_2_011, D[52]);
	D[55] = FMA(T(3.0303030303030300e-02), Dreal_6_2_101, D[55]);
	D[23] = FMA(T(-9.0909090909090912e-02), Dreal_6_1_400, D[23]);
	D[26] = FMA(T(-9.0909090909090906e-01), Dreal_6_1_130, D[26]);
	D[23] = FMA(T(-5.4545454545454541e-01), Dreal_6_1_220, D[23]);
	D[26] = FMA(T(1.5151515151515152e-01), Dreal_6_2_110, D[26]);
	D[23] = FMA(T(6.0606060606060601e-02), Dreal_6_2_200, D[23]);
	D[62] = FMA(T(-7.6923076923076916e-01), Dreal_7_1_131, D[62]);
	D[23] = FMA(T(3.0303030303030300e-02), Dreal_6_2_020, D[23]);
	D[62] = FMA(T(1.0489510489510490e-01), Dreal_7_2_111, D[62]);
	D[23] = FMA(T(-4.3290043290043290e-03), Dreal_6_3_000, D[23]);
	D[34] = FMA(T(-1.1538461538461537e+00), Dreal_7_1_140, D[34]);
	D[59] = FMA(T(-7.6923076923076913e-02), Dreal_7_1_401, D[59]);
	D[34] = FMA(T(3.1468531468531469e-01), Dreal_7_2_120, D[34]);
	D[59] = FMA(T(-4.6153846153846151e-01), Dreal_7_1_221, D[59]);
	D[34] = FMA(T(-1.1655011655011654e-02), Dreal_7_3_100, D[34]);
	D[59] = FMA(T(4.1958041958041960e-02), Dreal_7_2_201, D[59]);
	D[39] = FMA(T(-2.0000000000000001e-01), Dreal_3_1_001, D[39]);
	D[59] = FMA(T(2.0979020979020980e-02), Dreal_7_2_021, D[59]);
	D[7] = FMA(T(-2.0000000000000001e-01), Dreal_3_1_010, D[7]);
	D[59] = FMA(T(-2.3310023310023310e-03), Dreal_7_3_001, D[59]);
	D[43] = FMA(T(-1.4285714285714288e-01), Dreal_4_1_011, D[43]);
	D[31] = FMA(T(-2.3076923076923075e-01), Dreal_7_1_410, D[31]);
	D[12] = FMA(T(-1.4285714285714288e-01), Dreal_4_1_200, D[12]);
	D[31] = FMA(T(-4.6153846153846151e-01), Dreal_7_1_230, D[31]);
	D[12] = FMA(T(-1.4285714285714288e-01), Dreal_4_1_020, D[12]);
	D[31] = FMA(T(1.2587412587412586e-01), Dreal_7_2_210, D[31]);
	D[12] = FMA(T(2.8571428571428574e-02), Dreal_4_2_000, D[12]);
	D[31] = FMA(T(2.0979020979020980e-02), Dreal_7_2_030, D[31]);
	D[48] = FMA(T(-1.1111111111111112e-01), Dreal_5_1_201, D[48]);
	D[31] = FMA(T(-6.9930069930069930e-03), Dreal_7_3_010, D[31]);
	D[48] = FMA(T(-1.1111111111111112e-01), Dreal_5_1_021, D[48]);
	D[15] = FMA(T(-1.1111111111111112e+00), Dreal_5_1_300, D[15]);
	D[48] = FMA(T(1.5873015873015876e-02), Dreal_5_2_001, D[48]);
	D[15] = FMA(T(2.3809523809523811e-01), Dreal_5_2_100, D[15]);
	D[18] = FMA(T(-3.3333333333333337e-01), Dreal_5_1_210, D[18]);
	D[51] = FMA(T(-9.0909090909090906e-01), Dreal_6_1_301, D[51]);
	D[18] = FMA(T(-1.1111111111111112e-01), Dreal_5_1_030, D[18]);
	D[51] = FMA(T(1.5151515151515152e-01), Dreal_6_2_101, D[51]);
	D[18] = FMA(T(4.7619047619047623e-02), Dreal_5_2_010, D[18]);
	D[22] = FMA(T(-9.0909090909090906e-01), Dreal_6_1_310, D[22]);
	D[54] = FMA(T(-2.7272727272727271e-01), Dreal_6_1_211, D[54]);
	D[22] = FMA(T(1.5151515151515152e-01), Dreal_6_2_110, D[22]);
	D[54] = FMA(T(-9.0909090909090912e-02), Dreal_6_1_031, D[54]);
	D[58] = FMA(T(-7.6923076923076916e-01), Dreal_7_1_311, D[58]);
	D[54] = FMA(T(3.0303030303030300e-02), Dreal_6_2_011, D[54]);
	D[58] = FMA(T(1.0489510489510490e-01), Dreal_7_2_111, D[58]);
	D[25] = FMA(T(-5.4545454545454541e-01), Dreal_6_1_220, D[25]);
	D[30] = FMA(T(-7.6923076923076913e-02), Dreal_7_1_500, D[30]);
	D[25] = FMA(T(3.0303030303030300e-02), Dreal_6_2_200, D[25]);
	D[30] = FMA(T(-7.6923076923076916e-01), Dreal_7_1_320, D[30]);
	D[25] = FMA(T(-9.0909090909090912e-02), Dreal_6_1_040, D[25]);
	D[30] = FMA(T(6.9930069930069921e-02), Dreal_7_2_300, D[30]);
	D[25] = FMA(T(6.0606060606060601e-02), Dreal_6_2_020, D[25]);
	D[30] = FMA(T(1.0489510489510490e-01), Dreal_7_2_120, D[30]);
	D[25] = FMA(T(-4.3290043290043290e-03), Dreal_6_3_000, D[25]);
	D[30] = FMA(T(-1.1655011655011654e-02), Dreal_7_3_100, D[30]);
	D[61] = FMA(T(-4.6153846153846151e-01), Dreal_7_1_221, D[61]);
	D[21] = FMA(T(-1.3636363636363635e+00), Dreal_6_1_400, D[21]);
	D[61] = FMA(T(2.0979020979020980e-02), Dreal_7_2_201, D[61]);
	D[21] = FMA(T(4.5454545454545453e-01), Dreal_6_2_200, D[21]);
	D[61] = FMA(T(-7.6923076923076913e-02), Dreal_7_1_041, D[61]);
	D[21] = FMA(T(-2.1645021645021644e-02), Dreal_6_3_000, D[21]);
	D[61] = FMA(T(4.1958041958041960e-02), Dreal_7_2_021, D[61]);
	D[57] = FMA(T(-1.1538461538461537e+00), Dreal_7_1_401, D[57]);
	D[61] = FMA(T(-2.3310023310023310e-03), Dreal_7_3_001, D[61]);
	D[57] = FMA(T(3.1468531468531469e-01), Dreal_7_2_201, D[57]);
	D[33] = FMA(T(-7.6923076923076916e-01), Dreal_7_1_230, D[33]);
	D[57] = FMA(T(-1.1655011655011654e-02), Dreal_7_3_001, D[57]);
	D[33] = FMA(T(1.0489510489510490e-01), Dreal_7_2_210, D[33]);
	D[29] = FMA(T(-1.1538461538461537e+00), Dreal_7_1_410, D[29]);
	D[33] = FMA(T(-7.6923076923076913e-02), Dreal_7_1_050, D[33]);
	D[29] = FMA(T(3.1468531468531469e-01), Dreal_7_2_210, D[29]);
	D[33] = FMA(T(6.9930069930069921e-02), Dreal_7_2_030, D[33]);
	D[29] = FMA(T(-1.1655011655011654e-02), Dreal_7_3_010, D[29]);
	D[33] = FMA(T(-1.1655011655011654e-02), Dreal_7_3_010, D[33]);
	D[28] = FMA(T(-1.6153846153846154e+00), Dreal_7_1_500, D[28]);
	D[6] = FMA(T(-5.9999999999999998e-01), Dreal_3_1_100, D[6]);
	D[28] = FMA(T(7.3426573426573427e-01), Dreal_7_2_300, D[28]);
	D[42] = FMA(T(-4.2857142857142860e-01), Dreal_4_1_101, D[42]);
	D[28] = FMA(T(-8.1585081585081584e-02), Dreal_7_3_100, D[28]);
	flops += 170 * foursz + 880;
	D = D + Dfour;
	D[0] = T(7.8539816339744828e-01 * SCALE_FACTOR_INV1) + D[0]; 
	D = L2L(D, xshift, true);
	return flops;
}


template<class T>
CUDA_EXPORT
inline int M2L(tensor_trless_sym<T, 2>& L, const tensor_trless_sym<T, 6>& M, const tensor_trless_sym<T, 7>& D, bool do_phi) {
	const T M000 =  (M[0]);
	const T M001 =  (M[21]);
	const T M002 =  (M[36]);
	const T M003 = -(M[24]+(M[26]));
	const T M004 =  (M[10]+FMA(T(2),M[12],(M[14])));
	const T M005 =  (M[31]+FMA(T(2),M[33],(M[35])));
	const T M010 =  (M[2]);
	const T M011 =  (M[23]);
	const T M012 = -(M[7]+(M[9]));
	const T M013 = -(M[28]+(M[30]));
	const T M014 =  (M[16]+FMA(T(2),M[18],(M[20])));
	const T M020 =  (M[5]);
	const T M021 =  (M[26]);
	const T M022 = -(M[12]+(M[14]));
	const T M023 = -(M[33]+(M[35]));
	const T M030 =  (M[9]);
	const T M031 =  (M[30]);
	const T M032 = -(M[18]+(M[20]));
	const T M040 =  (M[14]);
	const T M041 =  (M[35]);
	const T M050 =  (M[20]);
	const T M100 =  (M[1]);
	const T M101 =  (M[22]);
	const T M102 = -(M[6]+(M[8]));
	const T M103 = -(M[27]+(M[29]));
	const T M104 =  (M[15]+FMA(T(2),M[17],(M[19])));
	const T M110 =  (M[4]);
	const T M111 =  (M[25]);
	const T M112 = -(M[11]+(M[13]));
	const T M113 = -(M[32]+(M[34]));
	const T M120 =  (M[8]);
	const T M121 =  (M[29]);
	const T M122 = -(M[17]+(M[19]));
	const T M130 =  (M[13]);
	const T M131 =  (M[34]);
	const T M140 =  (M[19]);
	const T M200 =  (M[3]);
	const T M201 =  (M[24]);
	const T M202 = -(M[10]+(M[12]));
	const T M203 = -(M[31]+(M[33]));
	const T M210 =  (M[7]);
	const T M211 =  (M[28]);
	const T M212 = -(M[16]+(M[18]));
	const T M220 =  (M[12]);
	const T M221 =  (M[33]);
	const T M230 =  (M[18]);
	const T M300 =  (M[6]);
	const T M301 =  (M[27]);
	const T M302 = -(M[15]+(M[17]));
	const T M310 =  (M[11]);
	const T M311 =  (M[32]);
	const T M320 =  (M[17]);
	const T M400 =  (M[10]);
	const T M401 =  (M[31]);
	const T M410 =  (M[16]);
	const T M500 =  (M[15]);
	const T D000 =  (D[0]);
	const T D001 =  (D[28]);
	const T D002 =  (D[49]);
	const T D003 = -(D[31]+(D[33]));
	const T D004 =  (D[10]+FMA(T(2),D[12],(D[14])));
	const T D005 =  (D[38]+FMA(T(2),D[40],(D[42])));
	const T D006 = -(D[21]+FMA(T(3),D[23],FMA(T(3),D[25],(D[27]))));
	const T D010 =  (D[2]);
	const T D011 =  (D[30]);
	const T D012 = -(D[7]+(D[9]));
	const T D013 = -(D[35]+(D[37]));
	const T D014 =  (D[16]+FMA(T(2),D[18],(D[20])));
	const T D015 =  (D[44]+FMA(T(2),D[46],(D[48])));
	const T D020 =  (D[5]);
	const T D021 =  (D[33]);
	const T D022 = -(D[12]+(D[14]));
	const T D023 = -(D[40]+(D[42]));
	const T D024 =  (D[23]+FMA(T(2),D[25],(D[27])));
	const T D030 =  (D[9]);
	const T D031 =  (D[37]);
	const T D032 = -(D[18]+(D[20]));
	const T D033 = -(D[46]+(D[48]));
	const T D040 =  (D[14]);
	const T D041 =  (D[42]);
	const T D042 = -(D[25]+(D[27]));
	const T D050 =  (D[20]);
	const T D051 =  (D[48]);
	const T D060 =  (D[27]);
	const T D100 =  (D[1]);
	const T D101 =  (D[29]);
	const T D102 = -(D[6]+(D[8]));
	const T D103 = -(D[34]+(D[36]));
	const T D104 =  (D[15]+FMA(T(2),D[17],(D[19])));
	const T D105 =  (D[43]+FMA(T(2),D[45],(D[47])));
	const T D110 =  (D[4]);
	const T D111 =  (D[32]);
	const T D112 = -(D[11]+(D[13]));
	const T D113 = -(D[39]+(D[41]));
	const T D114 =  (D[22]+FMA(T(2),D[24],(D[26])));
	const T D120 =  (D[8]);
	const T D121 =  (D[36]);
	const T D122 = -(D[17]+(D[19]));
	const T D123 = -(D[45]+(D[47]));
	const T D130 =  (D[13]);
	const T D131 =  (D[41]);
	const T D132 = -(D[24]+(D[26]));
	const T D140 =  (D[19]);
	const T D141 =  (D[47]);
	const T D150 =  (D[26]);
	const T D200 =  (D[3]);
	const T D201 =  (D[31]);
	const T D202 = -(D[10]+(D[12]));
	const T D203 = -(D[38]+(D[40]));
	const T D204 =  (D[21]+FMA(T(2),D[23],(D[25])));
	const T D210 =  (D[7]);
	const T D211 =  (D[35]);
	const T D212 = -(D[16]+(D[18]));
	const T D213 = -(D[44]+(D[46]));
	const T D220 =  (D[12]);
	const T D221 =  (D[40]);
	const T D222 = -(D[23]+(D[25]));
	const T D230 =  (D[18]);
	const T D231 =  (D[46]);
	const T D240 =  (D[25]);
	const T D300 =  (D[6]);
	const T D301 =  (D[34]);
	const T D302 = -(D[15]+(D[17]));
	const T D303 = -(D[43]+(D[45]));
	const T D310 =  (D[11]);
	const T D311 =  (D[39]);
	const T D312 = -(D[22]+(D[24]));
	const T D320 =  (D[17]);
	const T D321 =  (D[45]);
	const T D330 =  (D[24]);
	const T D400 =  (D[10]);
	const T D401 =  (D[38]);
	const T D402 = -(D[21]+(D[23]));
	const T D410 =  (D[16]);
	const T D411 =  (D[44]);
	const T D420 =  (D[23]);
	const T D500 =  (D[15]);
	const T D501 =  (D[43]);
	const T D510 =  (D[22]);
	const T D600 =  (D[21]);
	if( do_phi ) {
		L[0] *= T(1.2000000000000000e+02);
		L[0] = FMA(M500, D500, L[0]);
		L[0] = FMA(M050, D050, L[0]);
		L[0] = FMA(M005, D005, L[0]);
		L[0] *= T(2.0000000000000001e-01);
		L[0] = FMA(M041, D041, L[0]);
		L[0] = FMA(M140, D140, L[0]);
		L[0] = FMA(M104, D104, L[0]);
		L[0] = FMA(M040, D040, L[0]);
		L[0] = FMA(M014, D014, L[0]);
		L[0] = FMA(M400, D400, L[0]);
		L[0] = FMA(M410, D410, L[0]);
		L[0] = FMA(M401, D401, L[0]);
		L[0] = FMA(M004, D004, L[0]);
		L[0] *= T(5.0000000000000000e-01);
		L[0] = FMA(M320, D320, L[0]);
		L[0] = FMA(M203, D203, L[0]);
		L[0] = FMA(M023, D023, L[0]);
		L[0] = FMA(M032, D032, L[0]);
		L[0] = FMA(M230, D230, L[0]);
		L[0] = FMA(M302, D302, L[0]);
		L[0] *= T(5.0000000000000000e-01);
		L[0] = FMA(M013, D013, L[0]);
		L[0] = FMA(M131, D131, L[0]);
		L[0] = FMA(M130, D130, L[0]);
		L[0] = FMA(M113, D113, L[0]);
		L[0] = FMA(M003, D003, L[0]);
		L[0] = FMA(M103, D103, L[0]);
		L[0] = FMA(M300, D300, L[0]);
		L[0] = FMA(M301, D301, L[0]);
		L[0] = FMA(M031, D031, L[0]);
		L[0] = FMA(M030, D030, L[0]);
		L[0] = FMA(M310, D310, L[0]);
		L[0] = FMA(M311, D311, L[0]);
		L[0] *= T(6.6666666666666663e-01);
		L[0] = FMA(M221, D221, L[0]);
		L[0] = FMA(M220, D220, L[0]);
		L[0] = FMA(M212, D212, L[0]);
		L[0] = FMA(M122, D122, L[0]);
		L[0] = FMA(M022, D022, L[0]);
		L[0] = FMA(M202, D202, L[0]);
		L[0] *= T(5.0000000000000000e-01);
		L[0] = FMA(M112, D112, L[0]);
		L[0] = FMA(M211, D211, L[0]);
		L[0] = FMA(M210, D210, L[0]);
		L[0] = FMA(M200, D200, L[0]);
		L[0] = FMA(M121, D121, L[0]);
		L[0] = FMA(M120, D120, L[0]);
		L[0] = FMA(M201, D201, L[0]);
		L[0] = FMA(M002, D002, L[0]);
		L[0] = FMA(M102, D102, L[0]);
		L[0] = FMA(M012, D012, L[0]);
		L[0] = FMA(M021, D021, L[0]);
		L[0] = FMA(M020, D020, L[0]);
		L[0] *= T(5.0000000000000000e-01);
		L[0] = FMA(M001, D001, L[0]);
		L[0] = FMA(M010, D010, L[0]);
		L[0] = FMA(M011, D011, L[0]);
		L[0] = FMA(M100, D100, L[0]);
		L[0] = FMA(M101, D101, L[0]);
		L[0] = FMA(M110, D110, L[0]);
		L[0] = FMA(M111, D111, L[0]);
		L[0] = FMA(M000, D000, L[0]);
	}
	L[1] *= T(1.2000000000000000e+02);
	L[2] *= T(1.2000000000000000e+02);
	L[1] = FMA(M500, D600, L[1]);
	L[2] = FMA(M500, D510, L[2]);
	L[1] = FMA(M050, D150, L[1]);
	L[2] = FMA(M050, D060, L[2]);
	L[1] = FMA(M005, D105, L[1]);
	L[2] = FMA(M005, D015, L[2]);
	L[1] *= T(2.0000000000000001e-01);
	L[2] *= T(2.0000000000000001e-01);
	L[1] = FMA(M041, D141, L[1]);
	L[2] = FMA(M041, D051, L[2]);
	L[1] = FMA(M140, D240, L[1]);
	L[2] = FMA(M140, D150, L[2]);
	L[1] = FMA(M104, D204, L[1]);
	L[2] = FMA(M104, D114, L[2]);
	L[1] = FMA(M040, D140, L[1]);
	L[2] = FMA(M040, D050, L[2]);
	L[1] = FMA(M014, D114, L[1]);
	L[2] = FMA(M014, D024, L[2]);
	L[1] = FMA(M400, D500, L[1]);
	L[2] = FMA(M400, D410, L[2]);
	L[1] = FMA(M410, D510, L[1]);
	L[2] = FMA(M410, D420, L[2]);
	L[1] = FMA(M401, D501, L[1]);
	L[2] = FMA(M401, D411, L[2]);
	L[1] = FMA(M004, D104, L[1]);
	L[2] = FMA(M004, D014, L[2]);
	L[1] *= T(5.0000000000000000e-01);
	L[2] *= T(5.0000000000000000e-01);
	L[1] = FMA(M320, D420, L[1]);
	L[2] = FMA(M320, D330, L[2]);
	L[1] = FMA(M203, D303, L[1]);
	L[2] = FMA(M203, D213, L[2]);
	L[1] = FMA(M023, D123, L[1]);
	L[2] = FMA(M023, D033, L[2]);
	L[1] = FMA(M032, D132, L[1]);
	L[2] = FMA(M032, D042, L[2]);
	L[1] = FMA(M230, D330, L[1]);
	L[2] = FMA(M230, D240, L[2]);
	L[1] = FMA(M302, D402, L[1]);
	L[2] = FMA(M302, D312, L[2]);
	L[1] *= T(5.0000000000000000e-01);
	L[2] *= T(5.0000000000000000e-01);
	L[1] = FMA(M013, D113, L[1]);
	L[2] = FMA(M013, D023, L[2]);
	L[1] = FMA(M131, D231, L[1]);
	L[2] = FMA(M131, D141, L[2]);
	L[1] = FMA(M130, D230, L[1]);
	L[2] = FMA(M130, D140, L[2]);
	L[1] = FMA(M113, D213, L[1]);
	L[2] = FMA(M113, D123, L[2]);
	L[1] = FMA(M003, D103, L[1]);
	L[2] = FMA(M003, D013, L[2]);
	L[1] = FMA(M103, D203, L[1]);
	L[2] = FMA(M103, D113, L[2]);
	L[1] = FMA(M300, D400, L[1]);
	L[2] = FMA(M300, D310, L[2]);
	L[1] = FMA(M301, D401, L[1]);
	L[2] = FMA(M301, D311, L[2]);
	L[1] = FMA(M031, D131, L[1]);
	L[2] = FMA(M031, D041, L[2]);
	L[1] = FMA(M030, D130, L[1]);
	L[2] = FMA(M030, D040, L[2]);
	L[1] = FMA(M310, D410, L[1]);
	L[2] = FMA(M310, D320, L[2]);
	L[1] = FMA(M311, D411, L[1]);
	L[2] = FMA(M311, D321, L[2]);
	L[1] *= T(6.6666666666666663e-01);
	L[2] *= T(6.6666666666666663e-01);
	L[1] = FMA(M221, D321, L[1]);
	L[2] = FMA(M221, D231, L[2]);
	L[1] = FMA(M220, D320, L[1]);
	L[2] = FMA(M220, D230, L[2]);
	L[1] = FMA(M212, D312, L[1]);
	L[2] = FMA(M212, D222, L[2]);
	L[1] = FMA(M122, D222, L[1]);
	L[2] = FMA(M122, D132, L[2]);
	L[1] = FMA(M022, D122, L[1]);
	L[2] = FMA(M022, D032, L[2]);
	L[1] = FMA(M202, D302, L[1]);
	L[2] = FMA(M202, D212, L[2]);
	L[1] *= T(5.0000000000000000e-01);
	L[2] *= T(5.0000000000000000e-01);
	L[1] = FMA(M112, D212, L[1]);
	L[2] = FMA(M112, D122, L[2]);
	L[1] = FMA(M211, D311, L[1]);
	L[2] = FMA(M211, D221, L[2]);
	L[1] = FMA(M210, D310, L[1]);
	L[2] = FMA(M210, D220, L[2]);
	L[1] = FMA(M200, D300, L[1]);
	L[2] = FMA(M200, D210, L[2]);
	L[1] = FMA(M121, D221, L[1]);
	L[2] = FMA(M121, D131, L[2]);
	L[1] = FMA(M120, D220, L[1]);
	L[2] = FMA(M120, D130, L[2]);
	L[1] = FMA(M201, D301, L[1]);
	L[2] = FMA(M201, D211, L[2]);
	L[1] = FMA(M002, D102, L[1]);
	L[2] = FMA(M002, D012, L[2]);
	L[1] = FMA(M102, D202, L[1]);
	L[2] = FMA(M102, D112, L[2]);
	L[1] = FMA(M012, D112, L[1]);
	L[2] = FMA(M012, D022, L[2]);
	L[1] = FMA(M021, D121, L[1]);
	L[2] = FMA(M021, D031, L[2]);
	L[1] = FMA(M020, D120, L[1]);
	L[2] = FMA(M020, D030, L[2]);
	L[1] *= T(5.0000000000000000e-01);
	L[2] *= T(5.0000000000000000e-01);
	L[1] = FMA(M001, D101, L[1]);
	L[2] = FMA(M001, D011, L[2]);
	L[1] = FMA(M010, D110, L[1]);
	L[2] = FMA(M010, D020, L[2]);
	L[1] = FMA(M011, D111, L[1]);
	L[2] = FMA(M011, D021, L[2]);
	L[1] = FMA(M100, D200, L[1]);
	L[2] = FMA(M100, D110, L[2]);
	L[1] = FMA(M101, D201, L[1]);
	L[2] = FMA(M101, D111, L[2]);
	L[1] = FMA(M110, D210, L[1]);
	L[2] = FMA(M110, D120, L[2]);
	L[1] = FMA(M111, D211, L[1]);
	L[2] = FMA(M111, D121, L[2]);
	L[1] = FMA(M000, D100, L[1]);
	L[2] = FMA(M000, D010, L[2]);
	L[3] *= T(1.2000000000000000e+02);
	L[3] = FMA(M500, D501, L[3]);
	L[3] = FMA(M050, D051, L[3]);
	L[3] = FMA(M005, D006, L[3]);
	L[3] *= T(2.0000000000000001e-01);
	L[3] = FMA(M041, D042, L[3]);
	L[3] = FMA(M140, D141, L[3]);
	L[3] = FMA(M104, D105, L[3]);
	L[3] = FMA(M040, D041, L[3]);
	L[3] = FMA(M014, D015, L[3]);
	L[3] = FMA(M400, D401, L[3]);
	L[3] = FMA(M410, D411, L[3]);
	L[3] = FMA(M401, D402, L[3]);
	L[3] = FMA(M004, D005, L[3]);
	L[3] *= T(5.0000000000000000e-01);
	L[3] = FMA(M320, D321, L[3]);
	L[3] = FMA(M203, D204, L[3]);
	L[3] = FMA(M023, D024, L[3]);
	L[3] = FMA(M032, D033, L[3]);
	L[3] = FMA(M230, D231, L[3]);
	L[3] = FMA(M302, D303, L[3]);
	L[3] *= T(5.0000000000000000e-01);
	L[3] = FMA(M013, D014, L[3]);
	L[3] = FMA(M131, D132, L[3]);
	L[3] = FMA(M130, D131, L[3]);
	L[3] = FMA(M113, D114, L[3]);
	L[3] = FMA(M003, D004, L[3]);
	L[3] = FMA(M103, D104, L[3]);
	L[3] = FMA(M300, D301, L[3]);
	L[3] = FMA(M301, D302, L[3]);
	L[3] = FMA(M031, D032, L[3]);
	L[3] = FMA(M030, D031, L[3]);
	L[3] = FMA(M310, D311, L[3]);
	L[3] = FMA(M311, D312, L[3]);
	L[3] *= T(6.6666666666666663e-01);
	L[3] = FMA(M221, D222, L[3]);
	L[3] = FMA(M220, D221, L[3]);
	L[3] = FMA(M212, D213, L[3]);
	L[3] = FMA(M122, D123, L[3]);
	L[3] = FMA(M022, D023, L[3]);
	L[3] = FMA(M202, D203, L[3]);
	L[3] *= T(5.0000000000000000e-01);
	L[3] = FMA(M112, D113, L[3]);
	L[3] = FMA(M211, D212, L[3]);
	L[3] = FMA(M210, D211, L[3]);
	L[3] = FMA(M200, D201, L[3]);
	L[3] = FMA(M121, D122, L[3]);
	L[3] = FMA(M120, D121, L[3]);
	L[3] = FMA(M201, D202, L[3]);
	L[3] = FMA(M002, D003, L[3]);
	L[3] = FMA(M102, D103, L[3]);
	L[3] = FMA(M012, D013, L[3]);
	L[3] = FMA(M021, D022, L[3]);
	L[3] = FMA(M020, D021, L[3]);
	L[3] *= T(5.0000000000000000e-01);
	L[3] = FMA(M001, D002, L[3]);
	L[3] = FMA(M010, D011, L[3]);
	L[3] = FMA(M011, D012, L[3]);
	L[3] = FMA(M100, D101, L[3]);
	L[3] = FMA(M101, D102, L[3]);
	L[3] = FMA(M110, D111, L[3]);
	L[3] = FMA(M111, D112, L[3]);
	L[3] = FMA(M000, D001, L[3]);
	return 520 + do_phi * 119;
}


template<class T>
CUDA_EXPORT
inline int M2L(tensor_trless_sym<T, 7>& L, const tensor_trless_sym<T, 6>& M, const tensor_trless_sym<T, 7>& D, bool do_phi) {
	const T M000 =  (M[0]);
	const T M001 =  (M[21]);
	const T M002 =  (M[36]);
	const T M003 = -(M[24]+(M[26]));
	const T M004 =  (M[10]+FMA(T(2),M[12],(M[14])));
	const T M005 =  (M[31]+FMA(T(2),M[33],(M[35])));
	const T M010 =  (M[2]);
	const T M011 =  (M[23]);
	const T M012 = -(M[7]+(M[9]));
	const T M013 = -(M[28]+(M[30]));
	const T M014 =  (M[16]+FMA(T(2),M[18],(M[20])));
	const T M020 =  (M[5]);
	const T M021 =  (M[26]);
	const T M022 = -(M[12]+(M[14]));
	const T M023 = -(M[33]+(M[35]));
	const T M030 =  (M[9]);
	const T M031 =  (M[30]);
	const T M032 = -(M[18]+(M[20]));
	const T M040 =  (M[14]);
	const T M041 =  (M[35]);
	const T M050 =  (M[20]);
	const T M100 =  (M[1]);
	const T M101 =  (M[22]);
	const T M102 = -(M[6]+(M[8]));
	const T M103 = -(M[27]+(M[29]));
	const T M104 =  (M[15]+FMA(T(2),M[17],(M[19])));
	const T M110 =  (M[4]);
	const T M111 =  (M[25]);
	const T M112 = -(M[11]+(M[13]));
	const T M113 = -(M[32]+(M[34]));
	const T M120 =  (M[8]);
	const T M121 =  (M[29]);
	const T M122 = -(M[17]+(M[19]));
	const T M130 =  (M[13]);
	const T M131 =  (M[34]);
	const T M140 =  (M[19]);
	const T M200 =  (M[3]);
	const T M201 =  (M[24]);
	const T M202 = -(M[10]+(M[12]));
	const T M203 = -(M[31]+(M[33]));
	const T M210 =  (M[7]);
	const T M211 =  (M[28]);
	const T M212 = -(M[16]+(M[18]));
	const T M220 =  (M[12]);
	const T M221 =  (M[33]);
	const T M230 =  (M[18]);
	const T M300 =  (M[6]);
	const T M301 =  (M[27]);
	const T M302 = -(M[15]+(M[17]));
	const T M310 =  (M[11]);
	const T M311 =  (M[32]);
	const T M320 =  (M[17]);
	const T M400 =  (M[10]);
	const T M401 =  (M[31]);
	const T M410 =  (M[16]);
	const T M500 =  (M[15]);
	const T D000 =  (D[0]);
	const T D001 =  (D[28]);
	const T D002 =  (D[49]);
	const T D003 = -(D[31]+(D[33]));
	const T D004 =  (D[10]+FMA(T(2),D[12],(D[14])));
	const T D005 =  (D[38]+FMA(T(2),D[40],(D[42])));
	const T D006 = -(D[21]+FMA(T(3),D[23],FMA(T(3),D[25],(D[27]))));
	const T D010 =  (D[2]);
	const T D011 =  (D[30]);
	const T D012 = -(D[7]+(D[9]));
	const T D013 = -(D[35]+(D[37]));
	const T D014 =  (D[16]+FMA(T(2),D[18],(D[20])));
	const T D015 =  (D[44]+FMA(T(2),D[46],(D[48])));
	const T D020 =  (D[5]);
	const T D021 =  (D[33]);
	const T D022 = -(D[12]+(D[14]));
	const T D023 = -(D[40]+(D[42]));
	const T D024 =  (D[23]+FMA(T(2),D[25],(D[27])));
	const T D030 =  (D[9]);
	const T D031 =  (D[37]);
	const T D032 = -(D[18]+(D[20]));
	const T D033 = -(D[46]+(D[48]));
	const T D040 =  (D[14]);
	const T D041 =  (D[42]);
	const T D042 = -(D[25]+(D[27]));
	const T D050 =  (D[20]);
	const T D051 =  (D[48]);
	const T D060 =  (D[27]);
	const T D100 =  (D[1]);
	const T D101 =  (D[29]);
	const T D102 = -(D[6]+(D[8]));
	const T D103 = -(D[34]+(D[36]));
	const T D104 =  (D[15]+FMA(T(2),D[17],(D[19])));
	const T D105 =  (D[43]+FMA(T(2),D[45],(D[47])));
	const T D110 =  (D[4]);
	const T D111 =  (D[32]);
	const T D112 = -(D[11]+(D[13]));
	const T D113 = -(D[39]+(D[41]));
	const T D114 =  (D[22]+FMA(T(2),D[24],(D[26])));
	const T D120 =  (D[8]);
	const T D121 =  (D[36]);
	const T D122 = -(D[17]+(D[19]));
	const T D123 = -(D[45]+(D[47]));
	const T D130 =  (D[13]);
	const T D131 =  (D[41]);
	const T D132 = -(D[24]+(D[26]));
	const T D140 =  (D[19]);
	const T D141 =  (D[47]);
	const T D150 =  (D[26]);
	const T D200 =  (D[3]);
	const T D201 =  (D[31]);
	const T D202 = -(D[10]+(D[12]));
	const T D203 = -(D[38]+(D[40]));
	const T D204 =  (D[21]+FMA(T(2),D[23],(D[25])));
	const T D210 =  (D[7]);
	const T D211 =  (D[35]);
	const T D212 = -(D[16]+(D[18]));
	const T D213 = -(D[44]+(D[46]));
	const T D220 =  (D[12]);
	const T D221 =  (D[40]);
	const T D222 = -(D[23]+(D[25]));
	const T D230 =  (D[18]);
	const T D231 =  (D[46]);
	const T D240 =  (D[25]);
	const T D300 =  (D[6]);
	const T D301 =  (D[34]);
	const T D302 = -(D[15]+(D[17]));
	const T D303 = -(D[43]+(D[45]));
	const T D310 =  (D[11]);
	const T D311 =  (D[39]);
	const T D312 = -(D[22]+(D[24]));
	const T D320 =  (D[17]);
	const T D321 =  (D[45]);
	const T D330 =  (D[24]);
	const T D400 =  (D[10]);
	const T D401 =  (D[38]);
	const T D402 = -(D[21]+(D[23]));
	const T D410 =  (D[16]);
	const T D411 =  (D[44]);
	const T D420 =  (D[23]);
	const T D500 =  (D[15]);
	const T D501 =  (D[43]);
	const T D510 =  (D[22]);
	const T D600 =  (D[21]);
	if( do_phi ) {
		L[0] *= T(1.2000000000000000e+02);
		L[0] = FMA(M500, D500, L[0]);
		L[0] = FMA(M050, D050, L[0]);
		L[0] = FMA(M005, D005, L[0]);
		L[0] *= T(2.0000000000000001e-01);
		L[0] = FMA(M041, D041, L[0]);
		L[0] = FMA(M140, D140, L[0]);
		L[0] = FMA(M104, D104, L[0]);
		L[0] = FMA(M040, D040, L[0]);
		L[0] = FMA(M014, D014, L[0]);
		L[0] = FMA(M400, D400, L[0]);
		L[0] = FMA(M410, D410, L[0]);
		L[0] = FMA(M401, D401, L[0]);
		L[0] = FMA(M004, D004, L[0]);
		L[0] *= T(5.0000000000000000e-01);
		L[0] = FMA(M320, D320, L[0]);
		L[0] = FMA(M203, D203, L[0]);
		L[0] = FMA(M023, D023, L[0]);
		L[0] = FMA(M032, D032, L[0]);
		L[0] = FMA(M230, D230, L[0]);
		L[0] = FMA(M302, D302, L[0]);
		L[0] *= T(5.0000000000000000e-01);
		L[0] = FMA(M013, D013, L[0]);
		L[0] = FMA(M131, D131, L[0]);
		L[0] = FMA(M130, D130, L[0]);
		L[0] = FMA(M113, D113, L[0]);
		L[0] = FMA(M003, D003, L[0]);
		L[0] = FMA(M103, D103, L[0]);
		L[0] = FMA(M300, D300, L[0]);
		L[0] = FMA(M301, D301, L[0]);
		L[0] = FMA(M031, D031, L[0]);
		L[0] = FMA(M030, D030, L[0]);
		L[0] = FMA(M310, D310, L[0]);
		L[0] = FMA(M311, D311, L[0]);
		L[0] *= T(6.6666666666666663e-01);
		L[0] = FMA(M221, D221, L[0]);
		L[0] = FMA(M220, D220, L[0]);
		L[0] = FMA(M212, D212, L[0]);
		L[0] = FMA(M122, D122, L[0]);
		L[0] = FMA(M022, D022, L[0]);
		L[0] = FMA(M202, D202, L[0]);
		L[0] *= T(5.0000000000000000e-01);
		L[0] = FMA(M112, D112, L[0]);
		L[0] = FMA(M211, D211, L[0]);
		L[0] = FMA(M210, D210, L[0]);
		L[0] = FMA(M200, D200, L[0]);
		L[0] = FMA(M121, D121, L[0]);
		L[0] = FMA(M120, D120, L[0]);
		L[0] = FMA(M201, D201, L[0]);
		L[0] = FMA(M002, D002, L[0]);
		L[0] = FMA(M102, D102, L[0]);
		L[0] = FMA(M012, D012, L[0]);
		L[0] = FMA(M021, D021, L[0]);
		L[0] = FMA(M020, D020, L[0]);
		L[0] *= T(5.0000000000000000e-01);
		L[0] = FMA(M001, D001, L[0]);
		L[0] = FMA(M010, D010, L[0]);
		L[0] = FMA(M011, D011, L[0]);
		L[0] = FMA(M100, D100, L[0]);
		L[0] = FMA(M101, D101, L[0]);
		L[0] = FMA(M110, D110, L[0]);
		L[0] = FMA(M111, D111, L[0]);
		L[0] = FMA(M000, D000, L[0]);
	}
	L[1] *= T(1.2000000000000000e+02);
	L[13] *= T(2.0000000000000000e+00);
	L[1] = FMA(M500, D600, L[1]);
	L[13] = FMA(M002, D132, L[13]);
	L[1] = FMA(M050, D150, L[1]);
	L[13] = FMA(M020, D150, L[13]);
	L[1] = FMA(M005, D105, L[1]);
	L[13] = FMA(M200, D330, L[13]);
	L[1] *= T(2.0000000000000001e-01);
	L[13] *= T(5.0000000000000000e-01);
	L[1] = FMA(M041, D141, L[1]);
	L[13] = FMA(M000, D130, L[13]);
	L[1] = FMA(M140, D240, L[1]);
	L[13] = FMA(M001, D131, L[13]);
	L[1] = FMA(M104, D204, L[1]);
	L[13] = FMA(M010, D140, L[13]);
	L[1] = FMA(M040, D140, L[1]);
	L[13] = FMA(M011, D141, L[13]);
	L[1] = FMA(M014, D114, L[1]);
	L[13] = FMA(M100, D230, L[13]);
	L[1] = FMA(M400, D500, L[1]);
	L[13] = FMA(M101, D231, L[13]);
	L[1] = FMA(M410, D510, L[1]);
	L[13] = FMA(M110, D240, L[13]);
	L[1] = FMA(M401, D501, L[1]);
	L[14] *= T(2.0000000000000000e+00);
	L[1] = FMA(M004, D104, L[1]);
	L[14] = FMA(M002, D042, L[14]);
	L[1] *= T(5.0000000000000000e-01);
	L[14] = FMA(M020, D060, L[14]);
	L[1] = FMA(M320, D420, L[1]);
	L[14] = FMA(M200, D240, L[14]);
	L[1] = FMA(M203, D303, L[1]);
	L[14] *= T(5.0000000000000000e-01);
	L[1] = FMA(M023, D123, L[1]);
	L[14] = FMA(M000, D040, L[14]);
	L[1] = FMA(M032, D132, L[1]);
	L[14] = FMA(M001, D041, L[14]);
	L[1] = FMA(M230, D330, L[1]);
	L[14] = FMA(M010, D050, L[14]);
	L[1] = FMA(M302, D402, L[1]);
	L[14] = FMA(M011, D051, L[14]);
	L[1] *= T(5.0000000000000000e-01);
	L[14] = FMA(M100, D140, L[14]);
	L[1] = FMA(M013, D113, L[1]);
	L[14] = FMA(M101, D141, L[14]);
	L[1] = FMA(M131, D231, L[1]);
	L[14] = FMA(M110, D150, L[14]);
	L[1] = FMA(M130, D230, L[1]);
	L[15] = FMA(M000, D500, L[15]);
	L[1] = FMA(M113, D213, L[1]);
	L[15] = FMA(M001, D501, L[15]);
	L[1] = FMA(M003, D103, L[1]);
	L[15] = FMA(M010, D510, L[15]);
	L[1] = FMA(M103, D203, L[1]);
	L[15] = FMA(M100, D600, L[15]);
	L[1] = FMA(M300, D400, L[1]);
	L[16] = FMA(M000, D410, L[16]);
	L[1] = FMA(M301, D401, L[1]);
	L[16] = FMA(M001, D411, L[16]);
	L[1] = FMA(M031, D131, L[1]);
	L[16] = FMA(M010, D420, L[16]);
	L[1] = FMA(M030, D130, L[1]);
	L[16] = FMA(M100, D510, L[16]);
	L[1] = FMA(M310, D410, L[1]);
	L[17] = FMA(M000, D320, L[17]);
	L[1] = FMA(M311, D411, L[1]);
	L[17] = FMA(M001, D321, L[17]);
	L[1] *= T(6.6666666666666663e-01);
	L[17] = FMA(M010, D330, L[17]);
	L[1] = FMA(M221, D321, L[1]);
	L[17] = FMA(M100, D420, L[17]);
	L[1] = FMA(M220, D320, L[1]);
	L[18] = FMA(M000, D230, L[18]);
	L[1] = FMA(M212, D312, L[1]);
	L[18] = FMA(M001, D231, L[18]);
	L[1] = FMA(M122, D222, L[1]);
	L[18] = FMA(M010, D240, L[18]);
	L[1] = FMA(M022, D122, L[1]);
	L[18] = FMA(M100, D330, L[18]);
	L[1] = FMA(M202, D302, L[1]);
	L[19] = FMA(M000, D140, L[19]);
	L[1] *= T(5.0000000000000000e-01);
	L[19] = FMA(M001, D141, L[19]);
	L[1] = FMA(M112, D212, L[1]);
	L[19] = FMA(M010, D150, L[19]);
	L[1] = FMA(M211, D311, L[1]);
	L[19] = FMA(M100, D240, L[19]);
	L[1] = FMA(M210, D310, L[1]);
	L[20] = FMA(M000, D050, L[20]);
	L[1] = FMA(M200, D300, L[1]);
	L[20] = FMA(M001, D051, L[20]);
	L[1] = FMA(M121, D221, L[1]);
	L[20] = FMA(M010, D060, L[20]);
	L[1] = FMA(M120, D220, L[1]);
	L[20] = FMA(M100, D150, L[20]);
	L[1] = FMA(M201, D301, L[1]);
	L[21] = FMA(M000, D600, L[21]);
	L[1] = FMA(M002, D102, L[1]);
	L[22] = FMA(M000, D510, L[22]);
	L[1] = FMA(M102, D202, L[1]);
	L[23] = FMA(M000, D420, L[23]);
	L[1] = FMA(M012, D112, L[1]);
	L[24] = FMA(M000, D330, L[24]);
	L[1] = FMA(M021, D121, L[1]);
	L[25] = FMA(M000, D240, L[25]);
	L[1] = FMA(M020, D120, L[1]);
	L[26] = FMA(M000, D150, L[26]);
	L[1] *= T(5.0000000000000000e-01);
	L[27] = FMA(M000, D060, L[27]);
	L[1] = FMA(M001, D101, L[1]);
	L[28] *= T(1.2000000000000000e+02);
	L[1] = FMA(M010, D110, L[1]);
	L[28] = FMA(M500, D501, L[28]);
	L[1] = FMA(M011, D111, L[1]);
	L[28] = FMA(M050, D051, L[28]);
	L[1] = FMA(M100, D200, L[1]);
	L[28] = FMA(M005, D006, L[28]);
	L[1] = FMA(M101, D201, L[1]);
	L[28] *= T(2.0000000000000001e-01);
	L[1] = FMA(M110, D210, L[1]);
	L[28] = FMA(M041, D042, L[28]);
	L[1] = FMA(M111, D211, L[1]);
	L[28] = FMA(M140, D141, L[28]);
	L[1] = FMA(M000, D100, L[1]);
	L[28] = FMA(M104, D105, L[28]);
	L[2] *= T(1.2000000000000000e+02);
	L[28] = FMA(M040, D041, L[28]);
	L[2] = FMA(M500, D510, L[2]);
	L[28] = FMA(M014, D015, L[28]);
	L[2] = FMA(M050, D060, L[2]);
	L[28] = FMA(M400, D401, L[28]);
	L[2] = FMA(M005, D015, L[2]);
	L[28] = FMA(M410, D411, L[28]);
	L[2] *= T(2.0000000000000001e-01);
	L[28] = FMA(M401, D402, L[28]);
	L[2] = FMA(M041, D051, L[2]);
	L[28] = FMA(M004, D005, L[28]);
	L[2] = FMA(M140, D150, L[2]);
	L[28] *= T(5.0000000000000000e-01);
	L[2] = FMA(M104, D114, L[2]);
	L[28] = FMA(M320, D321, L[28]);
	L[2] = FMA(M040, D050, L[2]);
	L[28] = FMA(M203, D204, L[28]);
	L[2] = FMA(M014, D024, L[2]);
	L[28] = FMA(M023, D024, L[28]);
	L[2] = FMA(M400, D410, L[2]);
	L[28] = FMA(M032, D033, L[28]);
	L[2] = FMA(M410, D420, L[2]);
	L[28] = FMA(M230, D231, L[28]);
	L[2] = FMA(M401, D411, L[2]);
	L[28] = FMA(M302, D303, L[28]);
	L[2] = FMA(M004, D014, L[2]);
	L[28] *= T(5.0000000000000000e-01);
	L[2] *= T(5.0000000000000000e-01);
	L[28] = FMA(M013, D014, L[28]);
	L[2] = FMA(M320, D330, L[2]);
	L[28] = FMA(M131, D132, L[28]);
	L[2] = FMA(M203, D213, L[2]);
	L[28] = FMA(M130, D131, L[28]);
	L[2] = FMA(M023, D033, L[2]);
	L[28] = FMA(M113, D114, L[28]);
	L[2] = FMA(M032, D042, L[2]);
	L[28] = FMA(M003, D004, L[28]);
	L[2] = FMA(M230, D240, L[2]);
	L[28] = FMA(M103, D104, L[28]);
	L[2] = FMA(M302, D312, L[2]);
	L[28] = FMA(M300, D301, L[28]);
	L[2] *= T(5.0000000000000000e-01);
	L[28] = FMA(M301, D302, L[28]);
	L[2] = FMA(M013, D023, L[2]);
	L[28] = FMA(M031, D032, L[28]);
	L[2] = FMA(M131, D141, L[2]);
	L[28] = FMA(M030, D031, L[28]);
	L[2] = FMA(M130, D140, L[2]);
	L[28] = FMA(M310, D311, L[28]);
	L[2] = FMA(M113, D123, L[2]);
	L[28] = FMA(M311, D312, L[28]);
	L[2] = FMA(M003, D013, L[2]);
	L[28] *= T(6.6666666666666663e-01);
	L[2] = FMA(M103, D113, L[2]);
	L[28] = FMA(M221, D222, L[28]);
	L[2] = FMA(M300, D310, L[2]);
	L[28] = FMA(M220, D221, L[28]);
	L[2] = FMA(M301, D311, L[2]);
	L[28] = FMA(M212, D213, L[28]);
	L[2] = FMA(M031, D041, L[2]);
	L[28] = FMA(M122, D123, L[28]);
	L[2] = FMA(M030, D040, L[2]);
	L[28] = FMA(M022, D023, L[28]);
	L[2] = FMA(M310, D320, L[2]);
	L[28] = FMA(M202, D203, L[28]);
	L[2] = FMA(M311, D321, L[2]);
	L[28] *= T(5.0000000000000000e-01);
	L[2] *= T(6.6666666666666663e-01);
	L[28] = FMA(M112, D113, L[28]);
	L[2] = FMA(M221, D231, L[2]);
	L[28] = FMA(M211, D212, L[28]);
	L[2] = FMA(M220, D230, L[2]);
	L[28] = FMA(M210, D211, L[28]);
	L[2] = FMA(M212, D222, L[2]);
	L[28] = FMA(M200, D201, L[28]);
	L[2] = FMA(M122, D132, L[2]);
	L[28] = FMA(M121, D122, L[28]);
	L[2] = FMA(M022, D032, L[2]);
	L[28] = FMA(M120, D121, L[28]);
	L[2] = FMA(M202, D212, L[2]);
	L[28] = FMA(M201, D202, L[28]);
	L[2] *= T(5.0000000000000000e-01);
	L[28] = FMA(M002, D003, L[28]);
	L[2] = FMA(M112, D122, L[2]);
	L[28] = FMA(M102, D103, L[28]);
	L[2] = FMA(M211, D221, L[2]);
	L[28] = FMA(M012, D013, L[28]);
	L[2] = FMA(M210, D220, L[2]);
	L[28] = FMA(M021, D022, L[28]);
	L[2] = FMA(M200, D210, L[2]);
	L[28] = FMA(M020, D021, L[28]);
	L[2] = FMA(M121, D131, L[2]);
	L[28] *= T(5.0000000000000000e-01);
	L[2] = FMA(M120, D130, L[2]);
	L[28] = FMA(M001, D002, L[28]);
	L[2] = FMA(M201, D211, L[2]);
	L[28] = FMA(M010, D011, L[28]);
	L[2] = FMA(M002, D012, L[2]);
	L[28] = FMA(M011, D012, L[28]);
	L[2] = FMA(M102, D112, L[2]);
	L[28] = FMA(M100, D101, L[28]);
	L[2] = FMA(M012, D022, L[2]);
	L[28] = FMA(M101, D102, L[28]);
	L[2] = FMA(M021, D031, L[2]);
	L[28] = FMA(M110, D111, L[28]);
	L[2] = FMA(M020, D030, L[2]);
	L[28] = FMA(M111, D112, L[28]);
	L[2] *= T(5.0000000000000000e-01);
	L[28] = FMA(M000, D001, L[28]);
	L[2] = FMA(M001, D011, L[2]);
	L[29] *= T(2.4000000000000000e+01);
	L[2] = FMA(M010, D020, L[2]);
	L[29] = FMA(M400, D501, L[29]);
	L[2] = FMA(M011, D021, L[2]);
	L[29] = FMA(M004, D105, L[29]);
	L[2] = FMA(M100, D110, L[2]);
	L[29] = FMA(M040, D141, L[29]);
	L[2] = FMA(M101, D111, L[2]);
	L[29] *= T(2.5000000000000000e-01);
	L[2] = FMA(M110, D120, L[2]);
	L[29] = FMA(M310, D411, L[29]);
	L[2] = FMA(M111, D121, L[2]);
	L[29] = FMA(M003, D104, L[29]);
	L[2] = FMA(M000, D010, L[2]);
	L[29] = FMA(M301, D402, L[29]);
	L[3] *= T(2.4000000000000000e+01);
	L[29] = FMA(M300, D401, L[29]);
	L[3] = FMA(M400, D600, L[3]);
	L[29] = FMA(M130, D231, L[29]);
	L[3] = FMA(M004, D204, L[3]);
	L[29] = FMA(M013, D114, L[29]);
	L[3] = FMA(M040, D240, L[3]);
	L[29] = FMA(M103, D204, L[29]);
	L[3] *= T(2.5000000000000000e-01);
	L[29] = FMA(M030, D131, L[29]);
	L[3] = FMA(M310, D510, L[3]);
	L[29] = FMA(M031, D132, L[29]);
	L[3] = FMA(M003, D203, L[3]);
	L[29] *= T(6.6666666666666663e-01);
	L[3] = FMA(M301, D501, L[3]);
	L[29] = FMA(M022, D123, L[29]);
	L[3] = FMA(M300, D500, L[3]);
	L[29] = FMA(M202, D303, L[29]);
	L[3] = FMA(M130, D330, L[3]);
	L[29] = FMA(M220, D321, L[29]);
	L[3] = FMA(M013, D213, L[3]);
	L[29] *= T(5.0000000000000000e-01);
	L[3] = FMA(M103, D303, L[3]);
	L[29] = FMA(M102, D203, L[29]);
	L[3] = FMA(M030, D230, L[3]);
	L[29] = FMA(M210, D311, L[29]);
	L[3] = FMA(M031, D231, L[3]);
	L[29] = FMA(M201, D302, L[29]);
	L[3] *= T(6.6666666666666663e-01);
	L[29] = FMA(M200, D301, L[29]);
	L[3] = FMA(M022, D222, L[3]);
	L[29] = FMA(M211, D312, L[29]);
	L[3] = FMA(M202, D402, L[3]);
	L[29] = FMA(M121, D222, L[29]);
	L[3] = FMA(M220, D420, L[3]);
	L[29] = FMA(M120, D221, L[29]);
	L[3] *= T(5.0000000000000000e-01);
	L[29] = FMA(M112, D213, L[29]);
	L[3] = FMA(M102, D302, L[3]);
	L[29] = FMA(M021, D122, L[29]);
	L[3] = FMA(M210, D410, L[3]);
	L[29] = FMA(M020, D121, L[29]);
	L[3] = FMA(M201, D401, L[3]);
	L[29] = FMA(M012, D113, L[29]);
	L[3] = FMA(M200, D400, L[3]);
	L[29] = FMA(M002, D103, L[29]);
	L[3] = FMA(M211, D411, L[3]);
	L[29] *= T(5.0000000000000000e-01);
	L[3] = FMA(M121, D321, L[3]);
	L[29] = FMA(M111, D212, L[29]);
	L[3] = FMA(M120, D320, L[3]);
	L[29] = FMA(M110, D211, L[29]);
	L[3] = FMA(M112, D312, L[3]);
	L[29] = FMA(M000, D101, L[29]);
	L[3] = FMA(M021, D221, L[3]);
	L[29] = FMA(M101, D202, L[29]);
	L[3] = FMA(M020, D220, L[3]);
	L[29] = FMA(M100, D201, L[29]);
	L[3] = FMA(M012, D212, L[3]);
	L[29] = FMA(M011, D112, L[29]);
	L[3] = FMA(M002, D202, L[3]);
	L[29] = FMA(M010, D111, L[29]);
	L[3] *= T(5.0000000000000000e-01);
	L[29] = FMA(M001, D102, L[29]);
	L[3] = FMA(M111, D311, L[3]);
	L[30] *= T(2.4000000000000000e+01);
	L[3] = FMA(M110, D310, L[3]);
	L[30] = FMA(M400, D411, L[30]);
	L[3] = FMA(M000, D200, L[3]);
	L[30] = FMA(M004, D015, L[30]);
	L[3] = FMA(M101, D301, L[3]);
	L[30] = FMA(M040, D051, L[30]);
	L[3] = FMA(M100, D300, L[3]);
	L[30] *= T(2.5000000000000000e-01);
	L[3] = FMA(M011, D211, L[3]);
	L[30] = FMA(M310, D321, L[30]);
	L[3] = FMA(M010, D210, L[3]);
	L[30] = FMA(M003, D014, L[30]);
	L[3] = FMA(M001, D201, L[3]);
	L[30] = FMA(M301, D312, L[30]);
	L[4] *= T(2.4000000000000000e+01);
	L[30] = FMA(M300, D311, L[30]);
	L[4] = FMA(M400, D510, L[4]);
	L[30] = FMA(M130, D141, L[30]);
	L[4] = FMA(M004, D114, L[4]);
	L[30] = FMA(M013, D024, L[30]);
	L[4] = FMA(M040, D150, L[4]);
	L[30] = FMA(M103, D114, L[30]);
	L[4] *= T(2.5000000000000000e-01);
	L[30] = FMA(M030, D041, L[30]);
	L[4] = FMA(M310, D420, L[4]);
	L[30] = FMA(M031, D042, L[30]);
	L[4] = FMA(M003, D113, L[4]);
	L[30] *= T(6.6666666666666663e-01);
	L[4] = FMA(M301, D411, L[4]);
	L[30] = FMA(M022, D033, L[30]);
	L[4] = FMA(M300, D410, L[4]);
	L[30] = FMA(M202, D213, L[30]);
	L[4] = FMA(M130, D240, L[4]);
	L[30] = FMA(M220, D231, L[30]);
	L[4] = FMA(M013, D123, L[4]);
	L[30] *= T(5.0000000000000000e-01);
	L[4] = FMA(M103, D213, L[4]);
	L[30] = FMA(M102, D113, L[30]);
	L[4] = FMA(M030, D140, L[4]);
	L[30] = FMA(M210, D221, L[30]);
	L[4] = FMA(M031, D141, L[4]);
	L[30] = FMA(M201, D212, L[30]);
	L[4] *= T(6.6666666666666663e-01);
	L[30] = FMA(M200, D211, L[30]);
	L[4] = FMA(M022, D132, L[4]);
	L[30] = FMA(M211, D222, L[30]);
	L[4] = FMA(M202, D312, L[4]);
	L[30] = FMA(M121, D132, L[30]);
	L[4] = FMA(M220, D330, L[4]);
	L[30] = FMA(M120, D131, L[30]);
	L[4] *= T(5.0000000000000000e-01);
	L[30] = FMA(M112, D123, L[30]);
	L[4] = FMA(M102, D212, L[4]);
	L[30] = FMA(M021, D032, L[30]);
	L[4] = FMA(M210, D320, L[4]);
	L[30] = FMA(M020, D031, L[30]);
	L[4] = FMA(M201, D311, L[4]);
	L[30] = FMA(M012, D023, L[30]);
	L[4] = FMA(M200, D310, L[4]);
	L[30] = FMA(M002, D013, L[30]);
	L[4] = FMA(M211, D321, L[4]);
	L[30] *= T(5.0000000000000000e-01);
	L[4] = FMA(M121, D231, L[4]);
	L[30] = FMA(M111, D122, L[30]);
	L[4] = FMA(M120, D230, L[4]);
	L[30] = FMA(M110, D121, L[30]);
	L[4] = FMA(M112, D222, L[4]);
	L[30] = FMA(M000, D011, L[30]);
	L[4] = FMA(M021, D131, L[4]);
	L[30] = FMA(M101, D112, L[30]);
	L[4] = FMA(M020, D130, L[4]);
	L[30] = FMA(M100, D111, L[30]);
	L[4] = FMA(M012, D122, L[4]);
	L[30] = FMA(M011, D022, L[30]);
	L[4] = FMA(M002, D112, L[4]);
	L[30] = FMA(M010, D021, L[30]);
	L[4] *= T(5.0000000000000000e-01);
	L[30] = FMA(M001, D012, L[30]);
	L[4] = FMA(M111, D221, L[4]);
	L[31] *= T(6.0000000000000000e+00);
	L[4] = FMA(M110, D220, L[4]);
	L[31] = FMA(M300, D501, L[31]);
	L[4] = FMA(M000, D110, L[4]);
	L[31] = FMA(M003, D204, L[31]);
	L[4] = FMA(M101, D211, L[4]);
	L[31] = FMA(M030, D231, L[31]);
	L[4] = FMA(M100, D210, L[4]);
	L[31] *= T(3.3333333333333331e-01);
	L[4] = FMA(M011, D121, L[4]);
	L[31] = FMA(M002, D203, L[31]);
	L[4] = FMA(M010, D120, L[4]);
	L[31] = FMA(M210, D411, L[31]);
	L[4] = FMA(M001, D111, L[4]);
	L[31] = FMA(M201, D402, L[31]);
	L[5] *= T(2.4000000000000000e+01);
	L[31] = FMA(M012, D213, L[31]);
	L[5] = FMA(M400, D420, L[5]);
	L[31] = FMA(M020, D221, L[31]);
	L[5] = FMA(M004, D024, L[5]);
	L[31] = FMA(M021, D222, L[31]);
	L[5] = FMA(M040, D060, L[5]);
	L[31] = FMA(M200, D401, L[31]);
	L[5] *= T(2.5000000000000000e-01);
	L[31] = FMA(M120, D321, L[31]);
	L[5] = FMA(M310, D330, L[5]);
	L[31] = FMA(M102, D303, L[31]);
	L[5] = FMA(M003, D023, L[5]);
	L[31] *= T(5.0000000000000000e-01);
	L[5] = FMA(M301, D321, L[5]);
	L[31] = FMA(M100, D301, L[31]);
	L[5] = FMA(M300, D320, L[5]);
	L[31] = FMA(M111, D312, L[31]);
	L[5] = FMA(M130, D150, L[5]);
	L[31] = FMA(M110, D311, L[31]);
	L[5] = FMA(M013, D033, L[5]);
	L[31] = FMA(M101, D302, L[31]);
	L[5] = FMA(M103, D123, L[5]);
	L[31] = FMA(M000, D201, L[31]);
	L[5] = FMA(M030, D050, L[5]);
	L[31] = FMA(M011, D212, L[31]);
	L[5] = FMA(M031, D051, L[5]);
	L[31] = FMA(M010, D211, L[31]);
	L[5] *= T(6.6666666666666663e-01);
	L[31] = FMA(M001, D202, L[31]);
	L[5] = FMA(M022, D042, L[5]);
	L[32] *= T(6.0000000000000000e+00);
	L[5] = FMA(M202, D222, L[5]);
	L[32] = FMA(M300, D411, L[32]);
	L[5] = FMA(M220, D240, L[5]);
	L[32] = FMA(M003, D114, L[32]);
	L[5] *= T(5.0000000000000000e-01);
	L[32] = FMA(M030, D141, L[32]);
	L[5] = FMA(M102, D122, L[5]);
	L[32] *= T(3.3333333333333331e-01);
	L[5] = FMA(M210, D230, L[5]);
	L[32] = FMA(M002, D113, L[32]);
	L[5] = FMA(M201, D221, L[5]);
	L[32] = FMA(M210, D321, L[32]);
	L[5] = FMA(M200, D220, L[5]);
	L[32] = FMA(M201, D312, L[32]);
	L[5] = FMA(M211, D231, L[5]);
	L[32] = FMA(M012, D123, L[32]);
	L[5] = FMA(M121, D141, L[5]);
	L[32] = FMA(M020, D131, L[32]);
	L[5] = FMA(M120, D140, L[5]);
	L[32] = FMA(M021, D132, L[32]);
	L[5] = FMA(M112, D132, L[5]);
	L[32] = FMA(M200, D311, L[32]);
	L[5] = FMA(M021, D041, L[5]);
	L[32] = FMA(M120, D231, L[32]);
	L[5] = FMA(M020, D040, L[5]);
	L[32] = FMA(M102, D213, L[32]);
	L[5] = FMA(M012, D032, L[5]);
	L[32] *= T(5.0000000000000000e-01);
	L[5] = FMA(M002, D022, L[5]);
	L[32] = FMA(M100, D211, L[32]);
	L[5] *= T(5.0000000000000000e-01);
	L[32] = FMA(M111, D222, L[32]);
	L[5] = FMA(M111, D131, L[5]);
	L[32] = FMA(M110, D221, L[32]);
	L[5] = FMA(M110, D130, L[5]);
	L[32] = FMA(M101, D212, L[32]);
	L[5] = FMA(M000, D020, L[5]);
	L[32] = FMA(M000, D111, L[32]);
	L[5] = FMA(M101, D121, L[5]);
	L[32] = FMA(M011, D122, L[32]);
	L[5] = FMA(M100, D120, L[5]);
	L[32] = FMA(M010, D121, L[32]);
	L[5] = FMA(M011, D031, L[5]);
	L[32] = FMA(M001, D112, L[32]);
	L[5] = FMA(M010, D030, L[5]);
	L[33] *= T(6.0000000000000000e+00);
	L[5] = FMA(M001, D021, L[5]);
	L[33] = FMA(M300, D321, L[33]);
	L[6] *= T(6.0000000000000000e+00);
	L[33] = FMA(M003, D024, L[33]);
	L[6] = FMA(M300, D600, L[6]);
	L[33] = FMA(M030, D051, L[33]);
	L[6] = FMA(M003, D303, L[6]);
	L[33] *= T(3.3333333333333331e-01);
	L[6] = FMA(M030, D330, L[6]);
	L[33] = FMA(M002, D023, L[33]);
	L[6] *= T(3.3333333333333331e-01);
	L[33] = FMA(M210, D231, L[33]);
	L[6] = FMA(M002, D302, L[6]);
	L[33] = FMA(M201, D222, L[33]);
	L[6] = FMA(M210, D510, L[6]);
	L[33] = FMA(M012, D033, L[33]);
	L[6] = FMA(M201, D501, L[6]);
	L[33] = FMA(M020, D041, L[33]);
	L[6] = FMA(M012, D312, L[6]);
	L[33] = FMA(M021, D042, L[33]);
	L[6] = FMA(M020, D320, L[6]);
	L[33] = FMA(M200, D221, L[33]);
	L[6] = FMA(M021, D321, L[6]);
	L[33] = FMA(M120, D141, L[33]);
	L[6] = FMA(M200, D500, L[6]);
	L[33] = FMA(M102, D123, L[33]);
	L[6] = FMA(M120, D420, L[6]);
	L[33] *= T(5.0000000000000000e-01);
	L[6] = FMA(M102, D402, L[6]);
	L[33] = FMA(M100, D121, L[33]);
	L[6] *= T(5.0000000000000000e-01);
	L[33] = FMA(M111, D132, L[33]);
	L[6] = FMA(M100, D400, L[6]);
	L[33] = FMA(M110, D131, L[33]);
	L[6] = FMA(M111, D411, L[6]);
	L[33] = FMA(M101, D122, L[33]);
	L[6] = FMA(M110, D410, L[6]);
	L[33] = FMA(M000, D021, L[33]);
	L[6] = FMA(M101, D401, L[6]);
	L[33] = FMA(M011, D032, L[33]);
	L[6] = FMA(M000, D300, L[6]);
	L[33] = FMA(M010, D031, L[33]);
	L[6] = FMA(M011, D311, L[6]);
	L[33] = FMA(M001, D022, L[33]);
	L[6] = FMA(M010, D310, L[6]);
	L[34] *= T(2.0000000000000000e+00);
	L[6] = FMA(M001, D301, L[6]);
	L[34] = FMA(M002, D303, L[34]);
	L[7] *= T(6.0000000000000000e+00);
	L[34] = FMA(M020, D321, L[34]);
	L[7] = FMA(M300, D510, L[7]);
	L[34] = FMA(M200, D501, L[34]);
	L[7] = FMA(M003, D213, L[7]);
	L[34] *= T(5.0000000000000000e-01);
	L[7] = FMA(M030, D240, L[7]);
	L[34] = FMA(M000, D301, L[34]);
	L[7] *= T(3.3333333333333331e-01);
	L[34] = FMA(M001, D302, L[34]);
	L[7] = FMA(M002, D212, L[7]);
	L[34] = FMA(M010, D311, L[34]);
	L[7] = FMA(M210, D420, L[7]);
	L[34] = FMA(M011, D312, L[34]);
	L[7] = FMA(M201, D411, L[7]);
	L[34] = FMA(M100, D401, L[34]);
	L[7] = FMA(M012, D222, L[7]);
	L[34] = FMA(M101, D402, L[34]);
	L[7] = FMA(M020, D230, L[7]);
	L[34] = FMA(M110, D411, L[34]);
	L[7] = FMA(M021, D231, L[7]);
	L[35] *= T(2.0000000000000000e+00);
	L[7] = FMA(M200, D410, L[7]);
	L[35] = FMA(M002, D213, L[35]);
	L[7] = FMA(M120, D330, L[7]);
	L[35] = FMA(M020, D231, L[35]);
	L[7] = FMA(M102, D312, L[7]);
	L[35] = FMA(M200, D411, L[35]);
	L[7] *= T(5.0000000000000000e-01);
	L[35] *= T(5.0000000000000000e-01);
	L[7] = FMA(M100, D310, L[7]);
	L[35] = FMA(M000, D211, L[35]);
	L[7] = FMA(M111, D321, L[7]);
	L[35] = FMA(M001, D212, L[35]);
	L[7] = FMA(M110, D320, L[7]);
	L[35] = FMA(M010, D221, L[35]);
	L[7] = FMA(M101, D311, L[7]);
	L[35] = FMA(M011, D222, L[35]);
	L[7] = FMA(M000, D210, L[7]);
	L[35] = FMA(M100, D311, L[35]);
	L[7] = FMA(M011, D221, L[7]);
	L[35] = FMA(M101, D312, L[35]);
	L[7] = FMA(M010, D220, L[7]);
	L[35] = FMA(M110, D321, L[35]);
	L[7] = FMA(M001, D211, L[7]);
	L[36] *= T(2.0000000000000000e+00);
	L[8] *= T(6.0000000000000000e+00);
	L[36] = FMA(M002, D123, L[36]);
	L[8] = FMA(M300, D420, L[8]);
	L[36] = FMA(M020, D141, L[36]);
	L[8] = FMA(M003, D123, L[8]);
	L[36] = FMA(M200, D321, L[36]);
	L[8] = FMA(M030, D150, L[8]);
	L[36] *= T(5.0000000000000000e-01);
	L[8] *= T(3.3333333333333331e-01);
	L[36] = FMA(M000, D121, L[36]);
	L[8] = FMA(M002, D122, L[8]);
	L[36] = FMA(M001, D122, L[36]);
	L[8] = FMA(M210, D330, L[8]);
	L[36] = FMA(M010, D131, L[36]);
	L[8] = FMA(M201, D321, L[8]);
	L[36] = FMA(M011, D132, L[36]);
	L[8] = FMA(M012, D132, L[8]);
	L[36] = FMA(M100, D221, L[36]);
	L[8] = FMA(M020, D140, L[8]);
	L[36] = FMA(M101, D222, L[36]);
	L[8] = FMA(M021, D141, L[8]);
	L[36] = FMA(M110, D231, L[36]);
	L[8] = FMA(M200, D320, L[8]);
	L[37] *= T(2.0000000000000000e+00);
	L[8] = FMA(M120, D240, L[8]);
	L[37] = FMA(M002, D033, L[37]);
	L[8] = FMA(M102, D222, L[8]);
	L[37] = FMA(M020, D051, L[37]);
	L[8] *= T(5.0000000000000000e-01);
	L[37] = FMA(M200, D231, L[37]);
	L[8] = FMA(M100, D220, L[8]);
	L[37] *= T(5.0000000000000000e-01);
	L[8] = FMA(M111, D231, L[8]);
	L[37] = FMA(M000, D031, L[37]);
	L[8] = FMA(M110, D230, L[8]);
	L[37] = FMA(M001, D032, L[37]);
	L[8] = FMA(M101, D221, L[8]);
	L[37] = FMA(M010, D041, L[37]);
	L[8] = FMA(M000, D120, L[8]);
	L[37] = FMA(M011, D042, L[37]);
	L[8] = FMA(M011, D131, L[8]);
	L[37] = FMA(M100, D131, L[37]);
	L[8] = FMA(M010, D130, L[8]);
	L[37] = FMA(M101, D132, L[37]);
	L[8] = FMA(M001, D121, L[8]);
	L[37] = FMA(M110, D141, L[37]);
	L[9] *= T(6.0000000000000000e+00);
	L[38] = FMA(M000, D401, L[38]);
	L[9] = FMA(M300, D330, L[9]);
	L[38] = FMA(M001, D402, L[38]);
	L[9] = FMA(M003, D033, L[9]);
	L[38] = FMA(M010, D411, L[38]);
	L[9] = FMA(M030, D060, L[9]);
	L[38] = FMA(M100, D501, L[38]);
	L[9] *= T(3.3333333333333331e-01);
	L[39] = FMA(M000, D311, L[39]);
	L[9] = FMA(M002, D032, L[9]);
	L[39] = FMA(M001, D312, L[39]);
	L[9] = FMA(M210, D240, L[9]);
	L[39] = FMA(M010, D321, L[39]);
	L[9] = FMA(M201, D231, L[9]);
	L[39] = FMA(M100, D411, L[39]);
	L[9] = FMA(M012, D042, L[9]);
	L[40] = FMA(M000, D221, L[40]);
	L[9] = FMA(M020, D050, L[9]);
	L[40] = FMA(M001, D222, L[40]);
	L[9] = FMA(M021, D051, L[9]);
	L[40] = FMA(M010, D231, L[40]);
	L[9] = FMA(M200, D230, L[9]);
	L[40] = FMA(M100, D321, L[40]);
	L[9] = FMA(M120, D150, L[9]);
	L[41] = FMA(M000, D131, L[41]);
	L[9] = FMA(M102, D132, L[9]);
	L[41] = FMA(M001, D132, L[41]);
	L[9] *= T(5.0000000000000000e-01);
	L[41] = FMA(M010, D141, L[41]);
	L[9] = FMA(M100, D130, L[9]);
	L[41] = FMA(M100, D231, L[41]);
	L[9] = FMA(M111, D141, L[9]);
	L[42] = FMA(M000, D041, L[42]);
	L[9] = FMA(M110, D140, L[9]);
	L[42] = FMA(M001, D042, L[42]);
	L[9] = FMA(M101, D131, L[9]);
	L[42] = FMA(M010, D051, L[42]);
	L[9] = FMA(M000, D030, L[9]);
	L[42] = FMA(M100, D141, L[42]);
	L[9] = FMA(M011, D041, L[9]);
	L[43] = FMA(M000, D501, L[43]);
	L[9] = FMA(M010, D040, L[9]);
	L[44] = FMA(M000, D411, L[44]);
	L[9] = FMA(M001, D031, L[9]);
	L[45] = FMA(M000, D321, L[45]);
	L[10] *= T(2.0000000000000000e+00);
	L[46] = FMA(M000, D231, L[46]);
	L[10] = FMA(M002, D402, L[10]);
	L[47] = FMA(M000, D141, L[47]);
	L[10] = FMA(M020, D420, L[10]);
	L[48] = FMA(M000, D051, L[48]);
	L[10] = FMA(M200, D600, L[10]);
	L[49] *= T(2.4000000000000000e+01);
	L[10] *= T(5.0000000000000000e-01);
	L[49] = FMA(M400, D402, L[49]);
	L[10] = FMA(M000, D400, L[10]);
	L[49] = FMA(M004, D006, L[49]);
	L[10] = FMA(M001, D401, L[10]);
	L[49] = FMA(M040, D042, L[49]);
	L[10] = FMA(M010, D410, L[10]);
	L[49] *= T(2.5000000000000000e-01);
	L[10] = FMA(M011, D411, L[10]);
	L[49] = FMA(M310, D312, L[49]);
	L[10] = FMA(M100, D500, L[10]);
	L[49] = FMA(M003, D005, L[49]);
	L[10] = FMA(M101, D501, L[10]);
	L[49] = FMA(M301, D303, L[49]);
	L[10] = FMA(M110, D510, L[10]);
	L[49] = FMA(M300, D302, L[49]);
	L[11] *= T(2.0000000000000000e+00);
	L[49] = FMA(M130, D132, L[49]);
	L[11] = FMA(M002, D312, L[11]);
	L[49] = FMA(M013, D015, L[49]);
	L[11] = FMA(M020, D330, L[11]);
	L[49] = FMA(M103, D105, L[49]);
	L[11] = FMA(M200, D510, L[11]);
	L[49] = FMA(M030, D032, L[49]);
	L[11] *= T(5.0000000000000000e-01);
	L[49] = FMA(M031, D033, L[49]);
	L[11] = FMA(M000, D310, L[11]);
	L[49] *= T(6.6666666666666663e-01);
	L[11] = FMA(M001, D311, L[11]);
	L[49] = FMA(M022, D024, L[49]);
	L[11] = FMA(M010, D320, L[11]);
	L[49] = FMA(M202, D204, L[49]);
	L[11] = FMA(M011, D321, L[11]);
	L[49] = FMA(M220, D222, L[49]);
	L[11] = FMA(M100, D410, L[11]);
	L[49] *= T(5.0000000000000000e-01);
	L[11] = FMA(M101, D411, L[11]);
	L[49] = FMA(M102, D104, L[49]);
	L[11] = FMA(M110, D420, L[11]);
	L[49] = FMA(M210, D212, L[49]);
	L[12] *= T(2.0000000000000000e+00);
	L[49] = FMA(M201, D203, L[49]);
	L[12] = FMA(M002, D222, L[12]);
	L[49] = FMA(M200, D202, L[49]);
	L[12] = FMA(M020, D240, L[12]);
	L[49] = FMA(M211, D213, L[49]);
	L[12] = FMA(M200, D420, L[12]);
	L[49] = FMA(M121, D123, L[49]);
	L[12] *= T(5.0000000000000000e-01);
	L[49] = FMA(M120, D122, L[49]);
	L[12] = FMA(M000, D220, L[12]);
	L[49] = FMA(M112, D114, L[49]);
	L[12] = FMA(M001, D221, L[12]);
	L[49] = FMA(M021, D023, L[49]);
	L[12] = FMA(M010, D230, L[12]);
	L[49] = FMA(M020, D022, L[49]);
	L[12] = FMA(M011, D231, L[12]);
	L[49] = FMA(M012, D014, L[49]);
	L[12] = FMA(M100, D320, L[12]);
	L[49] = FMA(M002, D004, L[49]);
	L[12] = FMA(M101, D321, L[12]);
	L[49] *= T(5.0000000000000000e-01);
	L[12] = FMA(M110, D330, L[12]);
	L[49] = FMA(M111, D113, L[49]);
	L[49] = FMA(M110, D112, L[49]);
	L[49] = FMA(M000, D002, L[49]);
	L[49] = FMA(M101, D103, L[49]);
	L[49] = FMA(M100, D102, L[49]);
	L[49] = FMA(M011, D013, L[49]);
	L[49] = FMA(M010, D012, L[49]);
	L[49] = FMA(M001, D003, L[49]);
	return 1583 + do_phi * 119;
}


template<class T>
CUDA_EXPORT
tensor_trless_sym<T, 7> P2M(array<T, NDIM>& X) {
	tensor_trless_sym<T, 7> M;
	X[0] *= -T(SCALE_FACTOR);
	X[1] *= -T(SCALE_FACTOR);
	X[2] *= -T(SCALE_FACTOR);
	T x[84];
	x[0] = T(1);
	x[1] = X[0];
	x[2] = X[1];
	x[3] = X[2];
	x[9] = x[3] * x[3]; // 0 0 2 | 0 0 1 | 0 0 1
	x[8] = x[2] * x[3]; // 0 1 1 | 0 0 1 | 0 1 0
	x[7] = x[2] * x[2]; // 0 2 0 | 0 1 0 | 0 1 0
	x[6] = x[1] * x[3]; // 1 0 1 | 0 0 1 | 1 0 0
	x[5] = x[1] * x[2]; // 1 1 0 | 0 1 0 | 1 0 0
	x[4] = x[1] * x[1]; // 2 0 0 | 1 0 0 | 1 0 0
	x[19] = x[9] * x[3]; // 0 0 3 | 0 0 1 | 0 0 2
	x[18] = x[8] * x[3]; // 0 1 2 | 0 0 1 | 0 1 1
	x[17] = x[8] * x[2]; // 0 2 1 | 0 1 0 | 0 1 1
	x[16] = x[7] * x[2]; // 0 3 0 | 0 1 0 | 0 2 0
	x[15] = x[6] * x[3]; // 1 0 2 | 0 0 1 | 1 0 1
	x[14] = x[5] * x[3]; // 1 1 1 | 0 0 1 | 1 1 0
	x[13] = x[5] * x[2]; // 1 2 0 | 0 1 0 | 1 1 0
	x[12] = x[6] * x[1]; // 2 0 1 | 1 0 0 | 1 0 1
	x[11] = x[5] * x[1]; // 2 1 0 | 1 0 0 | 1 1 0
	x[10] = x[4] * x[1]; // 3 0 0 | 1 0 0 | 2 0 0
	x[34] = x[9] * x[9]; // 0 0 4 | 0 0 2 | 0 0 2
	x[33] = x[8] * x[9]; // 0 1 3 | 0 0 2 | 0 1 1
	x[32] = x[8] * x[8]; // 0 2 2 | 0 1 1 | 0 1 1
	x[31] = x[8] * x[7]; // 0 3 1 | 0 2 0 | 0 1 1
	x[30] = x[7] * x[7]; // 0 4 0 | 0 2 0 | 0 2 0
	x[29] = x[6] * x[9]; // 1 0 3 | 0 0 2 | 1 0 1
	x[28] = x[5] * x[9]; // 1 1 2 | 0 0 2 | 1 1 0
	x[27] = x[5] * x[8]; // 1 2 1 | 0 1 1 | 1 1 0
	x[26] = x[5] * x[7]; // 1 3 0 | 0 2 0 | 1 1 0
	x[25] = x[6] * x[6]; // 2 0 2 | 1 0 1 | 1 0 1
	x[24] = x[5] * x[6]; // 2 1 1 | 1 0 1 | 1 1 0
	x[23] = x[5] * x[5]; // 2 2 0 | 1 1 0 | 1 1 0
	x[22] = x[6] * x[4]; // 3 0 1 | 2 0 0 | 1 0 1
	x[21] = x[5] * x[4]; // 3 1 0 | 2 0 0 | 1 1 0
	x[20] = x[4] * x[4]; // 4 0 0 | 2 0 0 | 2 0 0
	x[55] = x[19] * x[9]; // 0 0 5 | 0 0 2 | 0 0 3
	x[54] = x[18] * x[9]; // 0 1 4 | 0 0 2 | 0 1 2
	x[53] = x[17] * x[9]; // 0 2 3 | 0 0 2 | 0 2 1
	x[52] = x[17] * x[8]; // 0 3 2 | 0 1 1 | 0 2 1
	x[51] = x[17] * x[7]; // 0 4 1 | 0 2 0 | 0 2 1
	x[50] = x[16] * x[7]; // 0 5 0 | 0 2 0 | 0 3 0
	x[49] = x[15] * x[9]; // 1 0 4 | 0 0 2 | 1 0 2
	x[48] = x[14] * x[9]; // 1 1 3 | 0 0 2 | 1 1 1
	x[47] = x[14] * x[8]; // 1 2 2 | 0 1 1 | 1 1 1
	x[46] = x[14] * x[7]; // 1 3 1 | 0 2 0 | 1 1 1
	x[45] = x[13] * x[7]; // 1 4 0 | 0 2 0 | 1 2 0
	x[44] = x[12] * x[9]; // 2 0 3 | 0 0 2 | 2 0 1
	x[43] = x[14] * x[6]; // 2 1 2 | 1 0 1 | 1 1 1
	x[42] = x[14] * x[5]; // 2 2 1 | 1 1 0 | 1 1 1
	x[41] = x[11] * x[7]; // 2 3 0 | 0 2 0 | 2 1 0
	x[40] = x[12] * x[6]; // 3 0 2 | 1 0 1 | 2 0 1
	x[39] = x[14] * x[4]; // 3 1 1 | 2 0 0 | 1 1 1
	x[38] = x[11] * x[5]; // 3 2 0 | 1 1 0 | 2 1 0
	x[37] = x[12] * x[4]; // 4 0 1 | 2 0 0 | 2 0 1
	x[36] = x[11] * x[4]; // 4 1 0 | 2 0 0 | 2 1 0
	x[35] = x[10] * x[4]; // 5 0 0 | 2 0 0 | 3 0 0
	x[83] = x[19] * x[19]; // 0 0 6 | 0 0 3 | 0 0 3
	x[82] = x[18] * x[19]; // 0 1 5 | 0 0 3 | 0 1 2
	x[81] = x[17] * x[19]; // 0 2 4 | 0 0 3 | 0 2 1
	x[80] = x[17] * x[18]; // 0 3 3 | 0 1 2 | 0 2 1
	x[79] = x[17] * x[17]; // 0 4 2 | 0 2 1 | 0 2 1
	x[78] = x[17] * x[16]; // 0 5 1 | 0 3 0 | 0 2 1
	x[77] = x[16] * x[16]; // 0 6 0 | 0 3 0 | 0 3 0
	x[76] = x[15] * x[19]; // 1 0 5 | 0 0 3 | 1 0 2
	x[75] = x[14] * x[19]; // 1 1 4 | 0 0 3 | 1 1 1
	x[74] = x[14] * x[18]; // 1 2 3 | 0 1 2 | 1 1 1
	x[73] = x[14] * x[17]; // 1 3 2 | 0 2 1 | 1 1 1
	x[72] = x[14] * x[16]; // 1 4 1 | 0 3 0 | 1 1 1
	x[71] = x[13] * x[16]; // 1 5 0 | 0 3 0 | 1 2 0
	x[70] = x[12] * x[19]; // 2 0 4 | 0 0 3 | 2 0 1
	x[69] = x[14] * x[15]; // 2 1 3 | 1 0 2 | 1 1 1
	x[68] = x[14] * x[14]; // 2 2 2 | 1 1 1 | 1 1 1
	x[67] = x[14] * x[13]; // 2 3 1 | 1 2 0 | 1 1 1
	x[66] = x[11] * x[16]; // 2 4 0 | 0 3 0 | 2 1 0
	x[65] = x[12] * x[15]; // 3 0 3 | 1 0 2 | 2 0 1
	x[64] = x[14] * x[12]; // 3 1 2 | 2 0 1 | 1 1 1
	x[63] = x[14] * x[11]; // 3 2 1 | 2 1 0 | 1 1 1
	x[62] = x[11] * x[13]; // 3 3 0 | 1 2 0 | 2 1 0
	x[61] = x[12] * x[12]; // 4 0 2 | 2 0 1 | 2 0 1
	x[60] = x[14] * x[10]; // 4 1 1 | 3 0 0 | 1 1 1
	x[59] = x[11] * x[11]; // 4 2 0 | 2 1 0 | 2 1 0
	x[58] = x[12] * x[10]; // 5 0 1 | 3 0 0 | 2 0 1
	x[57] = x[11] * x[10]; // 5 1 0 | 3 0 0 | 2 1 0
	x[56] = x[10] * x[10]; // 6 0 0 | 3 0 0 | 3 0 0
	T x_2_1_000 = x[9];
	T x_3_1_001 = x[19];
	T x_4_1_002 = x[34];
	T x_5_1_003 = x[55];
	T x_6_1_004 = x[83];
	T x_3_1_010 = x[18];
	T x_4_1_011 = x[33];
	T x_5_1_012 = x[54];
	T x_6_1_013 = x[82];
	T x_4_1_020 = x[32];
	T x_5_1_021 = x[53];
	T x_6_1_022 = x[81];
	T x_5_1_030 = x[52];
	T x_6_1_031 = x[80];
	T x_6_1_040 = x[79];
	T x_3_1_100 = x[15];
	T x_4_1_101 = x[29];
	T x_5_1_102 = x[49];
	T x_6_1_103 = x[76];
	T x_4_1_110 = x[28];
	T x_5_1_111 = x[48];
	T x_6_1_112 = x[75];
	T x_5_1_120 = x[47];
	T x_6_1_121 = x[74];
	T x_6_1_130 = x[73];
	T x_4_1_200 = x[25];
	T x_5_1_201 = x[44];
	T x_6_1_202 = x[70];
	T x_5_1_210 = x[43];
	T x_6_1_211 = x[69];
	T x_6_1_220 = x[68];
	T x_5_1_300 = x[40];
	T x_6_1_301 = x[65];
	T x_6_1_310 = x[64];
	T x_6_1_400 = x[61];
	T x_4_2_000 = x[34];
	T x_5_2_001 = x[55];
	T x_6_2_002 = x[83];
	T x_5_2_010 = x[54];
	T x_6_2_011 = x[82];
	T x_6_2_020 = x[81];
	T x_5_2_100 = x[49];
	T x_6_2_101 = x[76];
	T x_6_2_110 = x[75];
	T x_6_2_200 = x[70];
	T x_6_3_000 = x[83];
	x_2_1_000 += x[7];
	x_6_1_301 += x[58];
	x_2_1_000 += x[4];
	x_6_1_310 += x[62];
	x_3_1_001 += x[17];
	x_6_1_310 += x[57];
	x_3_1_001 += x[12];
	x_6_1_400 += x[59];
	x_4_1_002 += x[32];
	x_6_1_400 += x[56];
	x_4_1_002 += x[25];
	x_4_2_000 = FMA(T(2.0000000000000000e+00), x[32], x_4_2_000);
	x_5_1_003 += x[53];
	x_4_2_000 += x[30];
	x_5_1_003 += x[44];
	x_4_2_000 = FMA(T(2.0000000000000000e+00), x[25], x_4_2_000);
	x_6_1_004 += x[81];
	x_4_2_000 = FMA(T(2.0000000000000000e+00), x[23], x_4_2_000);
	x_6_1_004 += x[70];
	x_4_2_000 += x[20];
	x_3_1_010 += x[16];
	x_5_2_001 = FMA(T(2.0000000000000000e+00), x[53], x_5_2_001);
	x_3_1_010 += x[11];
	x_5_2_001 += x[51];
	x_4_1_011 += x[31];
	x_5_2_001 = FMA(T(2.0000000000000000e+00), x[44], x_5_2_001);
	x_4_1_011 += x[24];
	x_5_2_001 = FMA(T(2.0000000000000000e+00), x[42], x_5_2_001);
	x_5_1_012 += x[52];
	x_5_2_001 += x[37];
	x_5_1_012 += x[43];
	x_6_2_002 = FMA(T(2.0000000000000000e+00), x[81], x_6_2_002);
	x_6_1_013 += x[80];
	x_6_2_002 += x[79];
	x_6_1_013 += x[69];
	x_6_2_002 = FMA(T(2.0000000000000000e+00), x[70], x_6_2_002);
	x_4_1_020 += x[30];
	x_6_2_002 = FMA(T(2.0000000000000000e+00), x[68], x_6_2_002);
	x_4_1_020 += x[23];
	x_6_2_002 += x[61];
	x_5_1_021 += x[51];
	x_5_2_010 = FMA(T(2.0000000000000000e+00), x[52], x_5_2_010);
	x_5_1_021 += x[42];
	x_5_2_010 += x[50];
	x_6_1_022 += x[79];
	x_5_2_010 = FMA(T(2.0000000000000000e+00), x[43], x_5_2_010);
	x_6_1_022 += x[68];
	x_5_2_010 = FMA(T(2.0000000000000000e+00), x[41], x_5_2_010);
	x_5_1_030 += x[50];
	x_5_2_010 += x[36];
	x_5_1_030 += x[41];
	x_6_2_011 = FMA(T(2.0000000000000000e+00), x[80], x_6_2_011);
	x_6_1_031 += x[78];
	x_6_2_011 += x[78];
	x_6_1_031 += x[67];
	x_6_2_011 = FMA(T(2.0000000000000000e+00), x[69], x_6_2_011);
	x_6_1_040 += x[77];
	x_6_2_011 = FMA(T(2.0000000000000000e+00), x[67], x_6_2_011);
	x_6_1_040 += x[66];
	x_6_2_011 += x[60];
	x_3_1_100 += x[13];
	x_6_2_020 = FMA(T(2.0000000000000000e+00), x[79], x_6_2_020);
	x_3_1_100 += x[10];
	x_6_2_020 += x[77];
	x_4_1_101 += x[27];
	x_6_2_020 = FMA(T(2.0000000000000000e+00), x[68], x_6_2_020);
	x_4_1_101 += x[22];
	x_6_2_020 = FMA(T(2.0000000000000000e+00), x[66], x_6_2_020);
	x_5_1_102 += x[47];
	x_6_2_020 += x[59];
	x_5_1_102 += x[40];
	x_5_2_100 = FMA(T(2.0000000000000000e+00), x[47], x_5_2_100);
	x_6_1_103 += x[74];
	x_5_2_100 += x[45];
	x_6_1_103 += x[65];
	x_5_2_100 = FMA(T(2.0000000000000000e+00), x[40], x_5_2_100);
	x_4_1_110 += x[26];
	x_5_2_100 = FMA(T(2.0000000000000000e+00), x[38], x_5_2_100);
	x_4_1_110 += x[21];
	x_5_2_100 += x[35];
	x_5_1_111 += x[46];
	x_6_2_101 = FMA(T(2.0000000000000000e+00), x[74], x_6_2_101);
	x_5_1_111 += x[39];
	x_6_2_101 += x[72];
	x_6_1_112 += x[73];
	x_6_2_101 = FMA(T(2.0000000000000000e+00), x[65], x_6_2_101);
	x_6_1_112 += x[64];
	x_6_2_101 = FMA(T(2.0000000000000000e+00), x[63], x_6_2_101);
	x_5_1_120 += x[45];
	x_6_2_101 += x[58];
	x_5_1_120 += x[38];
	x_6_2_110 = FMA(T(2.0000000000000000e+00), x[73], x_6_2_110);
	x_6_1_121 += x[72];
	x_6_2_110 += x[71];
	x_6_1_121 += x[63];
	x_6_2_110 = FMA(T(2.0000000000000000e+00), x[64], x_6_2_110);
	x_6_1_130 += x[71];
	x_6_2_110 = FMA(T(2.0000000000000000e+00), x[62], x_6_2_110);
	x_6_1_130 += x[62];
	x_6_2_110 += x[57];
	x_4_1_200 += x[23];
	x_6_2_200 = FMA(T(2.0000000000000000e+00), x[68], x_6_2_200);
	x_4_1_200 += x[20];
	x_6_2_200 += x[66];
	x_5_1_201 += x[42];
	x_6_2_200 = FMA(T(2.0000000000000000e+00), x[61], x_6_2_200);
	x_5_1_201 += x[37];
	x_6_2_200 = FMA(T(2.0000000000000000e+00), x[59], x_6_2_200);
	x_6_1_202 += x[68];
	x_6_2_200 += x[56];
	x_6_1_202 += x[61];
	x_6_3_000 = FMA(T(3.0000000000000000e+00), x[81], x_6_3_000);
	x_5_1_210 += x[41];
	x_6_3_000 = FMA(T(3.0000000000000000e+00), x[79], x_6_3_000);
	x_5_1_210 += x[36];
	x_6_3_000 += x[77];
	x_6_1_211 += x[67];
	x_6_3_000 = FMA(T(3.0000000000000000e+00), x[70], x_6_3_000);
	x_6_1_211 += x[60];
	x_6_3_000 = FMA(T(6.0000000000000000e+00), x[68], x_6_3_000);
	x_6_1_220 += x[66];
	x_6_3_000 = FMA(T(3.0000000000000000e+00), x[66], x_6_3_000);
	x_6_1_220 += x[59];
	x_6_3_000 = FMA(T(3.0000000000000000e+00), x[61], x_6_3_000);
	x_5_1_300 += x[38];
	x_6_3_000 = FMA(T(3.0000000000000000e+00), x[59], x_6_3_000);
	x_5_1_300 += x[35];
	x_6_3_000 += x[56];
	x_6_1_301 += x[63];
	M[0] = x[0];
	M[28] = x[3];
	M[49] = x[9];
	M[2] = x[2];
	M[30] = x[8];
	M[5] = x[7];
	M[33] = x[17];
	M[9] = x[16];
	M[37] = x[31];
	M[14] = x[30];
	M[42] = x[51];
	M[20] = x[50];
	M[48] = x[78];
	M[27] = x[77];
	M[1] = x[1];
	M[29] = x[6];
	M[4] = x[5];
	M[32] = x[14];
	M[8] = x[13];
	M[36] = x[27];
	M[13] = x[26];
	M[41] = x[46];
	M[19] = x[45];
	M[47] = x[72];
	M[26] = x[71];
	M[3] = x[4];
	M[31] = x[12];
	M[7] = x[11];
	M[35] = x[24];
	M[12] = x[23];
	M[40] = x[42];
	M[18] = x[41];
	M[46] = x[67];
	M[25] = x[66];
	M[6] = x[10];
	M[34] = x[22];
	M[11] = x[21];
	M[39] = x[39];
	M[17] = x[38];
	M[45] = x[63];
	M[24] = x[62];
	M[10] = x[20];
	M[38] = x[37];
	M[16] = x[36];
	M[44] = x[60];
	M[23] = x[59];
	M[15] = x[35];
	M[43] = x[58];
	M[22] = x[57];
	M[21] = x[56];
	M[33] = FMA(T(-2.0000000000000001e-01), x_3_1_001, M[33]);
	M[25] = FMA(T(3.0303030303030300e-02), x_6_2_200, M[25]);
	M[9] = FMA(T(-5.9999999999999998e-01), x_3_1_010, M[9]);
	M[25] = FMA(T(-9.0909090909090912e-02), x_6_1_040, M[25]);
	M[37] = FMA(T(-4.2857142857142860e-01), x_4_1_011, M[37]);
	M[25] = FMA(T(6.0606060606060601e-02), x_6_2_020, M[25]);
	M[14] = FMA(T(-8.5714285714285721e-01), x_4_1_020, M[14]);
	M[25] = FMA(T(-4.3290043290043290e-03), x_6_3_000, M[25]);
	M[14] = FMA(T(8.5714285714285715e-02), x_4_2_000, M[14]);
	M[6] = FMA(T(-5.9999999999999998e-01), x_3_1_100, M[6]);
	M[42] = FMA(T(-6.6666666666666674e-01), x_5_1_021, M[42]);
	M[34] = FMA(T(-4.2857142857142860e-01), x_4_1_101, M[34]);
	M[42] = FMA(T(4.7619047619047623e-02), x_5_2_001, M[42]);
	M[11] = FMA(T(-4.2857142857142860e-01), x_4_1_110, M[11]);
	M[20] = FMA(T(-1.1111111111111112e+00), x_5_1_030, M[20]);
	M[39] = FMA(T(-3.3333333333333337e-01), x_5_1_111, M[39]);
	M[20] = FMA(T(2.3809523809523811e-01), x_5_2_010, M[20]);
	M[17] = FMA(T(-1.1111111111111112e-01), x_5_1_300, M[17]);
	M[48] = FMA(T(-9.0909090909090906e-01), x_6_1_031, M[48]);
	M[17] = FMA(T(-3.3333333333333337e-01), x_5_1_120, M[17]);
	M[48] = FMA(T(1.5151515151515152e-01), x_6_2_011, M[48]);
	M[17] = FMA(T(4.7619047619047623e-02), x_5_2_100, M[17]);
	M[27] = FMA(T(-1.3636363636363635e+00), x_6_1_040, M[27]);
	M[45] = FMA(T(-9.0909090909090912e-02), x_6_1_301, M[45]);
	M[27] = FMA(T(4.5454545454545453e-01), x_6_2_020, M[27]);
	M[45] = FMA(T(-2.7272727272727271e-01), x_6_1_121, M[45]);
	M[27] = FMA(T(-2.1645021645021644e-02), x_6_3_000, M[27]);
	M[45] = FMA(T(3.0303030303030300e-02), x_6_2_101, M[45]);
	M[8] = FMA(T(-2.0000000000000001e-01), x_3_1_100, M[8]);
	M[24] = FMA(T(-2.7272727272727271e-01), x_6_1_310, M[24]);
	M[36] = FMA(T(-1.4285714285714288e-01), x_4_1_101, M[36]);
	M[24] = FMA(T(-2.7272727272727271e-01), x_6_1_130, M[24]);
	M[13] = FMA(T(-4.2857142857142860e-01), x_4_1_110, M[13]);
	M[24] = FMA(T(9.0909090909090912e-02), x_6_2_110, M[24]);
	M[41] = FMA(T(-3.3333333333333337e-01), x_5_1_111, M[41]);
	M[10] = FMA(T(-8.5714285714285721e-01), x_4_1_200, M[10]);
	M[19] = FMA(T(-6.6666666666666674e-01), x_5_1_120, M[19]);
	M[10] = FMA(T(8.5714285714285715e-02), x_4_2_000, M[10]);
	M[19] = FMA(T(4.7619047619047623e-02), x_5_2_100, M[19]);
	M[38] = FMA(T(-6.6666666666666674e-01), x_5_1_201, M[38]);
	M[47] = FMA(T(-5.4545454545454541e-01), x_6_1_121, M[47]);
	M[38] = FMA(T(4.7619047619047623e-02), x_5_2_001, M[38]);
	M[47] = FMA(T(3.0303030303030300e-02), x_6_2_101, M[47]);
	M[16] = FMA(T(-6.6666666666666674e-01), x_5_1_210, M[16]);
	M[26] = FMA(T(-9.0909090909090906e-01), x_6_1_130, M[26]);
	M[16] = FMA(T(4.7619047619047623e-02), x_5_2_010, M[16]);
	M[26] = FMA(T(1.5151515151515152e-01), x_6_2_110, M[26]);
	M[44] = FMA(T(-5.4545454545454541e-01), x_6_1_211, M[44]);
	M[31] = FMA(T(-2.0000000000000001e-01), x_3_1_001, M[31]);
	M[44] = FMA(T(3.0303030303030300e-02), x_6_2_011, M[44]);
	M[7] = FMA(T(-2.0000000000000001e-01), x_3_1_010, M[7]);
	M[23] = FMA(T(-9.0909090909090912e-02), x_6_1_400, M[23]);
	M[35] = FMA(T(-1.4285714285714288e-01), x_4_1_011, M[35]);
	M[23] = FMA(T(-5.4545454545454541e-01), x_6_1_220, M[23]);
	M[12] = FMA(T(-1.4285714285714288e-01), x_4_1_200, M[12]);
	M[23] = FMA(T(6.0606060606060601e-02), x_6_2_200, M[23]);
	M[12] = FMA(T(-1.4285714285714288e-01), x_4_1_020, M[12]);
	M[23] = FMA(T(3.0303030303030300e-02), x_6_2_020, M[23]);
	M[12] = FMA(T(2.8571428571428574e-02), x_4_2_000, M[12]);
	M[23] = FMA(T(-4.3290043290043290e-03), x_6_3_000, M[23]);
	M[40] = FMA(T(-1.1111111111111112e-01), x_5_1_201, M[40]);
	M[15] = FMA(T(-1.1111111111111112e+00), x_5_1_300, M[15]);
	M[40] = FMA(T(-1.1111111111111112e-01), x_5_1_021, M[40]);
	M[15] = FMA(T(2.3809523809523811e-01), x_5_2_100, M[15]);
	M[40] = FMA(T(1.5873015873015876e-02), x_5_2_001, M[40]);
	M[43] = FMA(T(-9.0909090909090906e-01), x_6_1_301, M[43]);
	M[18] = FMA(T(-3.3333333333333337e-01), x_5_1_210, M[18]);
	M[43] = FMA(T(1.5151515151515152e-01), x_6_2_101, M[43]);
	M[18] = FMA(T(-1.1111111111111112e-01), x_5_1_030, M[18]);
	M[22] = FMA(T(-9.0909090909090906e-01), x_6_1_310, M[22]);
	M[18] = FMA(T(4.7619047619047623e-02), x_5_2_010, M[18]);
	M[22] = FMA(T(1.5151515151515152e-01), x_6_2_110, M[22]);
	M[46] = FMA(T(-2.7272727272727271e-01), x_6_1_211, M[46]);
	M[21] = FMA(T(-1.3636363636363635e+00), x_6_1_400, M[21]);
	M[46] = FMA(T(-9.0909090909090912e-02), x_6_1_031, M[46]);
	M[21] = FMA(T(4.5454545454545453e-01), x_6_2_200, M[21]);
	M[46] = FMA(T(3.0303030303030300e-02), x_6_2_011, M[46]);
	M[21] = FMA(T(-2.1645021645021644e-02), x_6_3_000, M[21]);
	M[25] = FMA(T(-5.4545454545454541e-01), x_6_1_220, M[25]);
	return M;
/* FLOPS = 410*/
}


template<class T, class U>
CUDA_EXPORT
tensor_trless_sym<T, 6> M2M(const tensor_trless_sym<U,7>& Ma) {
	tensor_trless_sym<T, 6> Mb;
	Mb[0] = Ma[0];
	Mb[21] = Ma[28];
	Mb[36] = Ma[49];
	Mb[2] = Ma[2];
	Mb[23] = Ma[30];
	Mb[5] = Ma[5];
	Mb[26] = Ma[33];
	Mb[9] = Ma[9];
	Mb[30] = Ma[37];
	Mb[14] = Ma[14];
	Mb[35] = Ma[42];
	Mb[20] = Ma[20];
	Mb[1] = Ma[1];
	Mb[22] = Ma[29];
	Mb[4] = Ma[4];
	Mb[25] = Ma[32];
	Mb[8] = Ma[8];
	Mb[29] = Ma[36];
	Mb[13] = Ma[13];
	Mb[34] = Ma[41];
	Mb[19] = Ma[19];
	Mb[3] = Ma[3];
	Mb[24] = Ma[31];
	Mb[7] = Ma[7];
	Mb[28] = Ma[35];
	Mb[12] = Ma[12];
	Mb[33] = Ma[40];
	Mb[18] = Ma[18];
	Mb[6] = Ma[6];
	Mb[27] = Ma[34];
	Mb[11] = Ma[11];
	Mb[32] = Ma[39];
	Mb[17] = Ma[17];
	Mb[10] = Ma[10];
	Mb[31] = Ma[38];
	Mb[16] = Ma[16];
	Mb[15] = Ma[15];
	return Mb;
/* FLOPS = 410*/
}


template<class T>
CUDA_EXPORT
tensor_trless_sym<T, 7> M2M(const tensor_trless_sym<T,7>& Ma, array<T, NDIM>& X) {
	tensor_sym<T, 7> Mb;
	tensor_trless_sym<T, 7> Mc;
	X[0] *= -T(SCALE_FACTOR);
	X[1] *= -T(SCALE_FACTOR);
	X[2] *= -T(SCALE_FACTOR);
	const T Ma000 =  (Ma[0]);
	const T Ma001 =  (Ma[28]);
	const T Ma002 =  (Ma[49]);
	const T Ma003 = -(Ma[31]+(Ma[33]));
	const T Ma004 =  (Ma[10]+FMA(T(2),Ma[12],(Ma[14])));
	const T Ma005 =  (Ma[38]+FMA(T(2),Ma[40],(Ma[42])));
	const T Ma006 = -(Ma[21]+FMA(T(3),Ma[23],FMA(T(3),Ma[25],(Ma[27]))));
	const T Ma010 =  (Ma[2]);
	const T Ma011 =  (Ma[30]);
	const T Ma012 = -(Ma[7]+(Ma[9]));
	const T Ma013 = -(Ma[35]+(Ma[37]));
	const T Ma014 =  (Ma[16]+FMA(T(2),Ma[18],(Ma[20])));
	const T Ma015 =  (Ma[44]+FMA(T(2),Ma[46],(Ma[48])));
	const T Ma020 =  (Ma[5]);
	const T Ma021 =  (Ma[33]);
	const T Ma022 = -(Ma[12]+(Ma[14]));
	const T Ma023 = -(Ma[40]+(Ma[42]));
	const T Ma024 =  (Ma[23]+FMA(T(2),Ma[25],(Ma[27])));
	const T Ma030 =  (Ma[9]);
	const T Ma031 =  (Ma[37]);
	const T Ma032 = -(Ma[18]+(Ma[20]));
	const T Ma033 = -(Ma[46]+(Ma[48]));
	const T Ma040 =  (Ma[14]);
	const T Ma041 =  (Ma[42]);
	const T Ma042 = -(Ma[25]+(Ma[27]));
	const T Ma050 =  (Ma[20]);
	const T Ma051 =  (Ma[48]);
	const T Ma060 =  (Ma[27]);
	const T Ma100 =  (Ma[1]);
	const T Ma101 =  (Ma[29]);
	const T Ma102 = -(Ma[6]+(Ma[8]));
	const T Ma103 = -(Ma[34]+(Ma[36]));
	const T Ma104 =  (Ma[15]+FMA(T(2),Ma[17],(Ma[19])));
	const T Ma105 =  (Ma[43]+FMA(T(2),Ma[45],(Ma[47])));
	const T Ma110 =  (Ma[4]);
	const T Ma111 =  (Ma[32]);
	const T Ma112 = -(Ma[11]+(Ma[13]));
	const T Ma113 = -(Ma[39]+(Ma[41]));
	const T Ma114 =  (Ma[22]+FMA(T(2),Ma[24],(Ma[26])));
	const T Ma120 =  (Ma[8]);
	const T Ma121 =  (Ma[36]);
	const T Ma122 = -(Ma[17]+(Ma[19]));
	const T Ma123 = -(Ma[45]+(Ma[47]));
	const T Ma130 =  (Ma[13]);
	const T Ma131 =  (Ma[41]);
	const T Ma132 = -(Ma[24]+(Ma[26]));
	const T Ma140 =  (Ma[19]);
	const T Ma141 =  (Ma[47]);
	const T Ma150 =  (Ma[26]);
	const T Ma200 =  (Ma[3]);
	const T Ma201 =  (Ma[31]);
	const T Ma202 = -(Ma[10]+(Ma[12]));
	const T Ma203 = -(Ma[38]+(Ma[40]));
	const T Ma204 =  (Ma[21]+FMA(T(2),Ma[23],(Ma[25])));
	const T Ma210 =  (Ma[7]);
	const T Ma211 =  (Ma[35]);
	const T Ma212 = -(Ma[16]+(Ma[18]));
	const T Ma213 = -(Ma[44]+(Ma[46]));
	const T Ma220 =  (Ma[12]);
	const T Ma221 =  (Ma[40]);
	const T Ma222 = -(Ma[23]+(Ma[25]));
	const T Ma230 =  (Ma[18]);
	const T Ma231 =  (Ma[46]);
	const T Ma240 =  (Ma[25]);
	const T Ma300 =  (Ma[6]);
	const T Ma301 =  (Ma[34]);
	const T Ma302 = -(Ma[15]+(Ma[17]));
	const T Ma303 = -(Ma[43]+(Ma[45]));
	const T Ma310 =  (Ma[11]);
	const T Ma311 =  (Ma[39]);
	const T Ma312 = -(Ma[22]+(Ma[24]));
	const T Ma320 =  (Ma[17]);
	const T Ma321 =  (Ma[45]);
	const T Ma330 =  (Ma[24]);
	const T Ma400 =  (Ma[10]);
	const T Ma401 =  (Ma[38]);
	const T Ma402 = -(Ma[21]+(Ma[23]));
	const T Ma410 =  (Ma[16]);
	const T Ma411 =  (Ma[44]);
	const T Ma420 =  (Ma[23]);
	const T Ma500 =  (Ma[15]);
	const T Ma501 =  (Ma[43]);
	const T Ma510 =  (Ma[22]);
	const T Ma600 =  (Ma[21]);
	T x[84];
	x[0] = T(1);
	x[1] = X[0];
	x[2] = X[1];
	x[3] = X[2];
	x[9] = x[3] * x[3]; // 0 0 2 | 0 0 1 | 0 0 1
	x[8] = x[2] * x[3]; // 0 1 1 | 0 0 1 | 0 1 0
	x[7] = x[2] * x[2]; // 0 2 0 | 0 1 0 | 0 1 0
	x[6] = x[1] * x[3]; // 1 0 1 | 0 0 1 | 1 0 0
	x[5] = x[1] * x[2]; // 1 1 0 | 0 1 0 | 1 0 0
	x[4] = x[1] * x[1]; // 2 0 0 | 1 0 0 | 1 0 0
	x[19] = x[9] * x[3]; // 0 0 3 | 0 0 1 | 0 0 2
	x[18] = x[8] * x[3]; // 0 1 2 | 0 0 1 | 0 1 1
	x[17] = x[8] * x[2]; // 0 2 1 | 0 1 0 | 0 1 1
	x[16] = x[7] * x[2]; // 0 3 0 | 0 1 0 | 0 2 0
	x[15] = x[6] * x[3]; // 1 0 2 | 0 0 1 | 1 0 1
	x[14] = x[5] * x[3]; // 1 1 1 | 0 0 1 | 1 1 0
	x[13] = x[5] * x[2]; // 1 2 0 | 0 1 0 | 1 1 0
	x[12] = x[6] * x[1]; // 2 0 1 | 1 0 0 | 1 0 1
	x[11] = x[5] * x[1]; // 2 1 0 | 1 0 0 | 1 1 0
	x[10] = x[4] * x[1]; // 3 0 0 | 1 0 0 | 2 0 0
	x[34] = x[9] * x[9]; // 0 0 4 | 0 0 2 | 0 0 2
	x[33] = x[8] * x[9]; // 0 1 3 | 0 0 2 | 0 1 1
	x[32] = x[8] * x[8]; // 0 2 2 | 0 1 1 | 0 1 1
	x[31] = x[8] * x[7]; // 0 3 1 | 0 2 0 | 0 1 1
	x[30] = x[7] * x[7]; // 0 4 0 | 0 2 0 | 0 2 0
	x[29] = x[6] * x[9]; // 1 0 3 | 0 0 2 | 1 0 1
	x[28] = x[5] * x[9]; // 1 1 2 | 0 0 2 | 1 1 0
	x[27] = x[5] * x[8]; // 1 2 1 | 0 1 1 | 1 1 0
	x[26] = x[5] * x[7]; // 1 3 0 | 0 2 0 | 1 1 0
	x[25] = x[6] * x[6]; // 2 0 2 | 1 0 1 | 1 0 1
	x[24] = x[5] * x[6]; // 2 1 1 | 1 0 1 | 1 1 0
	x[23] = x[5] * x[5]; // 2 2 0 | 1 1 0 | 1 1 0
	x[22] = x[6] * x[4]; // 3 0 1 | 2 0 0 | 1 0 1
	x[21] = x[5] * x[4]; // 3 1 0 | 2 0 0 | 1 1 0
	x[20] = x[4] * x[4]; // 4 0 0 | 2 0 0 | 2 0 0
	x[55] = x[19] * x[9]; // 0 0 5 | 0 0 2 | 0 0 3
	x[54] = x[18] * x[9]; // 0 1 4 | 0 0 2 | 0 1 2
	x[53] = x[17] * x[9]; // 0 2 3 | 0 0 2 | 0 2 1
	x[52] = x[17] * x[8]; // 0 3 2 | 0 1 1 | 0 2 1
	x[51] = x[17] * x[7]; // 0 4 1 | 0 2 0 | 0 2 1
	x[50] = x[16] * x[7]; // 0 5 0 | 0 2 0 | 0 3 0
	x[49] = x[15] * x[9]; // 1 0 4 | 0 0 2 | 1 0 2
	x[48] = x[14] * x[9]; // 1 1 3 | 0 0 2 | 1 1 1
	x[47] = x[14] * x[8]; // 1 2 2 | 0 1 1 | 1 1 1
	x[46] = x[14] * x[7]; // 1 3 1 | 0 2 0 | 1 1 1
	x[45] = x[13] * x[7]; // 1 4 0 | 0 2 0 | 1 2 0
	x[44] = x[12] * x[9]; // 2 0 3 | 0 0 2 | 2 0 1
	x[43] = x[14] * x[6]; // 2 1 2 | 1 0 1 | 1 1 1
	x[42] = x[14] * x[5]; // 2 2 1 | 1 1 0 | 1 1 1
	x[41] = x[11] * x[7]; // 2 3 0 | 0 2 0 | 2 1 0
	x[40] = x[12] * x[6]; // 3 0 2 | 1 0 1 | 2 0 1
	x[39] = x[14] * x[4]; // 3 1 1 | 2 0 0 | 1 1 1
	x[38] = x[11] * x[5]; // 3 2 0 | 1 1 0 | 2 1 0
	x[37] = x[12] * x[4]; // 4 0 1 | 2 0 0 | 2 0 1
	x[36] = x[11] * x[4]; // 4 1 0 | 2 0 0 | 2 1 0
	x[35] = x[10] * x[4]; // 5 0 0 | 2 0 0 | 3 0 0
	x[83] = x[19] * x[19]; // 0 0 6 | 0 0 3 | 0 0 3
	x[82] = x[18] * x[19]; // 0 1 5 | 0 0 3 | 0 1 2
	x[81] = x[17] * x[19]; // 0 2 4 | 0 0 3 | 0 2 1
	x[80] = x[17] * x[18]; // 0 3 3 | 0 1 2 | 0 2 1
	x[79] = x[17] * x[17]; // 0 4 2 | 0 2 1 | 0 2 1
	x[78] = x[17] * x[16]; // 0 5 1 | 0 3 0 | 0 2 1
	x[77] = x[16] * x[16]; // 0 6 0 | 0 3 0 | 0 3 0
	x[76] = x[15] * x[19]; // 1 0 5 | 0 0 3 | 1 0 2
	x[75] = x[14] * x[19]; // 1 1 4 | 0 0 3 | 1 1 1
	x[74] = x[14] * x[18]; // 1 2 3 | 0 1 2 | 1 1 1
	x[73] = x[14] * x[17]; // 1 3 2 | 0 2 1 | 1 1 1
	x[72] = x[14] * x[16]; // 1 4 1 | 0 3 0 | 1 1 1
	x[71] = x[13] * x[16]; // 1 5 0 | 0 3 0 | 1 2 0
	x[70] = x[12] * x[19]; // 2 0 4 | 0 0 3 | 2 0 1
	x[69] = x[14] * x[15]; // 2 1 3 | 1 0 2 | 1 1 1
	x[68] = x[14] * x[14]; // 2 2 2 | 1 1 1 | 1 1 1
	x[67] = x[14] * x[13]; // 2 3 1 | 1 2 0 | 1 1 1
	x[66] = x[11] * x[16]; // 2 4 0 | 0 3 0 | 2 1 0
	x[65] = x[12] * x[15]; // 3 0 3 | 1 0 2 | 2 0 1
	x[64] = x[14] * x[12]; // 3 1 2 | 2 0 1 | 1 1 1
	x[63] = x[14] * x[11]; // 3 2 1 | 2 1 0 | 1 1 1
	x[62] = x[11] * x[13]; // 3 3 0 | 1 2 0 | 2 1 0
	x[61] = x[12] * x[12]; // 4 0 2 | 2 0 1 | 2 0 1
	x[60] = x[14] * x[10]; // 4 1 1 | 3 0 0 | 1 1 1
	x[59] = x[11] * x[11]; // 4 2 0 | 2 1 0 | 2 1 0
	x[58] = x[12] * x[10]; // 5 0 1 | 3 0 0 | 2 0 1
	x[57] = x[11] * x[10]; // 5 1 0 | 3 0 0 | 2 1 0
	x[56] = x[10] * x[10]; // 6 0 0 | 3 0 0 | 3 0 0
	Mb[0] = Ma000;
	Mb[1] = Ma100;
	Mb[2] = Ma010;
	Mb[3] = Ma001;
	Mb[4] = Ma200;
	Mb[5] = Ma110;
	Mb[6] = Ma101;
	Mb[7] = Ma020;
	Mb[8] = Ma011;
	Mb[9] = Ma002;
	Mb[10] = Ma300;
	Mb[11] = Ma210;
	Mb[12] = Ma201;
	Mb[13] = Ma120;
	Mb[14] = Ma111;
	Mb[15] = Ma102;
	Mb[16] = Ma030;
	Mb[17] = Ma021;
	Mb[18] = Ma012;
	Mb[19] = Ma003;
	Mb[20] = Ma400;
	Mb[21] = Ma310;
	Mb[22] = Ma301;
	Mb[23] = Ma220;
	Mb[24] = Ma211;
	Mb[25] = Ma202;
	Mb[26] = Ma130;
	Mb[27] = Ma121;
	Mb[28] = Ma112;
	Mb[29] = Ma103;
	Mb[30] = Ma040;
	Mb[31] = Ma031;
	Mb[32] = Ma022;
	Mb[33] = Ma013;
	Mb[34] = Ma004;
	Mb[35] = Ma500;
	Mb[36] = Ma410;
	Mb[37] = Ma401;
	Mb[38] = Ma320;
	Mb[39] = Ma311;
	Mb[40] = Ma302;
	Mb[41] = Ma230;
	Mb[42] = Ma221;
	Mb[43] = Ma212;
	Mb[44] = Ma203;
	Mb[45] = Ma140;
	Mb[46] = Ma131;
	Mb[47] = Ma122;
	Mb[48] = Ma113;
	Mb[49] = Ma104;
	Mb[50] = Ma050;
	Mb[51] = Ma041;
	Mb[52] = Ma032;
	Mb[53] = Ma023;
	Mb[54] = Ma014;
	Mb[55] = Ma005;
	Mb[56] = Ma600;
	Mb[57] = Ma510;
	Mb[58] = Ma501;
	Mb[59] = Ma420;
	Mb[60] = Ma411;
	Mb[61] = Ma402;
	Mb[62] = Ma330;
	Mb[63] = Ma321;
	Mb[64] = Ma312;
	Mb[65] = Ma303;
	Mb[66] = Ma240;
	Mb[67] = Ma231;
	Mb[68] = Ma222;
	Mb[69] = Ma213;
	Mb[70] = Ma204;
	Mb[71] = Ma150;
	Mb[72] = Ma141;
	Mb[73] = Ma132;
	Mb[74] = Ma123;
	Mb[75] = Ma114;
	Mb[76] = Ma105;
	Mb[77] = Ma060;
	Mb[78] = Ma051;
	Mb[79] = Ma042;
	Mb[80] = Ma033;
	Mb[81] = Ma024;
	Mb[82] = Ma015;
	Mb[83] = Ma006;
	Mb[1] = FMA( x[1], Ma000, Mb[1]);
	Mb[2] = FMA( x[2], Ma000, Mb[2]);
	Mb[3] = FMA( x[3], Ma000, Mb[3]);
	Mb[4] *= T(5.0000000000000000e-01);
	Mb[4] = FMA( x[1], Ma100, Mb[4]);
	Mb[4] *= T(2.0000000000000000e+00);
	Mb[4] = FMA( x[4], Ma000, Mb[4]);
	Mb[5] = FMA( x[5], Ma000, Mb[5]);
	Mb[5] = FMA( x[1], Ma010, Mb[5]);
	Mb[5] = FMA( x[2], Ma100, Mb[5]);
	Mb[6] = FMA( x[6], Ma000, Mb[6]);
	Mb[6] = FMA( x[1], Ma001, Mb[6]);
	Mb[6] = FMA( x[3], Ma100, Mb[6]);
	Mb[7] *= T(5.0000000000000000e-01);
	Mb[7] = FMA( x[2], Ma010, Mb[7]);
	Mb[7] *= T(2.0000000000000000e+00);
	Mb[7] = FMA( x[7], Ma000, Mb[7]);
	Mb[8] = FMA( x[8], Ma000, Mb[8]);
	Mb[8] = FMA( x[2], Ma001, Mb[8]);
	Mb[8] = FMA( x[3], Ma010, Mb[8]);
	Mb[9] *= T(5.0000000000000000e-01);
	Mb[9] = FMA( x[3], Ma001, Mb[9]);
	Mb[9] *= T(2.0000000000000000e+00);
	Mb[9] = FMA( x[9], Ma000, Mb[9]);
	Mb[10] *= T(3.3333333333333331e-01);
	Mb[10] = FMA( x[4], Ma100, Mb[10]);
	Mb[10] = FMA( x[1], Ma200, Mb[10]);
	Mb[10] *= T(3.0000000000000000e+00);
	Mb[10] = FMA( x[10], Ma000, Mb[10]);
	Mb[11] *= T(5.0000000000000000e-01);
	Mb[11] = FMA( x[5], Ma100, Mb[11]);
	Mb[11] = FMA( x[1], Ma110, Mb[11]);
	Mb[11] *= T(2.0000000000000000e+00);
	Mb[11] = FMA( x[11], Ma000, Mb[11]);
	Mb[11] = FMA( x[4], Ma010, Mb[11]);
	Mb[11] = FMA( x[2], Ma200, Mb[11]);
	Mb[12] *= T(5.0000000000000000e-01);
	Mb[12] = FMA( x[6], Ma100, Mb[12]);
	Mb[12] = FMA( x[1], Ma101, Mb[12]);
	Mb[12] *= T(2.0000000000000000e+00);
	Mb[12] = FMA( x[12], Ma000, Mb[12]);
	Mb[12] = FMA( x[4], Ma001, Mb[12]);
	Mb[12] = FMA( x[3], Ma200, Mb[12]);
	Mb[13] *= T(5.0000000000000000e-01);
	Mb[13] = FMA( x[5], Ma010, Mb[13]);
	Mb[13] = FMA( x[2], Ma110, Mb[13]);
	Mb[13] *= T(2.0000000000000000e+00);
	Mb[13] = FMA( x[13], Ma000, Mb[13]);
	Mb[13] = FMA( x[1], Ma020, Mb[13]);
	Mb[13] = FMA( x[7], Ma100, Mb[13]);
	Mb[14] = FMA( x[14], Ma000, Mb[14]);
	Mb[14] = FMA( x[5], Ma001, Mb[14]);
	Mb[14] = FMA( x[6], Ma010, Mb[14]);
	Mb[14] = FMA( x[1], Ma011, Mb[14]);
	Mb[14] = FMA( x[8], Ma100, Mb[14]);
	Mb[14] = FMA( x[2], Ma101, Mb[14]);
	Mb[14] = FMA( x[3], Ma110, Mb[14]);
	Mb[15] *= T(5.0000000000000000e-01);
	Mb[15] = FMA( x[6], Ma001, Mb[15]);
	Mb[15] = FMA( x[3], Ma101, Mb[15]);
	Mb[15] *= T(2.0000000000000000e+00);
	Mb[15] = FMA( x[15], Ma000, Mb[15]);
	Mb[15] = FMA( x[1], Ma002, Mb[15]);
	Mb[15] = FMA( x[9], Ma100, Mb[15]);
	Mb[16] *= T(3.3333333333333331e-01);
	Mb[16] = FMA( x[7], Ma010, Mb[16]);
	Mb[16] = FMA( x[2], Ma020, Mb[16]);
	Mb[16] *= T(3.0000000000000000e+00);
	Mb[16] = FMA( x[16], Ma000, Mb[16]);
	Mb[17] *= T(5.0000000000000000e-01);
	Mb[17] = FMA( x[8], Ma010, Mb[17]);
	Mb[17] = FMA( x[2], Ma011, Mb[17]);
	Mb[17] *= T(2.0000000000000000e+00);
	Mb[17] = FMA( x[17], Ma000, Mb[17]);
	Mb[17] = FMA( x[7], Ma001, Mb[17]);
	Mb[17] = FMA( x[3], Ma020, Mb[17]);
	Mb[18] *= T(5.0000000000000000e-01);
	Mb[18] = FMA( x[8], Ma001, Mb[18]);
	Mb[18] = FMA( x[3], Ma011, Mb[18]);
	Mb[18] *= T(2.0000000000000000e+00);
	Mb[18] = FMA( x[18], Ma000, Mb[18]);
	Mb[18] = FMA( x[2], Ma002, Mb[18]);
	Mb[18] = FMA( x[9], Ma010, Mb[18]);
	Mb[19] *= T(3.3333333333333331e-01);
	Mb[19] = FMA( x[9], Ma001, Mb[19]);
	Mb[19] = FMA( x[3], Ma002, Mb[19]);
	Mb[19] *= T(3.0000000000000000e+00);
	Mb[19] = FMA( x[19], Ma000, Mb[19]);
	Mb[20] *= T(1.6666666666666666e-01);
	Mb[20] = FMA( x[4], Ma200, Mb[20]);
	Mb[20] *= T(1.5000000000000000e+00);
	Mb[20] = FMA( x[10], Ma100, Mb[20]);
	Mb[20] = FMA( x[1], Ma300, Mb[20]);
	Mb[20] *= T(4.0000000000000000e+00);
	Mb[20] = FMA( x[20], Ma000, Mb[20]);
	Mb[21] *= T(3.3333333333333331e-01);
	Mb[21] = FMA( x[11], Ma100, Mb[21]);
	Mb[21] = FMA( x[4], Ma110, Mb[21]);
	Mb[21] = FMA( x[5], Ma200, Mb[21]);
	Mb[21] = FMA( x[1], Ma210, Mb[21]);
	Mb[21] *= T(3.0000000000000000e+00);
	Mb[21] = FMA( x[21], Ma000, Mb[21]);
	Mb[21] = FMA( x[10], Ma010, Mb[21]);
	Mb[21] = FMA( x[2], Ma300, Mb[21]);
	Mb[22] *= T(3.3333333333333331e-01);
	Mb[22] = FMA( x[12], Ma100, Mb[22]);
	Mb[22] = FMA( x[4], Ma101, Mb[22]);
	Mb[22] = FMA( x[6], Ma200, Mb[22]);
	Mb[22] = FMA( x[1], Ma201, Mb[22]);
	Mb[22] *= T(3.0000000000000000e+00);
	Mb[22] = FMA( x[22], Ma000, Mb[22]);
	Mb[22] = FMA( x[10], Ma001, Mb[22]);
	Mb[22] = FMA( x[3], Ma300, Mb[22]);
	Mb[23] *= T(2.5000000000000000e-01);
	Mb[23] = FMA( x[5], Ma110, Mb[23]);
	Mb[23] *= T(2.0000000000000000e+00);
	Mb[23] = FMA( x[11], Ma010, Mb[23]);
	Mb[23] = FMA( x[13], Ma100, Mb[23]);
	Mb[23] = FMA( x[1], Ma120, Mb[23]);
	Mb[23] = FMA( x[2], Ma210, Mb[23]);
	Mb[23] *= T(2.0000000000000000e+00);
	Mb[23] = FMA( x[23], Ma000, Mb[23]);
	Mb[23] = FMA( x[4], Ma020, Mb[23]);
	Mb[23] = FMA( x[7], Ma200, Mb[23]);
	Mb[24] *= T(5.0000000000000000e-01);
	Mb[24] = FMA( x[14], Ma100, Mb[24]);
	Mb[24] = FMA( x[5], Ma101, Mb[24]);
	Mb[24] = FMA( x[6], Ma110, Mb[24]);
	Mb[24] = FMA( x[1], Ma111, Mb[24]);
	Mb[24] *= T(2.0000000000000000e+00);
	Mb[24] = FMA( x[24], Ma000, Mb[24]);
	Mb[24] = FMA( x[11], Ma001, Mb[24]);
	Mb[24] = FMA( x[12], Ma010, Mb[24]);
	Mb[24] = FMA( x[4], Ma011, Mb[24]);
	Mb[24] = FMA( x[8], Ma200, Mb[24]);
	Mb[24] = FMA( x[2], Ma201, Mb[24]);
	Mb[24] = FMA( x[3], Ma210, Mb[24]);
	Mb[25] *= T(2.5000000000000000e-01);
	Mb[25] = FMA( x[6], Ma101, Mb[25]);
	Mb[25] *= T(2.0000000000000000e+00);
	Mb[25] = FMA( x[12], Ma001, Mb[25]);
	Mb[25] = FMA( x[15], Ma100, Mb[25]);
	Mb[25] = FMA( x[1], Ma102, Mb[25]);
	Mb[25] = FMA( x[3], Ma201, Mb[25]);
	Mb[25] *= T(2.0000000000000000e+00);
	Mb[25] = FMA( x[25], Ma000, Mb[25]);
	Mb[25] = FMA( x[4], Ma002, Mb[25]);
	Mb[25] = FMA( x[9], Ma200, Mb[25]);
	Mb[26] *= T(3.3333333333333331e-01);
	Mb[26] = FMA( x[13], Ma010, Mb[26]);
	Mb[26] = FMA( x[5], Ma020, Mb[26]);
	Mb[26] = FMA( x[7], Ma110, Mb[26]);
	Mb[26] = FMA( x[2], Ma120, Mb[26]);
	Mb[26] *= T(3.0000000000000000e+00);
	Mb[26] = FMA( x[26], Ma000, Mb[26]);
	Mb[26] = FMA( x[1], Ma030, Mb[26]);
	Mb[26] = FMA( x[16], Ma100, Mb[26]);
	Mb[27] *= T(5.0000000000000000e-01);
	Mb[27] = FMA( x[14], Ma010, Mb[27]);
	Mb[27] = FMA( x[5], Ma011, Mb[27]);
	Mb[27] = FMA( x[8], Ma110, Mb[27]);
	Mb[27] = FMA( x[2], Ma111, Mb[27]);
	Mb[27] *= T(2.0000000000000000e+00);
	Mb[27] = FMA( x[27], Ma000, Mb[27]);
	Mb[27] = FMA( x[13], Ma001, Mb[27]);
	Mb[27] = FMA( x[6], Ma020, Mb[27]);
	Mb[27] = FMA( x[1], Ma021, Mb[27]);
	Mb[27] = FMA( x[17], Ma100, Mb[27]);
	Mb[27] = FMA( x[7], Ma101, Mb[27]);
	Mb[27] = FMA( x[3], Ma120, Mb[27]);
	Mb[28] *= T(5.0000000000000000e-01);
	Mb[28] = FMA( x[14], Ma001, Mb[28]);
	Mb[28] = FMA( x[6], Ma011, Mb[28]);
	Mb[28] = FMA( x[8], Ma101, Mb[28]);
	Mb[28] = FMA( x[3], Ma111, Mb[28]);
	Mb[28] *= T(2.0000000000000000e+00);
	Mb[28] = FMA( x[28], Ma000, Mb[28]);
	Mb[28] = FMA( x[5], Ma002, Mb[28]);
	Mb[28] = FMA( x[15], Ma010, Mb[28]);
	Mb[28] = FMA( x[1], Ma012, Mb[28]);
	Mb[28] = FMA( x[18], Ma100, Mb[28]);
	Mb[28] = FMA( x[2], Ma102, Mb[28]);
	Mb[28] = FMA( x[9], Ma110, Mb[28]);
	Mb[29] *= T(3.3333333333333331e-01);
	Mb[29] = FMA( x[15], Ma001, Mb[29]);
	Mb[29] = FMA( x[6], Ma002, Mb[29]);
	Mb[29] = FMA( x[9], Ma101, Mb[29]);
	Mb[29] = FMA( x[3], Ma102, Mb[29]);
	Mb[29] *= T(3.0000000000000000e+00);
	Mb[29] = FMA( x[29], Ma000, Mb[29]);
	Mb[29] = FMA( x[1], Ma003, Mb[29]);
	Mb[29] = FMA( x[19], Ma100, Mb[29]);
	Mb[30] *= T(1.6666666666666666e-01);
	Mb[30] = FMA( x[7], Ma020, Mb[30]);
	Mb[30] *= T(1.5000000000000000e+00);
	Mb[30] = FMA( x[16], Ma010, Mb[30]);
	Mb[30] = FMA( x[2], Ma030, Mb[30]);
	Mb[30] *= T(4.0000000000000000e+00);
	Mb[30] = FMA( x[30], Ma000, Mb[30]);
	Mb[31] *= T(3.3333333333333331e-01);
	Mb[31] = FMA( x[17], Ma010, Mb[31]);
	Mb[31] = FMA( x[7], Ma011, Mb[31]);
	Mb[31] = FMA( x[8], Ma020, Mb[31]);
	Mb[31] = FMA( x[2], Ma021, Mb[31]);
	Mb[31] *= T(3.0000000000000000e+00);
	Mb[31] = FMA( x[31], Ma000, Mb[31]);
	Mb[31] = FMA( x[16], Ma001, Mb[31]);
	Mb[31] = FMA( x[3], Ma030, Mb[31]);
	Mb[32] *= T(2.5000000000000000e-01);
	Mb[32] = FMA( x[8], Ma011, Mb[32]);
	Mb[32] *= T(2.0000000000000000e+00);
	Mb[32] = FMA( x[17], Ma001, Mb[32]);
	Mb[32] = FMA( x[18], Ma010, Mb[32]);
	Mb[32] = FMA( x[2], Ma012, Mb[32]);
	Mb[32] = FMA( x[3], Ma021, Mb[32]);
	Mb[32] *= T(2.0000000000000000e+00);
	Mb[32] = FMA( x[32], Ma000, Mb[32]);
	Mb[32] = FMA( x[7], Ma002, Mb[32]);
	Mb[32] = FMA( x[9], Ma020, Mb[32]);
	Mb[33] *= T(3.3333333333333331e-01);
	Mb[33] = FMA( x[18], Ma001, Mb[33]);
	Mb[33] = FMA( x[8], Ma002, Mb[33]);
	Mb[33] = FMA( x[9], Ma011, Mb[33]);
	Mb[33] = FMA( x[3], Ma012, Mb[33]);
	Mb[33] *= T(3.0000000000000000e+00);
	Mb[33] = FMA( x[33], Ma000, Mb[33]);
	Mb[33] = FMA( x[2], Ma003, Mb[33]);
	Mb[33] = FMA( x[19], Ma010, Mb[33]);
	Mb[34] *= T(1.6666666666666666e-01);
	Mb[34] = FMA( x[9], Ma002, Mb[34]);
	Mb[34] *= T(1.5000000000000000e+00);
	Mb[34] = FMA( x[19], Ma001, Mb[34]);
	Mb[34] = FMA( x[3], Ma003, Mb[34]);
	Mb[34] *= T(4.0000000000000000e+00);
	Mb[34] = FMA( x[34], Ma000, Mb[34]);
	Mb[35] *= T(1.0000000000000001e-01);
	Mb[35] = FMA( x[10], Ma200, Mb[35]);
	Mb[35] = FMA( x[4], Ma300, Mb[35]);
	Mb[35] *= T(2.0000000000000000e+00);
	Mb[35] = FMA( x[20], Ma100, Mb[35]);
	Mb[35] = FMA( x[1], Ma400, Mb[35]);
	Mb[35] *= T(5.0000000000000000e+00);
	Mb[35] = FMA( x[35], Ma000, Mb[35]);
	Mb[36] *= T(1.6666666666666666e-01);
	Mb[36] = FMA( x[11], Ma200, Mb[36]);
	Mb[36] = FMA( x[4], Ma210, Mb[36]);
	Mb[36] *= T(1.5000000000000000e+00);
	Mb[36] = FMA( x[21], Ma100, Mb[36]);
	Mb[36] = FMA( x[10], Ma110, Mb[36]);
	Mb[36] = FMA( x[5], Ma300, Mb[36]);
	Mb[36] = FMA( x[1], Ma310, Mb[36]);
	Mb[36] *= T(4.0000000000000000e+00);
	Mb[36] = FMA( x[36], Ma000, Mb[36]);
	Mb[36] = FMA( x[20], Ma010, Mb[36]);
	Mb[36] = FMA( x[2], Ma400, Mb[36]);
	Mb[37] *= T(1.6666666666666666e-01);
	Mb[37] = FMA( x[12], Ma200, Mb[37]);
	Mb[37] = FMA( x[4], Ma201, Mb[37]);
	Mb[37] *= T(1.5000000000000000e+00);
	Mb[37] = FMA( x[22], Ma100, Mb[37]);
	Mb[37] = FMA( x[10], Ma101, Mb[37]);
	Mb[37] = FMA( x[6], Ma300, Mb[37]);
	Mb[37] = FMA( x[1], Ma301, Mb[37]);
	Mb[37] *= T(4.0000000000000000e+00);
	Mb[37] = FMA( x[37], Ma000, Mb[37]);
	Mb[37] = FMA( x[20], Ma001, Mb[37]);
	Mb[37] = FMA( x[3], Ma400, Mb[37]);
	Mb[38] *= T(1.6666666666666666e-01);
	Mb[38] = FMA( x[11], Ma110, Mb[38]);
	Mb[38] = FMA( x[5], Ma210, Mb[38]);
	Mb[38] *= T(2.0000000000000000e+00);
	Mb[38] = FMA( x[23], Ma100, Mb[38]);
	Mb[38] = FMA( x[4], Ma120, Mb[38]);
	Mb[38] = FMA( x[13], Ma200, Mb[38]);
	Mb[38] = FMA( x[1], Ma220, Mb[38]);
	Mb[38] *= T(1.5000000000000000e+00);
	Mb[38] = FMA( x[21], Ma010, Mb[38]);
	Mb[38] = FMA( x[2], Ma310, Mb[38]);
	Mb[38] *= T(2.0000000000000000e+00);
	Mb[38] = FMA( x[38], Ma000, Mb[38]);
	Mb[38] = FMA( x[10], Ma020, Mb[38]);
	Mb[38] = FMA( x[7], Ma300, Mb[38]);
	Mb[39] *= T(3.3333333333333331e-01);
	Mb[39] = FMA( x[24], Ma100, Mb[39]);
	Mb[39] = FMA( x[11], Ma101, Mb[39]);
	Mb[39] = FMA( x[12], Ma110, Mb[39]);
	Mb[39] = FMA( x[4], Ma111, Mb[39]);
	Mb[39] = FMA( x[14], Ma200, Mb[39]);
	Mb[39] = FMA( x[5], Ma201, Mb[39]);
	Mb[39] = FMA( x[6], Ma210, Mb[39]);
	Mb[39] = FMA( x[1], Ma211, Mb[39]);
	Mb[39] *= T(3.0000000000000000e+00);
	Mb[39] = FMA( x[39], Ma000, Mb[39]);
	Mb[39] = FMA( x[21], Ma001, Mb[39]);
	Mb[39] = FMA( x[22], Ma010, Mb[39]);
	Mb[39] = FMA( x[10], Ma011, Mb[39]);
	Mb[39] = FMA( x[8], Ma300, Mb[39]);
	Mb[39] = FMA( x[2], Ma301, Mb[39]);
	Mb[39] = FMA( x[3], Ma310, Mb[39]);
	Mb[40] *= T(1.6666666666666666e-01);
	Mb[40] = FMA( x[12], Ma101, Mb[40]);
	Mb[40] = FMA( x[6], Ma201, Mb[40]);
	Mb[40] *= T(2.0000000000000000e+00);
	Mb[40] = FMA( x[25], Ma100, Mb[40]);
	Mb[40] = FMA( x[4], Ma102, Mb[40]);
	Mb[40] = FMA( x[15], Ma200, Mb[40]);
	Mb[40] = FMA( x[1], Ma202, Mb[40]);
	Mb[40] *= T(1.5000000000000000e+00);
	Mb[40] = FMA( x[22], Ma001, Mb[40]);
	Mb[40] = FMA( x[3], Ma301, Mb[40]);
	Mb[40] *= T(2.0000000000000000e+00);
	Mb[40] = FMA( x[40], Ma000, Mb[40]);
	Mb[40] = FMA( x[10], Ma002, Mb[40]);
	Mb[40] = FMA( x[9], Ma300, Mb[40]);
	Mb[41] *= T(1.6666666666666666e-01);
	Mb[41] = FMA( x[13], Ma110, Mb[41]);
	Mb[41] = FMA( x[5], Ma120, Mb[41]);
	Mb[41] *= T(2.0000000000000000e+00);
	Mb[41] = FMA( x[23], Ma010, Mb[41]);
	Mb[41] = FMA( x[11], Ma020, Mb[41]);
	Mb[41] = FMA( x[7], Ma210, Mb[41]);
	Mb[41] = FMA( x[2], Ma220, Mb[41]);
	Mb[41] *= T(1.5000000000000000e+00);
	Mb[41] = FMA( x[26], Ma100, Mb[41]);
	Mb[41] = FMA( x[1], Ma130, Mb[41]);
	Mb[41] *= T(2.0000000000000000e+00);
	Mb[41] = FMA( x[41], Ma000, Mb[41]);
	Mb[41] = FMA( x[4], Ma030, Mb[41]);
	Mb[41] = FMA( x[16], Ma200, Mb[41]);
	Mb[42] *= T(2.5000000000000000e-01);
	Mb[42] = FMA( x[14], Ma110, Mb[42]);
	Mb[42] = FMA( x[5], Ma111, Mb[42]);
	Mb[42] *= T(2.0000000000000000e+00);
	Mb[42] = FMA( x[24], Ma010, Mb[42]);
	Mb[42] = FMA( x[11], Ma011, Mb[42]);
	Mb[42] = FMA( x[2], Ma211, Mb[42]);
	Mb[42] = FMA( x[8], Ma210, Mb[42]);
	Mb[42] = FMA( x[27], Ma100, Mb[42]);
	Mb[42] = FMA( x[13], Ma101, Mb[42]);
	Mb[42] = FMA( x[6], Ma120, Mb[42]);
	Mb[42] = FMA( x[1], Ma121, Mb[42]);
	Mb[42] *= T(2.0000000000000000e+00);
	Mb[42] = FMA( x[3], Ma220, Mb[42]);
	Mb[42] = FMA( x[42], Ma000, Mb[42]);
	Mb[42] = FMA( x[7], Ma201, Mb[42]);
	Mb[42] = FMA( x[17], Ma200, Mb[42]);
	Mb[42] = FMA( x[4], Ma021, Mb[42]);
	Mb[42] = FMA( x[12], Ma020, Mb[42]);
	Mb[42] = FMA( x[23], Ma001, Mb[42]);
	Mb[43] *= T(2.5000000000000000e-01);
	Mb[43] = FMA( x[6], Ma111, Mb[43]);
	Mb[43] = FMA( x[14], Ma101, Mb[43]);
	Mb[43] *= T(2.0000000000000000e+00);
	Mb[43] = FMA( x[5], Ma102, Mb[43]);
	Mb[43] = FMA( x[3], Ma211, Mb[43]);
	Mb[43] = FMA( x[8], Ma201, Mb[43]);
	Mb[43] = FMA( x[1], Ma112, Mb[43]);
	Mb[43] = FMA( x[15], Ma110, Mb[43]);
	Mb[43] = FMA( x[28], Ma100, Mb[43]);
	Mb[43] = FMA( x[12], Ma011, Mb[43]);
	Mb[43] = FMA( x[24], Ma001, Mb[43]);
	Mb[43] *= T(2.0000000000000000e+00);
	Mb[43] = FMA( x[43], Ma000, Mb[43]);
	Mb[43] = FMA( x[4], Ma012, Mb[43]);
	Mb[43] = FMA( x[25], Ma010, Mb[43]);
	Mb[43] = FMA( x[18], Ma200, Mb[43]);
	Mb[43] = FMA( x[11], Ma002, Mb[43]);
	Mb[43] = FMA( x[2], Ma202, Mb[43]);
	Mb[43] = FMA( x[9], Ma210, Mb[43]);
	Mb[44] *= T(1.6666666666666666e-01);
	Mb[44] = FMA( x[15], Ma101, Mb[44]);
	Mb[44] = FMA( x[6], Ma102, Mb[44]);
	Mb[44] *= T(2.0000000000000000e+00);
	Mb[44] = FMA( x[25], Ma001, Mb[44]);
	Mb[44] = FMA( x[12], Ma002, Mb[44]);
	Mb[44] = FMA( x[9], Ma201, Mb[44]);
	Mb[44] = FMA( x[3], Ma202, Mb[44]);
	Mb[44] *= T(1.5000000000000000e+00);
	Mb[44] = FMA( x[29], Ma100, Mb[44]);
	Mb[44] = FMA( x[1], Ma103, Mb[44]);
	Mb[44] *= T(2.0000000000000000e+00);
	Mb[44] = FMA( x[44], Ma000, Mb[44]);
	Mb[44] = FMA( x[4], Ma003, Mb[44]);
	Mb[44] = FMA( x[19], Ma200, Mb[44]);
	Mb[45] *= T(1.6666666666666666e-01);
	Mb[45] = FMA( x[13], Ma020, Mb[45]);
	Mb[45] = FMA( x[7], Ma120, Mb[45]);
	Mb[45] *= T(1.5000000000000000e+00);
	Mb[45] = FMA( x[26], Ma010, Mb[45]);
	Mb[45] = FMA( x[5], Ma030, Mb[45]);
	Mb[45] = FMA( x[16], Ma110, Mb[45]);
	Mb[45] = FMA( x[2], Ma130, Mb[45]);
	Mb[45] *= T(4.0000000000000000e+00);
	Mb[45] = FMA( x[45], Ma000, Mb[45]);
	Mb[45] = FMA( x[1], Ma040, Mb[45]);
	Mb[45] = FMA( x[30], Ma100, Mb[45]);
	Mb[46] *= T(3.3333333333333331e-01);
	Mb[46] = FMA( x[27], Ma010, Mb[46]);
	Mb[46] = FMA( x[13], Ma011, Mb[46]);
	Mb[46] = FMA( x[14], Ma020, Mb[46]);
	Mb[46] = FMA( x[5], Ma021, Mb[46]);
	Mb[46] = FMA( x[17], Ma110, Mb[46]);
	Mb[46] = FMA( x[7], Ma111, Mb[46]);
	Mb[46] = FMA( x[8], Ma120, Mb[46]);
	Mb[46] = FMA( x[2], Ma121, Mb[46]);
	Mb[46] *= T(3.0000000000000000e+00);
	Mb[46] = FMA( x[46], Ma000, Mb[46]);
	Mb[46] = FMA( x[26], Ma001, Mb[46]);
	Mb[46] = FMA( x[6], Ma030, Mb[46]);
	Mb[46] = FMA( x[1], Ma031, Mb[46]);
	Mb[46] = FMA( x[31], Ma100, Mb[46]);
	Mb[46] = FMA( x[16], Ma101, Mb[46]);
	Mb[46] = FMA( x[3], Ma130, Mb[46]);
	Mb[47] *= T(2.5000000000000000e-01);
	Mb[47] = FMA( x[8], Ma111, Mb[47]);
	Mb[47] = FMA( x[14], Ma011, Mb[47]);
	Mb[47] *= T(2.0000000000000000e+00);
	Mb[47] = FMA( x[27], Ma001, Mb[47]);
	Mb[47] = FMA( x[3], Ma121, Mb[47]);
	Mb[47] = FMA( x[2], Ma112, Mb[47]);
	Mb[47] = FMA( x[18], Ma110, Mb[47]);
	Mb[47] = FMA( x[17], Ma101, Mb[47]);
	Mb[47] = FMA( x[6], Ma021, Mb[47]);
	Mb[47] = FMA( x[5], Ma012, Mb[47]);
	Mb[47] = FMA( x[28], Ma010, Mb[47]);
	Mb[47] *= T(2.0000000000000000e+00);
	Mb[47] = FMA( x[1], Ma022, Mb[47]);
	Mb[47] = FMA( x[32], Ma100, Mb[47]);
	Mb[47] = FMA( x[15], Ma020, Mb[47]);
	Mb[47] = FMA( x[7], Ma102, Mb[47]);
	Mb[47] = FMA( x[13], Ma002, Mb[47]);
	Mb[47] = FMA( x[9], Ma120, Mb[47]);
	Mb[47] = FMA( x[47], Ma000, Mb[47]);
	Mb[48] *= T(3.3333333333333331e-01);
	Mb[48] = FMA( x[28], Ma001, Mb[48]);
	Mb[48] = FMA( x[14], Ma002, Mb[48]);
	Mb[48] = FMA( x[15], Ma011, Mb[48]);
	Mb[48] = FMA( x[6], Ma012, Mb[48]);
	Mb[48] = FMA( x[18], Ma101, Mb[48]);
	Mb[48] = FMA( x[8], Ma102, Mb[48]);
	Mb[48] = FMA( x[9], Ma111, Mb[48]);
	Mb[48] = FMA( x[3], Ma112, Mb[48]);
	Mb[48] *= T(3.0000000000000000e+00);
	Mb[48] = FMA( x[48], Ma000, Mb[48]);
	Mb[48] = FMA( x[5], Ma003, Mb[48]);
	Mb[48] = FMA( x[29], Ma010, Mb[48]);
	Mb[48] = FMA( x[1], Ma013, Mb[48]);
	Mb[48] = FMA( x[33], Ma100, Mb[48]);
	Mb[48] = FMA( x[2], Ma103, Mb[48]);
	Mb[48] = FMA( x[19], Ma110, Mb[48]);
	Mb[49] *= T(1.6666666666666666e-01);
	Mb[49] = FMA( x[15], Ma002, Mb[49]);
	Mb[49] = FMA( x[9], Ma102, Mb[49]);
	Mb[49] *= T(1.5000000000000000e+00);
	Mb[49] = FMA( x[29], Ma001, Mb[49]);
	Mb[49] = FMA( x[6], Ma003, Mb[49]);
	Mb[49] = FMA( x[19], Ma101, Mb[49]);
	Mb[49] = FMA( x[3], Ma103, Mb[49]);
	Mb[49] *= T(4.0000000000000000e+00);
	Mb[49] = FMA( x[49], Ma000, Mb[49]);
	Mb[49] = FMA( x[1], Ma004, Mb[49]);
	Mb[49] = FMA( x[34], Ma100, Mb[49]);
	Mb[50] *= T(1.0000000000000001e-01);
	Mb[50] = FMA( x[16], Ma020, Mb[50]);
	Mb[50] = FMA( x[7], Ma030, Mb[50]);
	Mb[50] *= T(2.0000000000000000e+00);
	Mb[50] = FMA( x[30], Ma010, Mb[50]);
	Mb[50] = FMA( x[2], Ma040, Mb[50]);
	Mb[50] *= T(5.0000000000000000e+00);
	Mb[50] = FMA( x[50], Ma000, Mb[50]);
	Mb[51] *= T(1.6666666666666666e-01);
	Mb[51] = FMA( x[17], Ma020, Mb[51]);
	Mb[51] = FMA( x[7], Ma021, Mb[51]);
	Mb[51] *= T(1.5000000000000000e+00);
	Mb[51] = FMA( x[31], Ma010, Mb[51]);
	Mb[51] = FMA( x[16], Ma011, Mb[51]);
	Mb[51] = FMA( x[8], Ma030, Mb[51]);
	Mb[51] = FMA( x[2], Ma031, Mb[51]);
	Mb[51] *= T(4.0000000000000000e+00);
	Mb[51] = FMA( x[51], Ma000, Mb[51]);
	Mb[51] = FMA( x[30], Ma001, Mb[51]);
	Mb[51] = FMA( x[3], Ma040, Mb[51]);
	Mb[52] *= T(1.6666666666666666e-01);
	Mb[52] = FMA( x[17], Ma011, Mb[52]);
	Mb[52] = FMA( x[8], Ma021, Mb[52]);
	Mb[52] *= T(2.0000000000000000e+00);
	Mb[52] = FMA( x[32], Ma010, Mb[52]);
	Mb[52] = FMA( x[7], Ma012, Mb[52]);
	Mb[52] = FMA( x[18], Ma020, Mb[52]);
	Mb[52] = FMA( x[2], Ma022, Mb[52]);
	Mb[52] *= T(1.5000000000000000e+00);
	Mb[52] = FMA( x[31], Ma001, Mb[52]);
	Mb[52] = FMA( x[3], Ma031, Mb[52]);
	Mb[52] *= T(2.0000000000000000e+00);
	Mb[52] = FMA( x[52], Ma000, Mb[52]);
	Mb[52] = FMA( x[16], Ma002, Mb[52]);
	Mb[52] = FMA( x[9], Ma030, Mb[52]);
	Mb[53] *= T(1.6666666666666666e-01);
	Mb[53] = FMA( x[18], Ma011, Mb[53]);
	Mb[53] = FMA( x[8], Ma012, Mb[53]);
	Mb[53] *= T(2.0000000000000000e+00);
	Mb[53] = FMA( x[32], Ma001, Mb[53]);
	Mb[53] = FMA( x[17], Ma002, Mb[53]);
	Mb[53] = FMA( x[9], Ma021, Mb[53]);
	Mb[53] = FMA( x[3], Ma022, Mb[53]);
	Mb[53] *= T(1.5000000000000000e+00);
	Mb[53] = FMA( x[33], Ma010, Mb[53]);
	Mb[53] = FMA( x[2], Ma013, Mb[53]);
	Mb[53] *= T(2.0000000000000000e+00);
	Mb[53] = FMA( x[53], Ma000, Mb[53]);
	Mb[53] = FMA( x[7], Ma003, Mb[53]);
	Mb[53] = FMA( x[19], Ma020, Mb[53]);
	Mb[54] *= T(1.6666666666666666e-01);
	Mb[54] = FMA( x[18], Ma002, Mb[54]);
	Mb[54] = FMA( x[9], Ma012, Mb[54]);
	Mb[54] *= T(1.5000000000000000e+00);
	Mb[54] = FMA( x[33], Ma001, Mb[54]);
	Mb[54] = FMA( x[8], Ma003, Mb[54]);
	Mb[54] = FMA( x[19], Ma011, Mb[54]);
	Mb[54] = FMA( x[3], Ma013, Mb[54]);
	Mb[54] *= T(4.0000000000000000e+00);
	Mb[54] = FMA( x[54], Ma000, Mb[54]);
	Mb[54] = FMA( x[2], Ma004, Mb[54]);
	Mb[54] = FMA( x[34], Ma010, Mb[54]);
	Mb[55] *= T(1.0000000000000001e-01);
	Mb[55] = FMA( x[19], Ma002, Mb[55]);
	Mb[55] = FMA( x[9], Ma003, Mb[55]);
	Mb[55] *= T(2.0000000000000000e+00);
	Mb[55] = FMA( x[34], Ma001, Mb[55]);
	Mb[55] = FMA( x[3], Ma004, Mb[55]);
	Mb[55] *= T(5.0000000000000000e+00);
	Mb[55] = FMA( x[55], Ma000, Mb[55]);
	Mb[56] *= T(5.0000000000000003e-02);
	Mb[56] = FMA( x[10], Ma300, Mb[56]);
	Mb[56] *= T(1.3333333333333333e+00);
	Mb[56] = FMA( x[20], Ma200, Mb[56]);
	Mb[56] = FMA( x[4], Ma400, Mb[56]);
	Mb[56] *= T(2.5000000000000000e+00);
	Mb[56] = FMA( x[35], Ma100, Mb[56]);
	Mb[56] = FMA( x[1], Ma500, Mb[56]);
	Mb[56] *= T(6.0000000000000000e+00);
	Mb[56] = FMA( x[56], Ma000, Mb[56]);
	Mb[57] *= T(1.0000000000000001e-01);
	Mb[57] = FMA( x[21], Ma200, Mb[57]);
	Mb[57] = FMA( x[10], Ma210, Mb[57]);
	Mb[57] = FMA( x[11], Ma300, Mb[57]);
	Mb[57] = FMA( x[4], Ma310, Mb[57]);
	Mb[57] *= T(2.0000000000000000e+00);
	Mb[57] = FMA( x[36], Ma100, Mb[57]);
	Mb[57] = FMA( x[20], Ma110, Mb[57]);
	Mb[57] = FMA( x[5], Ma400, Mb[57]);
	Mb[57] = FMA( x[1], Ma410, Mb[57]);
	Mb[57] *= T(5.0000000000000000e+00);
	Mb[57] = FMA( x[57], Ma000, Mb[57]);
	Mb[57] = FMA( x[35], Ma010, Mb[57]);
	Mb[57] = FMA( x[2], Ma500, Mb[57]);
	Mb[58] *= T(1.0000000000000001e-01);
	Mb[58] = FMA( x[22], Ma200, Mb[58]);
	Mb[58] = FMA( x[10], Ma201, Mb[58]);
	Mb[58] = FMA( x[12], Ma300, Mb[58]);
	Mb[58] = FMA( x[4], Ma301, Mb[58]);
	Mb[58] *= T(2.0000000000000000e+00);
	Mb[58] = FMA( x[37], Ma100, Mb[58]);
	Mb[58] = FMA( x[20], Ma101, Mb[58]);
	Mb[58] = FMA( x[6], Ma400, Mb[58]);
	Mb[58] = FMA( x[1], Ma401, Mb[58]);
	Mb[58] *= T(5.0000000000000000e+00);
	Mb[58] = FMA( x[58], Ma000, Mb[58]);
	Mb[58] = FMA( x[35], Ma001, Mb[58]);
	Mb[58] = FMA( x[3], Ma500, Mb[58]);
	Mb[59] *= T(8.3333333333333329e-02);
	Mb[59] = FMA( x[11], Ma210, Mb[59]);
	Mb[59] *= T(1.5000000000000000e+00);
	Mb[59] = FMA( x[21], Ma110, Mb[59]);
	Mb[59] = FMA( x[5], Ma310, Mb[59]);
	Mb[59] *= T(1.3333333333333333e+00);
	Mb[59] = FMA( x[23], Ma200, Mb[59]);
	Mb[59] = FMA( x[4], Ma220, Mb[59]);
	Mb[59] *= T(1.5000000000000000e+00);
	Mb[59] = FMA( x[38], Ma100, Mb[59]);
	Mb[59] = FMA( x[10], Ma120, Mb[59]);
	Mb[59] = FMA( x[13], Ma300, Mb[59]);
	Mb[59] = FMA( x[1], Ma320, Mb[59]);
	Mb[59] *= T(2.0000000000000000e+00);
	Mb[59] = FMA( x[36], Ma010, Mb[59]);
	Mb[59] = FMA( x[2], Ma410, Mb[59]);
	Mb[59] *= T(2.0000000000000000e+00);
	Mb[59] = FMA( x[59], Ma000, Mb[59]);
	Mb[59] = FMA( x[20], Ma020, Mb[59]);
	Mb[59] = FMA( x[7], Ma400, Mb[59]);
	Mb[60] *= T(1.6666666666666666e-01);
	Mb[60] = FMA( x[24], Ma200, Mb[60]);
	Mb[60] = FMA( x[11], Ma201, Mb[60]);
	Mb[60] = FMA( x[12], Ma210, Mb[60]);
	Mb[60] = FMA( x[4], Ma211, Mb[60]);
	Mb[60] *= T(1.5000000000000000e+00);
	Mb[60] = FMA( x[39], Ma100, Mb[60]);
	Mb[60] = FMA( x[21], Ma101, Mb[60]);
	Mb[60] = FMA( x[22], Ma110, Mb[60]);
	Mb[60] = FMA( x[10], Ma111, Mb[60]);
	Mb[60] = FMA( x[14], Ma300, Mb[60]);
	Mb[60] = FMA( x[5], Ma301, Mb[60]);
	Mb[60] = FMA( x[6], Ma310, Mb[60]);
	Mb[60] = FMA( x[1], Ma311, Mb[60]);
	Mb[60] *= T(4.0000000000000000e+00);
	Mb[60] = FMA( x[3], Ma410, Mb[60]);
	Mb[60] = FMA( x[60], Ma000, Mb[60]);
	Mb[60] = FMA( x[2], Ma401, Mb[60]);
	Mb[60] = FMA( x[8], Ma400, Mb[60]);
	Mb[60] = FMA( x[20], Ma011, Mb[60]);
	Mb[60] = FMA( x[37], Ma010, Mb[60]);
	Mb[60] = FMA( x[36], Ma001, Mb[60]);
	Mb[61] *= T(8.3333333333333329e-02);
	Mb[61] = FMA( x[12], Ma201, Mb[61]);
	Mb[61] *= T(1.5000000000000000e+00);
	Mb[61] = FMA( x[22], Ma101, Mb[61]);
	Mb[61] = FMA( x[6], Ma301, Mb[61]);
	Mb[61] *= T(1.3333333333333333e+00);
	Mb[61] = FMA( x[25], Ma200, Mb[61]);
	Mb[61] = FMA( x[4], Ma202, Mb[61]);
	Mb[61] *= T(1.5000000000000000e+00);
	Mb[61] = FMA( x[40], Ma100, Mb[61]);
	Mb[61] = FMA( x[10], Ma102, Mb[61]);
	Mb[61] = FMA( x[15], Ma300, Mb[61]);
	Mb[61] = FMA( x[1], Ma302, Mb[61]);
	Mb[61] *= T(2.0000000000000000e+00);
	Mb[61] = FMA( x[37], Ma001, Mb[61]);
	Mb[61] = FMA( x[3], Ma401, Mb[61]);
	Mb[61] *= T(2.0000000000000000e+00);
	Mb[61] = FMA( x[61], Ma000, Mb[61]);
	Mb[61] = FMA( x[20], Ma002, Mb[61]);
	Mb[61] = FMA( x[9], Ma400, Mb[61]);
	Mb[62] *= T(1.1111111111111110e-01);
	Mb[62] = FMA( x[23], Ma110, Mb[62]);
	Mb[62] = FMA( x[11], Ma120, Mb[62]);
	Mb[62] = FMA( x[13], Ma210, Mb[62]);
	Mb[62] = FMA( x[5], Ma220, Mb[62]);
	Mb[62] *= T(3.0000000000000000e+00);
	Mb[62] = FMA( x[38], Ma010, Mb[62]);
	Mb[62] = FMA( x[21], Ma020, Mb[62]);
	Mb[62] = FMA( x[41], Ma100, Mb[62]);
	Mb[62] = FMA( x[4], Ma130, Mb[62]);
	Mb[62] = FMA( x[26], Ma200, Mb[62]);
	Mb[62] = FMA( x[1], Ma230, Mb[62]);
	Mb[62] = FMA( x[7], Ma310, Mb[62]);
	Mb[62] = FMA( x[2], Ma320, Mb[62]);
	Mb[62] *= T(3.0000000000000000e+00);
	Mb[62] = FMA( x[62], Ma000, Mb[62]);
	Mb[62] = FMA( x[10], Ma030, Mb[62]);
	Mb[62] = FMA( x[16], Ma300, Mb[62]);
	Mb[63] *= T(1.6666666666666666e-01);
	Mb[63] = FMA( x[5], Ma211, Mb[63]);
	Mb[63] = FMA( x[14], Ma210, Mb[63]);
	Mb[63] = FMA( x[24], Ma110, Mb[63]);
	Mb[63] = FMA( x[11], Ma111, Mb[63]);
	Mb[63] *= T(2.0000000000000000e+00);
	Mb[63] = FMA( x[1], Ma221, Mb[63]);
	Mb[63] = FMA( x[6], Ma220, Mb[63]);
	Mb[63] = FMA( x[13], Ma201, Mb[63]);
	Mb[63] = FMA( x[27], Ma200, Mb[63]);
	Mb[63] = FMA( x[4], Ma121, Mb[63]);
	Mb[63] = FMA( x[12], Ma120, Mb[63]);
	Mb[63] = FMA( x[23], Ma101, Mb[63]);
	Mb[63] = FMA( x[42], Ma100, Mb[63]);
	Mb[63] *= T(1.5000000000000000e+00);
	Mb[63] = FMA( x[8], Ma310, Mb[63]);
	Mb[63] = FMA( x[2], Ma311, Mb[63]);
	Mb[63] = FMA( x[21], Ma011, Mb[63]);
	Mb[63] = FMA( x[39], Ma010, Mb[63]);
	Mb[63] *= T(2.0000000000000000e+00);
	Mb[63] = FMA( x[3], Ma320, Mb[63]);
	Mb[63] = FMA( x[7], Ma301, Mb[63]);
	Mb[63] = FMA( x[63], Ma000, Mb[63]);
	Mb[63] = FMA( x[17], Ma300, Mb[63]);
	Mb[63] = FMA( x[10], Ma021, Mb[63]);
	Mb[63] = FMA( x[22], Ma020, Mb[63]);
	Mb[63] = FMA( x[38], Ma001, Mb[63]);
	Mb[64] *= T(1.6666666666666666e-01);
	Mb[64] = FMA( x[6], Ma211, Mb[64]);
	Mb[64] = FMA( x[24], Ma101, Mb[64]);
	Mb[64] = FMA( x[12], Ma111, Mb[64]);
	Mb[64] = FMA( x[14], Ma201, Mb[64]);
	Mb[64] *= T(2.0000000000000000e+00);
	Mb[64] = FMA( x[1], Ma212, Mb[64]);
	Mb[64] = FMA( x[15], Ma210, Mb[64]);
	Mb[64] = FMA( x[5], Ma202, Mb[64]);
	Mb[64] = FMA( x[43], Ma100, Mb[64]);
	Mb[64] = FMA( x[11], Ma102, Mb[64]);
	Mb[64] = FMA( x[25], Ma110, Mb[64]);
	Mb[64] = FMA( x[4], Ma112, Mb[64]);
	Mb[64] = FMA( x[28], Ma200, Mb[64]);
	Mb[64] *= T(1.5000000000000000e+00);
	Mb[64] = FMA( x[3], Ma311, Mb[64]);
	Mb[64] = FMA( x[8], Ma301, Mb[64]);
	Mb[64] = FMA( x[22], Ma011, Mb[64]);
	Mb[64] = FMA( x[39], Ma001, Mb[64]);
	Mb[64] *= T(2.0000000000000000e+00);
	Mb[64] = FMA( x[10], Ma012, Mb[64]);
	Mb[64] = FMA( x[40], Ma010, Mb[64]);
	Mb[64] = FMA( x[21], Ma002, Mb[64]);
	Mb[64] = FMA( x[18], Ma300, Mb[64]);
	Mb[64] = FMA( x[2], Ma302, Mb[64]);
	Mb[64] = FMA( x[9], Ma310, Mb[64]);
	Mb[64] = FMA( x[64], Ma000, Mb[64]);
	Mb[65] *= T(1.1111111111111110e-01);
	Mb[65] = FMA( x[25], Ma101, Mb[65]);
	Mb[65] = FMA( x[12], Ma102, Mb[65]);
	Mb[65] = FMA( x[15], Ma201, Mb[65]);
	Mb[65] = FMA( x[6], Ma202, Mb[65]);
	Mb[65] *= T(3.0000000000000000e+00);
	Mb[65] = FMA( x[40], Ma001, Mb[65]);
	Mb[65] = FMA( x[22], Ma002, Mb[65]);
	Mb[65] = FMA( x[44], Ma100, Mb[65]);
	Mb[65] = FMA( x[4], Ma103, Mb[65]);
	Mb[65] = FMA( x[29], Ma200, Mb[65]);
	Mb[65] = FMA( x[1], Ma203, Mb[65]);
	Mb[65] = FMA( x[9], Ma301, Mb[65]);
	Mb[65] = FMA( x[3], Ma302, Mb[65]);
	Mb[65] *= T(3.0000000000000000e+00);
	Mb[65] = FMA( x[65], Ma000, Mb[65]);
	Mb[65] = FMA( x[10], Ma003, Mb[65]);
	Mb[65] = FMA( x[19], Ma300, Mb[65]);
	Mb[66] *= T(8.3333333333333329e-02);
	Mb[66] = FMA( x[13], Ma120, Mb[66]);
	Mb[66] *= T(1.5000000000000000e+00);
	Mb[66] = FMA( x[26], Ma110, Mb[66]);
	Mb[66] = FMA( x[5], Ma130, Mb[66]);
	Mb[66] *= T(1.3333333333333333e+00);
	Mb[66] = FMA( x[23], Ma020, Mb[66]);
	Mb[66] = FMA( x[7], Ma220, Mb[66]);
	Mb[66] *= T(1.5000000000000000e+00);
	Mb[66] = FMA( x[41], Ma010, Mb[66]);
	Mb[66] = FMA( x[11], Ma030, Mb[66]);
	Mb[66] = FMA( x[16], Ma210, Mb[66]);
	Mb[66] = FMA( x[2], Ma230, Mb[66]);
	Mb[66] *= T(2.0000000000000000e+00);
	Mb[66] = FMA( x[45], Ma100, Mb[66]);
	Mb[66] = FMA( x[1], Ma140, Mb[66]);
	Mb[66] *= T(2.0000000000000000e+00);
	Mb[66] = FMA( x[66], Ma000, Mb[66]);
	Mb[66] = FMA( x[4], Ma040, Mb[66]);
	Mb[66] = FMA( x[30], Ma200, Mb[66]);
	Mb[67] *= T(1.6666666666666666e-01);
	Mb[67] = FMA( x[27], Ma110, Mb[67]);
	Mb[67] = FMA( x[13], Ma111, Mb[67]);
	Mb[67] = FMA( x[14], Ma120, Mb[67]);
	Mb[67] = FMA( x[5], Ma121, Mb[67]);
	Mb[67] *= T(2.0000000000000000e+00);
	Mb[67] = FMA( x[17], Ma210, Mb[67]);
	Mb[67] = FMA( x[42], Ma010, Mb[67]);
	Mb[67] = FMA( x[23], Ma011, Mb[67]);
	Mb[67] = FMA( x[24], Ma020, Mb[67]);
	Mb[67] = FMA( x[11], Ma021, Mb[67]);
	Mb[67] = FMA( x[2], Ma221, Mb[67]);
	Mb[67] = FMA( x[8], Ma220, Mb[67]);
	Mb[67] = FMA( x[7], Ma211, Mb[67]);
	Mb[67] *= T(1.5000000000000000e+00);
	Mb[67] = FMA( x[26], Ma101, Mb[67]);
	Mb[67] = FMA( x[1], Ma131, Mb[67]);
	Mb[67] = FMA( x[6], Ma130, Mb[67]);
	Mb[67] = FMA( x[46], Ma100, Mb[67]);
	Mb[67] *= T(2.0000000000000000e+00);
	Mb[67] = FMA( x[3], Ma230, Mb[67]);
	Mb[67] = FMA( x[67], Ma000, Mb[67]);
	Mb[67] = FMA( x[16], Ma201, Mb[67]);
	Mb[67] = FMA( x[31], Ma200, Mb[67]);
	Mb[67] = FMA( x[4], Ma031, Mb[67]);
	Mb[67] = FMA( x[12], Ma030, Mb[67]);
	Mb[67] = FMA( x[41], Ma001, Mb[67]);
	Mb[68] *= T(1.2500000000000000e-01);
	Mb[68] = FMA( x[14], Ma111, Mb[68]);
	Mb[68] *= T(2.0000000000000000e+00);
	Mb[68] = FMA( x[8], Ma211, Mb[68]);
	Mb[68] = FMA( x[24], Ma011, Mb[68]);
	Mb[68] = FMA( x[6], Ma121, Mb[68]);
	Mb[68] = FMA( x[5], Ma112, Mb[68]);
	Mb[68] = FMA( x[27], Ma101, Mb[68]);
	Mb[68] = FMA( x[28], Ma110, Mb[68]);
	Mb[68] *= T(2.0000000000000000e+00);
	Mb[68] = FMA( x[3], Ma221, Mb[68]);
	Mb[68] = FMA( x[2], Ma212, Mb[68]);
	Mb[68] = FMA( x[18], Ma210, Mb[68]);
	Mb[68] = FMA( x[17], Ma201, Mb[68]);
	Mb[68] = FMA( x[1], Ma122, Mb[68]);
	Mb[68] = FMA( x[15], Ma120, Mb[68]);
	Mb[68] = FMA( x[13], Ma102, Mb[68]);
	Mb[68] = FMA( x[47], Ma100, Mb[68]);
	Mb[68] = FMA( x[12], Ma021, Mb[68]);
	Mb[68] = FMA( x[11], Ma012, Mb[68]);
	Mb[68] = FMA( x[43], Ma010, Mb[68]);
	Mb[68] = FMA( x[42], Ma001, Mb[68]);
	Mb[68] *= T(2.0000000000000000e+00);
	Mb[68] = FMA( x[4], Ma022, Mb[68]);
	Mb[68] = FMA( x[25], Ma020, Mb[68]);
	Mb[68] = FMA( x[32], Ma200, Mb[68]);
	Mb[68] = FMA( x[7], Ma202, Mb[68]);
	Mb[68] = FMA( x[23], Ma002, Mb[68]);
	Mb[68] = FMA( x[9], Ma220, Mb[68]);
	Mb[68] = FMA( x[68], Ma000, Mb[68]);
	Mb[69] *= T(1.6666666666666666e-01);
	Mb[69] = FMA( x[6], Ma112, Mb[69]);
	Mb[69] = FMA( x[15], Ma111, Mb[69]);
	Mb[69] = FMA( x[14], Ma102, Mb[69]);
	Mb[69] = FMA( x[28], Ma101, Mb[69]);
	Mb[69] *= T(2.0000000000000000e+00);
	Mb[69] = FMA( x[43], Ma001, Mb[69]);
	Mb[69] = FMA( x[3], Ma212, Mb[69]);
	Mb[69] = FMA( x[9], Ma211, Mb[69]);
	Mb[69] = FMA( x[8], Ma202, Mb[69]);
	Mb[69] = FMA( x[18], Ma201, Mb[69]);
	Mb[69] = FMA( x[12], Ma012, Mb[69]);
	Mb[69] = FMA( x[25], Ma011, Mb[69]);
	Mb[69] = FMA( x[24], Ma002, Mb[69]);
	Mb[69] *= T(1.5000000000000000e+00);
	Mb[69] = FMA( x[48], Ma100, Mb[69]);
	Mb[69] = FMA( x[5], Ma103, Mb[69]);
	Mb[69] = FMA( x[29], Ma110, Mb[69]);
	Mb[69] = FMA( x[1], Ma113, Mb[69]);
	Mb[69] *= T(2.0000000000000000e+00);
	Mb[69] = FMA( x[4], Ma013, Mb[69]);
	Mb[69] = FMA( x[33], Ma200, Mb[69]);
	Mb[69] = FMA( x[44], Ma010, Mb[69]);
	Mb[69] = FMA( x[11], Ma003, Mb[69]);
	Mb[69] = FMA( x[2], Ma203, Mb[69]);
	Mb[69] = FMA( x[19], Ma210, Mb[69]);
	Mb[69] = FMA( x[69], Ma000, Mb[69]);
	Mb[70] *= T(8.3333333333333329e-02);
	Mb[70] = FMA( x[15], Ma102, Mb[70]);
	Mb[70] *= T(1.5000000000000000e+00);
	Mb[70] = FMA( x[29], Ma101, Mb[70]);
	Mb[70] = FMA( x[6], Ma103, Mb[70]);
	Mb[70] *= T(1.3333333333333333e+00);
	Mb[70] = FMA( x[25], Ma002, Mb[70]);
	Mb[70] = FMA( x[9], Ma202, Mb[70]);
	Mb[70] *= T(1.5000000000000000e+00);
	Mb[70] = FMA( x[44], Ma001, Mb[70]);
	Mb[70] = FMA( x[12], Ma003, Mb[70]);
	Mb[70] = FMA( x[19], Ma201, Mb[70]);
	Mb[70] = FMA( x[3], Ma203, Mb[70]);
	Mb[70] *= T(2.0000000000000000e+00);
	Mb[70] = FMA( x[49], Ma100, Mb[70]);
	Mb[70] = FMA( x[1], Ma104, Mb[70]);
	Mb[70] *= T(2.0000000000000000e+00);
	Mb[70] = FMA( x[70], Ma000, Mb[70]);
	Mb[70] = FMA( x[4], Ma004, Mb[70]);
	Mb[70] = FMA( x[34], Ma200, Mb[70]);
	Mb[71] *= T(1.0000000000000001e-01);
	Mb[71] = FMA( x[26], Ma020, Mb[71]);
	Mb[71] = FMA( x[13], Ma030, Mb[71]);
	Mb[71] = FMA( x[16], Ma120, Mb[71]);
	Mb[71] = FMA( x[7], Ma130, Mb[71]);
	Mb[71] *= T(2.0000000000000000e+00);
	Mb[71] = FMA( x[45], Ma010, Mb[71]);
	Mb[71] = FMA( x[5], Ma040, Mb[71]);
	Mb[71] = FMA( x[30], Ma110, Mb[71]);
	Mb[71] = FMA( x[2], Ma140, Mb[71]);
	Mb[71] *= T(5.0000000000000000e+00);
	Mb[71] = FMA( x[71], Ma000, Mb[71]);
	Mb[71] = FMA( x[1], Ma050, Mb[71]);
	Mb[71] = FMA( x[50], Ma100, Mb[71]);
	Mb[72] *= T(1.6666666666666666e-01);
	Mb[72] = FMA( x[27], Ma020, Mb[72]);
	Mb[72] = FMA( x[13], Ma021, Mb[72]);
	Mb[72] = FMA( x[7], Ma121, Mb[72]);
	Mb[72] = FMA( x[17], Ma120, Mb[72]);
	Mb[72] *= T(1.5000000000000000e+00);
	Mb[72] = FMA( x[46], Ma010, Mb[72]);
	Mb[72] = FMA( x[26], Ma011, Mb[72]);
	Mb[72] = FMA( x[14], Ma030, Mb[72]);
	Mb[72] = FMA( x[5], Ma031, Mb[72]);
	Mb[72] = FMA( x[2], Ma131, Mb[72]);
	Mb[72] = FMA( x[8], Ma130, Mb[72]);
	Mb[72] = FMA( x[31], Ma110, Mb[72]);
	Mb[72] = FMA( x[16], Ma111, Mb[72]);
	Mb[72] *= T(4.0000000000000000e+00);
	Mb[72] = FMA( x[1], Ma041, Mb[72]);
	Mb[72] = FMA( x[3], Ma140, Mb[72]);
	Mb[72] = FMA( x[30], Ma101, Mb[72]);
	Mb[72] = FMA( x[51], Ma100, Mb[72]);
	Mb[72] = FMA( x[72], Ma000, Mb[72]);
	Mb[72] = FMA( x[6], Ma040, Mb[72]);
	Mb[72] = FMA( x[45], Ma001, Mb[72]);
	Mb[73] *= T(1.6666666666666666e-01);
	Mb[73] = FMA( x[27], Ma011, Mb[73]);
	Mb[73] = FMA( x[14], Ma021, Mb[73]);
	Mb[73] = FMA( x[8], Ma121, Mb[73]);
	Mb[73] = FMA( x[17], Ma111, Mb[73]);
	Mb[73] *= T(2.0000000000000000e+00);
	Mb[73] = FMA( x[2], Ma122, Mb[73]);
	Mb[73] = FMA( x[47], Ma010, Mb[73]);
	Mb[73] = FMA( x[13], Ma012, Mb[73]);
	Mb[73] = FMA( x[28], Ma020, Mb[73]);
	Mb[73] = FMA( x[5], Ma022, Mb[73]);
	Mb[73] = FMA( x[18], Ma120, Mb[73]);
	Mb[73] = FMA( x[7], Ma112, Mb[73]);
	Mb[73] = FMA( x[32], Ma110, Mb[73]);
	Mb[73] *= T(1.5000000000000000e+00);
	Mb[73] = FMA( x[46], Ma001, Mb[73]);
	Mb[73] = FMA( x[3], Ma131, Mb[73]);
	Mb[73] = FMA( x[31], Ma101, Mb[73]);
	Mb[73] = FMA( x[6], Ma031, Mb[73]);
	Mb[73] *= T(2.0000000000000000e+00);
	Mb[73] = FMA( x[16], Ma102, Mb[73]);
	Mb[73] = FMA( x[52], Ma100, Mb[73]);
	Mb[73] = FMA( x[1], Ma032, Mb[73]);
	Mb[73] = FMA( x[15], Ma030, Mb[73]);
	Mb[73] = FMA( x[26], Ma002, Mb[73]);
	Mb[73] = FMA( x[9], Ma130, Mb[73]);
	Mb[73] = FMA( x[73], Ma000, Mb[73]);
	Mb[74] *= T(1.6666666666666666e-01);
	Mb[74] = FMA( x[8], Ma112, Mb[74]);
	Mb[74] = FMA( x[18], Ma111, Mb[74]);
	Mb[74] = FMA( x[28], Ma011, Mb[74]);
	Mb[74] = FMA( x[14], Ma012, Mb[74]);
	Mb[74] *= T(2.0000000000000000e+00);
	Mb[74] = FMA( x[47], Ma001, Mb[74]);
	Mb[74] = FMA( x[3], Ma122, Mb[74]);
	Mb[74] = FMA( x[9], Ma121, Mb[74]);
	Mb[74] = FMA( x[17], Ma102, Mb[74]);
	Mb[74] = FMA( x[32], Ma101, Mb[74]);
	Mb[74] = FMA( x[6], Ma022, Mb[74]);
	Mb[74] = FMA( x[15], Ma021, Mb[74]);
	Mb[74] = FMA( x[27], Ma002, Mb[74]);
	Mb[74] *= T(1.5000000000000000e+00);
	Mb[74] = FMA( x[5], Ma013, Mb[74]);
	Mb[74] = FMA( x[33], Ma110, Mb[74]);
	Mb[74] = FMA( x[48], Ma010, Mb[74]);
	Mb[74] = FMA( x[2], Ma113, Mb[74]);
	Mb[74] *= T(2.0000000000000000e+00);
	Mb[74] = FMA( x[1], Ma023, Mb[74]);
	Mb[74] = FMA( x[53], Ma100, Mb[74]);
	Mb[74] = FMA( x[29], Ma020, Mb[74]);
	Mb[74] = FMA( x[7], Ma103, Mb[74]);
	Mb[74] = FMA( x[13], Ma003, Mb[74]);
	Mb[74] = FMA( x[19], Ma120, Mb[74]);
	Mb[74] = FMA( x[74], Ma000, Mb[74]);
	Mb[75] *= T(1.6666666666666666e-01);
	Mb[75] = FMA( x[28], Ma002, Mb[75]);
	Mb[75] = FMA( x[9], Ma112, Mb[75]);
	Mb[75] = FMA( x[18], Ma102, Mb[75]);
	Mb[75] = FMA( x[15], Ma012, Mb[75]);
	Mb[75] *= T(1.5000000000000000e+00);
	Mb[75] = FMA( x[48], Ma001, Mb[75]);
	Mb[75] = FMA( x[3], Ma113, Mb[75]);
	Mb[75] = FMA( x[19], Ma111, Mb[75]);
	Mb[75] = FMA( x[8], Ma103, Mb[75]);
	Mb[75] = FMA( x[33], Ma101, Mb[75]);
	Mb[75] = FMA( x[6], Ma013, Mb[75]);
	Mb[75] = FMA( x[29], Ma011, Mb[75]);
	Mb[75] = FMA( x[14], Ma003, Mb[75]);
	Mb[75] *= T(4.0000000000000000e+00);
	Mb[75] = FMA( x[1], Ma014, Mb[75]);
	Mb[75] = FMA( x[54], Ma100, Mb[75]);
	Mb[75] = FMA( x[49], Ma010, Mb[75]);
	Mb[75] = FMA( x[2], Ma104, Mb[75]);
	Mb[75] = FMA( x[34], Ma110, Mb[75]);
	Mb[75] = FMA( x[5], Ma004, Mb[75]);
	Mb[75] = FMA( x[75], Ma000, Mb[75]);
	Mb[76] *= T(1.0000000000000001e-01);
	Mb[76] = FMA( x[29], Ma002, Mb[76]);
	Mb[76] = FMA( x[15], Ma003, Mb[76]);
	Mb[76] = FMA( x[19], Ma102, Mb[76]);
	Mb[76] = FMA( x[9], Ma103, Mb[76]);
	Mb[76] *= T(2.0000000000000000e+00);
	Mb[76] = FMA( x[49], Ma001, Mb[76]);
	Mb[76] = FMA( x[6], Ma004, Mb[76]);
	Mb[76] = FMA( x[34], Ma101, Mb[76]);
	Mb[76] = FMA( x[3], Ma104, Mb[76]);
	Mb[76] *= T(5.0000000000000000e+00);
	Mb[76] = FMA( x[76], Ma000, Mb[76]);
	Mb[76] = FMA( x[1], Ma005, Mb[76]);
	Mb[76] = FMA( x[55], Ma100, Mb[76]);
	Mb[77] *= T(5.0000000000000003e-02);
	Mb[77] = FMA( x[16], Ma030, Mb[77]);
	Mb[77] *= T(1.3333333333333333e+00);
	Mb[77] = FMA( x[30], Ma020, Mb[77]);
	Mb[77] = FMA( x[7], Ma040, Mb[77]);
	Mb[77] *= T(2.5000000000000000e+00);
	Mb[77] = FMA( x[50], Ma010, Mb[77]);
	Mb[77] = FMA( x[2], Ma050, Mb[77]);
	Mb[77] *= T(6.0000000000000000e+00);
	Mb[77] = FMA( x[77], Ma000, Mb[77]);
	Mb[78] *= T(1.0000000000000001e-01);
	Mb[78] = FMA( x[31], Ma020, Mb[78]);
	Mb[78] = FMA( x[16], Ma021, Mb[78]);
	Mb[78] = FMA( x[17], Ma030, Mb[78]);
	Mb[78] = FMA( x[7], Ma031, Mb[78]);
	Mb[78] *= T(2.0000000000000000e+00);
	Mb[78] = FMA( x[51], Ma010, Mb[78]);
	Mb[78] = FMA( x[30], Ma011, Mb[78]);
	Mb[78] = FMA( x[8], Ma040, Mb[78]);
	Mb[78] = FMA( x[2], Ma041, Mb[78]);
	Mb[78] *= T(5.0000000000000000e+00);
	Mb[78] = FMA( x[78], Ma000, Mb[78]);
	Mb[78] = FMA( x[50], Ma001, Mb[78]);
	Mb[78] = FMA( x[3], Ma050, Mb[78]);
	Mb[79] *= T(8.3333333333333329e-02);
	Mb[79] = FMA( x[17], Ma021, Mb[79]);
	Mb[79] *= T(1.5000000000000000e+00);
	Mb[79] = FMA( x[31], Ma011, Mb[79]);
	Mb[79] = FMA( x[8], Ma031, Mb[79]);
	Mb[79] *= T(1.3333333333333333e+00);
	Mb[79] = FMA( x[32], Ma020, Mb[79]);
	Mb[79] = FMA( x[7], Ma022, Mb[79]);
	Mb[79] *= T(1.5000000000000000e+00);
	Mb[79] = FMA( x[52], Ma010, Mb[79]);
	Mb[79] = FMA( x[16], Ma012, Mb[79]);
	Mb[79] = FMA( x[18], Ma030, Mb[79]);
	Mb[79] = FMA( x[2], Ma032, Mb[79]);
	Mb[79] *= T(2.0000000000000000e+00);
	Mb[79] = FMA( x[51], Ma001, Mb[79]);
	Mb[79] = FMA( x[3], Ma041, Mb[79]);
	Mb[79] *= T(2.0000000000000000e+00);
	Mb[79] = FMA( x[79], Ma000, Mb[79]);
	Mb[79] = FMA( x[30], Ma002, Mb[79]);
	Mb[79] = FMA( x[9], Ma040, Mb[79]);
	Mb[80] *= T(1.1111111111111110e-01);
	Mb[80] = FMA( x[32], Ma011, Mb[80]);
	Mb[80] = FMA( x[17], Ma012, Mb[80]);
	Mb[80] = FMA( x[18], Ma021, Mb[80]);
	Mb[80] = FMA( x[8], Ma022, Mb[80]);
	Mb[80] *= T(3.0000000000000000e+00);
	Mb[80] = FMA( x[52], Ma001, Mb[80]);
	Mb[80] = FMA( x[31], Ma002, Mb[80]);
	Mb[80] = FMA( x[53], Ma010, Mb[80]);
	Mb[80] = FMA( x[7], Ma013, Mb[80]);
	Mb[80] = FMA( x[33], Ma020, Mb[80]);
	Mb[80] = FMA( x[2], Ma023, Mb[80]);
	Mb[80] = FMA( x[9], Ma031, Mb[80]);
	Mb[80] = FMA( x[3], Ma032, Mb[80]);
	Mb[80] *= T(3.0000000000000000e+00);
	Mb[80] = FMA( x[80], Ma000, Mb[80]);
	Mb[80] = FMA( x[16], Ma003, Mb[80]);
	Mb[80] = FMA( x[19], Ma030, Mb[80]);
	Mb[81] *= T(8.3333333333333329e-02);
	Mb[81] = FMA( x[18], Ma012, Mb[81]);
	Mb[81] *= T(1.5000000000000000e+00);
	Mb[81] = FMA( x[33], Ma011, Mb[81]);
	Mb[81] = FMA( x[8], Ma013, Mb[81]);
	Mb[81] *= T(1.3333333333333333e+00);
	Mb[81] = FMA( x[32], Ma002, Mb[81]);
	Mb[81] = FMA( x[9], Ma022, Mb[81]);
	Mb[81] *= T(1.5000000000000000e+00);
	Mb[81] = FMA( x[53], Ma001, Mb[81]);
	Mb[81] = FMA( x[17], Ma003, Mb[81]);
	Mb[81] = FMA( x[19], Ma021, Mb[81]);
	Mb[81] = FMA( x[3], Ma023, Mb[81]);
	Mb[81] *= T(2.0000000000000000e+00);
	Mb[81] = FMA( x[54], Ma010, Mb[81]);
	Mb[81] = FMA( x[2], Ma014, Mb[81]);
	Mb[81] *= T(2.0000000000000000e+00);
	Mb[81] = FMA( x[81], Ma000, Mb[81]);
	Mb[81] = FMA( x[7], Ma004, Mb[81]);
	Mb[81] = FMA( x[34], Ma020, Mb[81]);
	Mb[82] *= T(1.0000000000000001e-01);
	Mb[82] = FMA( x[33], Ma002, Mb[82]);
	Mb[82] = FMA( x[18], Ma003, Mb[82]);
	Mb[82] = FMA( x[19], Ma012, Mb[82]);
	Mb[82] = FMA( x[9], Ma013, Mb[82]);
	Mb[82] *= T(2.0000000000000000e+00);
	Mb[82] = FMA( x[54], Ma001, Mb[82]);
	Mb[82] = FMA( x[8], Ma004, Mb[82]);
	Mb[82] = FMA( x[34], Ma011, Mb[82]);
	Mb[82] = FMA( x[3], Ma014, Mb[82]);
	Mb[82] *= T(5.0000000000000000e+00);
	Mb[82] = FMA( x[82], Ma000, Mb[82]);
	Mb[82] = FMA( x[2], Ma005, Mb[82]);
	Mb[82] = FMA( x[55], Ma010, Mb[82]);
	Mb[83] *= T(5.0000000000000003e-02);
	Mb[83] = FMA( x[19], Ma003, Mb[83]);
	Mb[83] *= T(1.3333333333333333e+00);
	Mb[83] = FMA( x[34], Ma002, Mb[83]);
	Mb[83] = FMA( x[9], Ma004, Mb[83]);
	Mb[83] *= T(2.5000000000000000e+00);
	Mb[83] = FMA( x[55], Ma001, Mb[83]);
	Mb[83] = FMA( x[3], Ma005, Mb[83]);
	Mb[83] *= T(6.0000000000000000e+00);
	Mb[83] = FMA( x[83], Ma000, Mb[83]);
	T Mb_2_1_000 = Mb[9];
	T Mb_3_1_001 = Mb[19];
	T Mb_4_1_002 = Mb[34];
	T Mb_5_1_003 = Mb[55];
	T Mb_6_1_004 = Mb[83];
	T Mb_3_1_010 = Mb[18];
	T Mb_4_1_011 = Mb[33];
	T Mb_5_1_012 = Mb[54];
	T Mb_6_1_013 = Mb[82];
	T Mb_4_1_020 = Mb[32];
	T Mb_5_1_021 = Mb[53];
	T Mb_6_1_022 = Mb[81];
	T Mb_5_1_030 = Mb[52];
	T Mb_6_1_031 = Mb[80];
	T Mb_6_1_040 = Mb[79];
	T Mb_3_1_100 = Mb[15];
	T Mb_4_1_101 = Mb[29];
	T Mb_5_1_102 = Mb[49];
	T Mb_6_1_103 = Mb[76];
	T Mb_4_1_110 = Mb[28];
	T Mb_5_1_111 = Mb[48];
	T Mb_6_1_112 = Mb[75];
	T Mb_5_1_120 = Mb[47];
	T Mb_6_1_121 = Mb[74];
	T Mb_6_1_130 = Mb[73];
	T Mb_4_1_200 = Mb[25];
	T Mb_5_1_201 = Mb[44];
	T Mb_6_1_202 = Mb[70];
	T Mb_5_1_210 = Mb[43];
	T Mb_6_1_211 = Mb[69];
	T Mb_6_1_220 = Mb[68];
	T Mb_5_1_300 = Mb[40];
	T Mb_6_1_301 = Mb[65];
	T Mb_6_1_310 = Mb[64];
	T Mb_6_1_400 = Mb[61];
	T Mb_4_2_000 = Mb[34];
	T Mb_5_2_001 = Mb[55];
	T Mb_6_2_002 = Mb[83];
	T Mb_5_2_010 = Mb[54];
	T Mb_6_2_011 = Mb[82];
	T Mb_6_2_020 = Mb[81];
	T Mb_5_2_100 = Mb[49];
	T Mb_6_2_101 = Mb[76];
	T Mb_6_2_110 = Mb[75];
	T Mb_6_2_200 = Mb[70];
	T Mb_6_3_000 = Mb[83];
	Mb_2_1_000 += Mb[7];
	Mb_6_1_301 += Mb[58];
	Mb_2_1_000 += Mb[4];
	Mb_6_1_310 += Mb[62];
	Mb_3_1_001 += Mb[17];
	Mb_6_1_310 += Mb[57];
	Mb_3_1_001 += Mb[12];
	Mb_6_1_400 += Mb[59];
	Mb_4_1_002 += Mb[32];
	Mb_6_1_400 += Mb[56];
	Mb_4_1_002 += Mb[25];
	Mb_4_2_000 = FMA(T(2.0000000000000000e+00), Mb[32], Mb_4_2_000);
	Mb_5_1_003 += Mb[53];
	Mb_4_2_000 += Mb[30];
	Mb_5_1_003 += Mb[44];
	Mb_4_2_000 = FMA(T(2.0000000000000000e+00), Mb[25], Mb_4_2_000);
	Mb_6_1_004 += Mb[81];
	Mb_4_2_000 = FMA(T(2.0000000000000000e+00), Mb[23], Mb_4_2_000);
	Mb_6_1_004 += Mb[70];
	Mb_4_2_000 += Mb[20];
	Mb_3_1_010 += Mb[16];
	Mb_5_2_001 = FMA(T(2.0000000000000000e+00), Mb[53], Mb_5_2_001);
	Mb_3_1_010 += Mb[11];
	Mb_5_2_001 += Mb[51];
	Mb_4_1_011 += Mb[31];
	Mb_5_2_001 = FMA(T(2.0000000000000000e+00), Mb[44], Mb_5_2_001);
	Mb_4_1_011 += Mb[24];
	Mb_5_2_001 = FMA(T(2.0000000000000000e+00), Mb[42], Mb_5_2_001);
	Mb_5_1_012 += Mb[52];
	Mb_5_2_001 += Mb[37];
	Mb_5_1_012 += Mb[43];
	Mb_6_2_002 = FMA(T(2.0000000000000000e+00), Mb[81], Mb_6_2_002);
	Mb_6_1_013 += Mb[80];
	Mb_6_2_002 += Mb[79];
	Mb_6_1_013 += Mb[69];
	Mb_6_2_002 = FMA(T(2.0000000000000000e+00), Mb[70], Mb_6_2_002);
	Mb_4_1_020 += Mb[30];
	Mb_6_2_002 = FMA(T(2.0000000000000000e+00), Mb[68], Mb_6_2_002);
	Mb_4_1_020 += Mb[23];
	Mb_6_2_002 += Mb[61];
	Mb_5_1_021 += Mb[51];
	Mb_5_2_010 = FMA(T(2.0000000000000000e+00), Mb[52], Mb_5_2_010);
	Mb_5_1_021 += Mb[42];
	Mb_5_2_010 += Mb[50];
	Mb_6_1_022 += Mb[79];
	Mb_5_2_010 = FMA(T(2.0000000000000000e+00), Mb[43], Mb_5_2_010);
	Mb_6_1_022 += Mb[68];
	Mb_5_2_010 = FMA(T(2.0000000000000000e+00), Mb[41], Mb_5_2_010);
	Mb_5_1_030 += Mb[50];
	Mb_5_2_010 += Mb[36];
	Mb_5_1_030 += Mb[41];
	Mb_6_2_011 = FMA(T(2.0000000000000000e+00), Mb[80], Mb_6_2_011);
	Mb_6_1_031 += Mb[78];
	Mb_6_2_011 += Mb[78];
	Mb_6_1_031 += Mb[67];
	Mb_6_2_011 = FMA(T(2.0000000000000000e+00), Mb[69], Mb_6_2_011);
	Mb_6_1_040 += Mb[77];
	Mb_6_2_011 = FMA(T(2.0000000000000000e+00), Mb[67], Mb_6_2_011);
	Mb_6_1_040 += Mb[66];
	Mb_6_2_011 += Mb[60];
	Mb_3_1_100 += Mb[13];
	Mb_6_2_020 = FMA(T(2.0000000000000000e+00), Mb[79], Mb_6_2_020);
	Mb_3_1_100 += Mb[10];
	Mb_6_2_020 += Mb[77];
	Mb_4_1_101 += Mb[27];
	Mb_6_2_020 = FMA(T(2.0000000000000000e+00), Mb[68], Mb_6_2_020);
	Mb_4_1_101 += Mb[22];
	Mb_6_2_020 = FMA(T(2.0000000000000000e+00), Mb[66], Mb_6_2_020);
	Mb_5_1_102 += Mb[47];
	Mb_6_2_020 += Mb[59];
	Mb_5_1_102 += Mb[40];
	Mb_5_2_100 = FMA(T(2.0000000000000000e+00), Mb[47], Mb_5_2_100);
	Mb_6_1_103 += Mb[74];
	Mb_5_2_100 += Mb[45];
	Mb_6_1_103 += Mb[65];
	Mb_5_2_100 = FMA(T(2.0000000000000000e+00), Mb[40], Mb_5_2_100);
	Mb_4_1_110 += Mb[26];
	Mb_5_2_100 = FMA(T(2.0000000000000000e+00), Mb[38], Mb_5_2_100);
	Mb_4_1_110 += Mb[21];
	Mb_5_2_100 += Mb[35];
	Mb_5_1_111 += Mb[46];
	Mb_6_2_101 = FMA(T(2.0000000000000000e+00), Mb[74], Mb_6_2_101);
	Mb_5_1_111 += Mb[39];
	Mb_6_2_101 += Mb[72];
	Mb_6_1_112 += Mb[73];
	Mb_6_2_101 = FMA(T(2.0000000000000000e+00), Mb[65], Mb_6_2_101);
	Mb_6_1_112 += Mb[64];
	Mb_6_2_101 = FMA(T(2.0000000000000000e+00), Mb[63], Mb_6_2_101);
	Mb_5_1_120 += Mb[45];
	Mb_6_2_101 += Mb[58];
	Mb_5_1_120 += Mb[38];
	Mb_6_2_110 = FMA(T(2.0000000000000000e+00), Mb[73], Mb_6_2_110);
	Mb_6_1_121 += Mb[72];
	Mb_6_2_110 += Mb[71];
	Mb_6_1_121 += Mb[63];
	Mb_6_2_110 = FMA(T(2.0000000000000000e+00), Mb[64], Mb_6_2_110);
	Mb_6_1_130 += Mb[71];
	Mb_6_2_110 = FMA(T(2.0000000000000000e+00), Mb[62], Mb_6_2_110);
	Mb_6_1_130 += Mb[62];
	Mb_6_2_110 += Mb[57];
	Mb_4_1_200 += Mb[23];
	Mb_6_2_200 = FMA(T(2.0000000000000000e+00), Mb[68], Mb_6_2_200);
	Mb_4_1_200 += Mb[20];
	Mb_6_2_200 += Mb[66];
	Mb_5_1_201 += Mb[42];
	Mb_6_2_200 = FMA(T(2.0000000000000000e+00), Mb[61], Mb_6_2_200);
	Mb_5_1_201 += Mb[37];
	Mb_6_2_200 = FMA(T(2.0000000000000000e+00), Mb[59], Mb_6_2_200);
	Mb_6_1_202 += Mb[68];
	Mb_6_2_200 += Mb[56];
	Mb_6_1_202 += Mb[61];
	Mb_6_3_000 = FMA(T(3.0000000000000000e+00), Mb[81], Mb_6_3_000);
	Mb_5_1_210 += Mb[41];
	Mb_6_3_000 = FMA(T(3.0000000000000000e+00), Mb[79], Mb_6_3_000);
	Mb_5_1_210 += Mb[36];
	Mb_6_3_000 += Mb[77];
	Mb_6_1_211 += Mb[67];
	Mb_6_3_000 = FMA(T(3.0000000000000000e+00), Mb[70], Mb_6_3_000);
	Mb_6_1_211 += Mb[60];
	Mb_6_3_000 = FMA(T(6.0000000000000000e+00), Mb[68], Mb_6_3_000);
	Mb_6_1_220 += Mb[66];
	Mb_6_3_000 = FMA(T(3.0000000000000000e+00), Mb[66], Mb_6_3_000);
	Mb_6_1_220 += Mb[59];
	Mb_6_3_000 = FMA(T(3.0000000000000000e+00), Mb[61], Mb_6_3_000);
	Mb_5_1_300 += Mb[38];
	Mb_6_3_000 = FMA(T(3.0000000000000000e+00), Mb[59], Mb_6_3_000);
	Mb_5_1_300 += Mb[35];
	Mb_6_3_000 += Mb[56];
	Mb_6_1_301 += Mb[63];
	Mc[0] = Mb[0];
	Mc[28] = Mb[3];
	Mc[49] = Mb[9];
	Mc[2] = Mb[2];
	Mc[30] = Mb[8];
	Mc[5] = Mb[7];
	Mc[33] = Mb[17];
	Mc[9] = Mb[16];
	Mc[37] = Mb[31];
	Mc[14] = Mb[30];
	Mc[42] = Mb[51];
	Mc[20] = Mb[50];
	Mc[48] = Mb[78];
	Mc[27] = Mb[77];
	Mc[1] = Mb[1];
	Mc[29] = Mb[6];
	Mc[4] = Mb[5];
	Mc[32] = Mb[14];
	Mc[8] = Mb[13];
	Mc[36] = Mb[27];
	Mc[13] = Mb[26];
	Mc[41] = Mb[46];
	Mc[19] = Mb[45];
	Mc[47] = Mb[72];
	Mc[26] = Mb[71];
	Mc[3] = Mb[4];
	Mc[31] = Mb[12];
	Mc[7] = Mb[11];
	Mc[35] = Mb[24];
	Mc[12] = Mb[23];
	Mc[40] = Mb[42];
	Mc[18] = Mb[41];
	Mc[46] = Mb[67];
	Mc[25] = Mb[66];
	Mc[6] = Mb[10];
	Mc[34] = Mb[22];
	Mc[11] = Mb[21];
	Mc[39] = Mb[39];
	Mc[17] = Mb[38];
	Mc[45] = Mb[63];
	Mc[24] = Mb[62];
	Mc[10] = Mb[20];
	Mc[38] = Mb[37];
	Mc[16] = Mb[36];
	Mc[44] = Mb[60];
	Mc[23] = Mb[59];
	Mc[15] = Mb[35];
	Mc[43] = Mb[58];
	Mc[22] = Mb[57];
	Mc[21] = Mb[56];
	Mc[33] = FMA(T(-2.0000000000000001e-01), Mb_3_1_001, Mc[33]);
	Mc[25] = FMA(T(3.0303030303030300e-02), Mb_6_2_200, Mc[25]);
	Mc[9] = FMA(T(-5.9999999999999998e-01), Mb_3_1_010, Mc[9]);
	Mc[25] = FMA(T(-9.0909090909090912e-02), Mb_6_1_040, Mc[25]);
	Mc[37] = FMA(T(-4.2857142857142860e-01), Mb_4_1_011, Mc[37]);
	Mc[25] = FMA(T(6.0606060606060601e-02), Mb_6_2_020, Mc[25]);
	Mc[14] = FMA(T(-8.5714285714285721e-01), Mb_4_1_020, Mc[14]);
	Mc[25] = FMA(T(-4.3290043290043290e-03), Mb_6_3_000, Mc[25]);
	Mc[14] = FMA(T(8.5714285714285715e-02), Mb_4_2_000, Mc[14]);
	Mc[6] = FMA(T(-5.9999999999999998e-01), Mb_3_1_100, Mc[6]);
	Mc[42] = FMA(T(-6.6666666666666674e-01), Mb_5_1_021, Mc[42]);
	Mc[34] = FMA(T(-4.2857142857142860e-01), Mb_4_1_101, Mc[34]);
	Mc[42] = FMA(T(4.7619047619047623e-02), Mb_5_2_001, Mc[42]);
	Mc[11] = FMA(T(-4.2857142857142860e-01), Mb_4_1_110, Mc[11]);
	Mc[20] = FMA(T(-1.1111111111111112e+00), Mb_5_1_030, Mc[20]);
	Mc[39] = FMA(T(-3.3333333333333337e-01), Mb_5_1_111, Mc[39]);
	Mc[20] = FMA(T(2.3809523809523811e-01), Mb_5_2_010, Mc[20]);
	Mc[17] = FMA(T(-1.1111111111111112e-01), Mb_5_1_300, Mc[17]);
	Mc[48] = FMA(T(-9.0909090909090906e-01), Mb_6_1_031, Mc[48]);
	Mc[17] = FMA(T(-3.3333333333333337e-01), Mb_5_1_120, Mc[17]);
	Mc[48] = FMA(T(1.5151515151515152e-01), Mb_6_2_011, Mc[48]);
	Mc[17] = FMA(T(4.7619047619047623e-02), Mb_5_2_100, Mc[17]);
	Mc[27] = FMA(T(-1.3636363636363635e+00), Mb_6_1_040, Mc[27]);
	Mc[45] = FMA(T(-9.0909090909090912e-02), Mb_6_1_301, Mc[45]);
	Mc[27] = FMA(T(4.5454545454545453e-01), Mb_6_2_020, Mc[27]);
	Mc[45] = FMA(T(-2.7272727272727271e-01), Mb_6_1_121, Mc[45]);
	Mc[27] = FMA(T(-2.1645021645021644e-02), Mb_6_3_000, Mc[27]);
	Mc[45] = FMA(T(3.0303030303030300e-02), Mb_6_2_101, Mc[45]);
	Mc[8] = FMA(T(-2.0000000000000001e-01), Mb_3_1_100, Mc[8]);
	Mc[24] = FMA(T(-2.7272727272727271e-01), Mb_6_1_310, Mc[24]);
	Mc[36] = FMA(T(-1.4285714285714288e-01), Mb_4_1_101, Mc[36]);
	Mc[24] = FMA(T(-2.7272727272727271e-01), Mb_6_1_130, Mc[24]);
	Mc[13] = FMA(T(-4.2857142857142860e-01), Mb_4_1_110, Mc[13]);
	Mc[24] = FMA(T(9.0909090909090912e-02), Mb_6_2_110, Mc[24]);
	Mc[41] = FMA(T(-3.3333333333333337e-01), Mb_5_1_111, Mc[41]);
	Mc[10] = FMA(T(-8.5714285714285721e-01), Mb_4_1_200, Mc[10]);
	Mc[19] = FMA(T(-6.6666666666666674e-01), Mb_5_1_120, Mc[19]);
	Mc[10] = FMA(T(8.5714285714285715e-02), Mb_4_2_000, Mc[10]);
	Mc[19] = FMA(T(4.7619047619047623e-02), Mb_5_2_100, Mc[19]);
	Mc[38] = FMA(T(-6.6666666666666674e-01), Mb_5_1_201, Mc[38]);
	Mc[47] = FMA(T(-5.4545454545454541e-01), Mb_6_1_121, Mc[47]);
	Mc[38] = FMA(T(4.7619047619047623e-02), Mb_5_2_001, Mc[38]);
	Mc[47] = FMA(T(3.0303030303030300e-02), Mb_6_2_101, Mc[47]);
	Mc[16] = FMA(T(-6.6666666666666674e-01), Mb_5_1_210, Mc[16]);
	Mc[26] = FMA(T(-9.0909090909090906e-01), Mb_6_1_130, Mc[26]);
	Mc[16] = FMA(T(4.7619047619047623e-02), Mb_5_2_010, Mc[16]);
	Mc[26] = FMA(T(1.5151515151515152e-01), Mb_6_2_110, Mc[26]);
	Mc[44] = FMA(T(-5.4545454545454541e-01), Mb_6_1_211, Mc[44]);
	Mc[31] = FMA(T(-2.0000000000000001e-01), Mb_3_1_001, Mc[31]);
	Mc[44] = FMA(T(3.0303030303030300e-02), Mb_6_2_011, Mc[44]);
	Mc[7] = FMA(T(-2.0000000000000001e-01), Mb_3_1_010, Mc[7]);
	Mc[23] = FMA(T(-9.0909090909090912e-02), Mb_6_1_400, Mc[23]);
	Mc[35] = FMA(T(-1.4285714285714288e-01), Mb_4_1_011, Mc[35]);
	Mc[23] = FMA(T(-5.4545454545454541e-01), Mb_6_1_220, Mc[23]);
	Mc[12] = FMA(T(-1.4285714285714288e-01), Mb_4_1_200, Mc[12]);
	Mc[23] = FMA(T(6.0606060606060601e-02), Mb_6_2_200, Mc[23]);
	Mc[12] = FMA(T(-1.4285714285714288e-01), Mb_4_1_020, Mc[12]);
	Mc[23] = FMA(T(3.0303030303030300e-02), Mb_6_2_020, Mc[23]);
	Mc[12] = FMA(T(2.8571428571428574e-02), Mb_4_2_000, Mc[12]);
	Mc[23] = FMA(T(-4.3290043290043290e-03), Mb_6_3_000, Mc[23]);
	Mc[40] = FMA(T(-1.1111111111111112e-01), Mb_5_1_201, Mc[40]);
	Mc[15] = FMA(T(-1.1111111111111112e+00), Mb_5_1_300, Mc[15]);
	Mc[40] = FMA(T(-1.1111111111111112e-01), Mb_5_1_021, Mc[40]);
	Mc[15] = FMA(T(2.3809523809523811e-01), Mb_5_2_100, Mc[15]);
	Mc[40] = FMA(T(1.5873015873015876e-02), Mb_5_2_001, Mc[40]);
	Mc[43] = FMA(T(-9.0909090909090906e-01), Mb_6_1_301, Mc[43]);
	Mc[18] = FMA(T(-3.3333333333333337e-01), Mb_5_1_210, Mc[18]);
	Mc[43] = FMA(T(1.5151515151515152e-01), Mb_6_2_101, Mc[43]);
	Mc[18] = FMA(T(-1.1111111111111112e-01), Mb_5_1_030, Mc[18]);
	Mc[22] = FMA(T(-9.0909090909090906e-01), Mb_6_1_310, Mc[22]);
	Mc[18] = FMA(T(4.7619047619047623e-02), Mb_5_2_010, Mc[18]);
	Mc[22] = FMA(T(1.5151515151515152e-01), Mb_6_2_110, Mc[22]);
	Mc[46] = FMA(T(-2.7272727272727271e-01), Mb_6_1_211, Mc[46]);
	Mc[21] = FMA(T(-1.3636363636363635e+00), Mb_6_1_400, Mc[21]);
	Mc[46] = FMA(T(-9.0909090909090912e-02), Mb_6_1_031, Mc[46]);
	Mc[21] = FMA(T(4.5454545454545453e-01), Mb_6_2_200, Mc[21]);
	Mc[46] = FMA(T(3.0303030303030300e-02), Mb_6_2_011, Mc[46]);
	Mc[21] = FMA(T(-2.1645021645021644e-02), Mb_6_3_000, Mc[21]);
	Mc[25] = FMA(T(-5.4545454545454541e-01), Mb_6_1_220, Mc[25]);
	return Mc;
/* FLOPS = 2434*/
}
static __constant__ char Ldest1[616] = { 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,15,15,15,16,16,16,17,17,17,18,18,18,19,19,19,20,20,20,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,35,35,35,35,35,35,35,35,35,36,36,36,36,36,36,36,36,36,37,37,37,37,37,37,37,37,37,38,38,38,39,39,39,40,40,40,41,41,41,42,42,42,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49};
static __constant__ float factor1[616] = { float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(4.1666667908430099e-02),float(1.6666667163372040e-01),float(1.6666667163372040e-01),float(2.5000000000000000e-01),float(5.0000000000000000e-01),float(2.5000000000000000e-01),float(1.6666667163372040e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(4.1666667908430099e-02),float(1.6666667163372040e-01),float(2.5000000000000000e-01),float(1.6666667163372040e-01),float(4.1666667908430099e-02),float(8.3333337679505348e-03),float(4.1666667908430099e-02),float(4.1666667908430099e-02),float(8.3333335816860199e-02),float(1.6666667163372040e-01),float(8.3333335816860199e-02),float(8.3333335816860199e-02),float(2.5000000000000000e-01),float(2.5000000000000000e-01),float(8.3333335816860199e-02),float(4.1666667908430099e-02),float(1.6666667163372040e-01),float(2.5000000000000000e-01),float(1.6666667163372040e-01),float(4.1666667908430099e-02),float(8.3333337679505348e-03),float(4.1666667908430099e-02),float(8.3333335816860199e-02),float(8.3333335816860199e-02),float(4.1666667908430099e-02),float(8.3333337679505348e-03),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(4.1666667908430099e-02),float(1.6666667163372040e-01),float(1.6666667163372040e-01),float(2.5000000000000000e-01),float(5.0000000000000000e-01),float(2.5000000000000000e-01),float(1.6666667163372040e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(4.1666667908430099e-02),float(1.6666667163372040e-01),float(2.5000000000000000e-01),float(1.6666667163372040e-01),float(4.1666667908430099e-02),float(8.3333337679505348e-03),float(4.1666667908430099e-02),float(4.1666667908430099e-02),float(8.3333335816860199e-02),float(1.6666667163372040e-01),float(8.3333335816860199e-02),float(8.3333335816860199e-02),float(2.5000000000000000e-01),float(2.5000000000000000e-01),float(8.3333335816860199e-02),float(4.1666667908430099e-02),float(1.6666667163372040e-01),float(2.5000000000000000e-01),float(1.6666667163372040e-01),float(4.1666667908430099e-02),float(8.3333337679505348e-03),float(4.1666667908430099e-02),float(8.3333335816860199e-02),float(8.3333335816860199e-02),float(4.1666667908430099e-02),float(8.3333337679505348e-03),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(4.1666667908430099e-02),float(1.6666667163372040e-01),float(1.6666667163372040e-01),float(2.5000000000000000e-01),float(5.0000000000000000e-01),float(2.5000000000000000e-01),float(1.6666667163372040e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(4.1666667908430099e-02),float(1.6666667163372040e-01),float(2.5000000000000000e-01),float(1.6666667163372040e-01),float(4.1666667908430099e-02),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(4.1666667908430099e-02),float(1.6666667163372040e-01),float(1.6666667163372040e-01),float(2.5000000000000000e-01),float(5.0000000000000000e-01),float(2.5000000000000000e-01),float(1.6666667163372040e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(4.1666667908430099e-02),float(1.6666667163372040e-01),float(2.5000000000000000e-01),float(1.6666667163372040e-01),float(4.1666667908430099e-02),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(4.1666667908430099e-02),float(1.6666667163372040e-01),float(1.6666667163372040e-01),float(2.5000000000000000e-01),float(5.0000000000000000e-01),float(2.5000000000000000e-01),float(1.6666667163372040e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(4.1666667908430099e-02),float(1.6666667163372040e-01),float(2.5000000000000000e-01),float(1.6666667163372040e-01),float(4.1666667908430099e-02),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(4.1666667908430099e-02),float(1.6666667163372040e-01),float(1.6666667163372040e-01),float(2.5000000000000000e-01),float(5.0000000000000000e-01),float(2.5000000000000000e-01),float(1.6666667163372040e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(4.1666667908430099e-02),float(1.6666667163372040e-01),float(2.5000000000000000e-01),float(1.6666667163372040e-01),float(4.1666667908430099e-02),float(8.3333337679505348e-03),float(4.1666667908430099e-02),float(4.1666667908430099e-02),float(8.3333335816860199e-02),float(1.6666667163372040e-01),float(8.3333335816860199e-02),float(8.3333335816860199e-02),float(2.5000000000000000e-01),float(2.5000000000000000e-01),float(8.3333335816860199e-02),float(4.1666667908430099e-02),float(1.6666667163372040e-01),float(2.5000000000000000e-01),float(1.6666667163372040e-01),float(4.1666667908430099e-02),float(8.3333337679505348e-03),float(4.1666667908430099e-02),float(8.3333335816860199e-02),float(8.3333335816860199e-02),float(4.1666667908430099e-02),float(8.3333337679505348e-03),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(4.1666667908430099e-02),float(1.6666667163372040e-01),float(1.6666667163372040e-01),float(2.5000000000000000e-01),float(5.0000000000000000e-01),float(2.5000000000000000e-01),float(1.6666667163372040e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(4.1666667908430099e-02),float(1.6666667163372040e-01),float(2.5000000000000000e-01),float(1.6666667163372040e-01),float(4.1666667908430099e-02),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(4.1666667908430099e-02),float(1.6666667163372040e-01),float(1.6666667163372040e-01),float(2.5000000000000000e-01),float(5.0000000000000000e-01),float(2.5000000000000000e-01),float(1.6666667163372040e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(4.1666667908430099e-02),float(1.6666667163372040e-01),float(2.5000000000000000e-01),float(1.6666667163372040e-01),float(4.1666667908430099e-02),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(4.1666667908430099e-02),float(1.6666667163372040e-01),float(1.6666667163372040e-01),float(2.5000000000000000e-01),float(5.0000000000000000e-01),float(2.5000000000000000e-01),float(1.6666667163372040e-01),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(4.1666667908430099e-02),float(1.6666667163372040e-01),float(2.5000000000000000e-01),float(1.6666667163372040e-01),float(4.1666667908430099e-02)};
static __constant__ char xsrc1[616] = { 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34};
static __constant__ char Lsrc1[616] = { 4,5,6,10,11,12,13,14,15,20,21,22,23,24,25,26,27,28,29,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,5,7,8,11,13,14,16,17,18,21,23,24,26,27,28,30,31,32,33,36,38,39,41,42,43,45,46,47,48,50,51,52,53,54,57,59,60,62,63,64,66,67,68,69,71,72,73,74,75,77,78,79,80,81,82,10,11,12,20,21,22,23,24,25,35,36,37,38,39,40,41,42,43,44,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,11,13,14,21,23,24,26,27,28,36,38,39,41,42,43,45,46,47,48,57,59,60,62,63,64,66,67,68,69,71,72,73,74,75,13,16,17,23,26,27,30,31,32,38,41,42,45,46,47,50,51,52,53,59,62,63,66,67,68,71,72,73,74,77,78,79,80,81,20,21,22,35,36,37,38,39,40,56,57,58,59,60,61,62,63,64,65,21,23,24,36,38,39,41,42,43,57,59,60,62,63,64,66,67,68,69,23,26,27,38,41,42,45,46,47,59,62,63,66,67,68,71,72,73,74,26,30,31,41,45,46,50,51,52,62,66,67,71,72,73,77,78,79,80,35,36,37,56,57,58,59,60,61,36,38,39,57,59,60,62,63,64,38,41,42,59,62,63,66,67,68,41,45,46,62,66,67,71,72,73,45,50,51,66,71,72,77,78,79,56,57,58,57,59,60,59,62,63,62,66,67,66,71,72,71,77,78,6,8,9,12,14,15,17,18,19,22,24,25,27,28,29,31,32,33,34,37,39,40,42,43,44,46,47,48,49,51,52,53,54,55,58,60,61,63,64,65,67,68,69,70,72,73,74,75,76,78,79,80,81,82,83,12,14,15,22,24,25,27,28,29,37,39,40,42,43,44,46,47,48,49,58,60,61,63,64,65,67,68,69,70,72,73,74,75,76,14,17,18,24,27,28,31,32,33,39,42,43,46,47,48,51,52,53,54,60,63,64,67,68,69,72,73,74,75,78,79,80,81,82,22,24,25,37,39,40,42,43,44,58,60,61,63,64,65,67,68,69,70,24,27,28,39,42,43,46,47,48,60,63,64,67,68,69,72,73,74,75,27,31,32,42,46,47,51,52,53,63,67,68,72,73,74,78,79,80,81,37,39,40,58,60,61,63,64,65,39,42,43,60,63,64,67,68,69,42,46,47,63,67,68,72,73,74,46,51,52,67,72,73,78,79,80,58,60,61,60,63,64,63,67,68,67,72,73,72,78,79,15,18,19,25,28,29,32,33,34,40,43,44,47,48,49,52,53,54,55,61,64,65,68,69,70,73,74,75,76,79,80,81,82,83};
static __constant__ float phi_factor[83] = { float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(4.1666667908430099e-02),float(8.3333337679505348e-03),float(1.3888889225199819e-03),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(4.1666667908430099e-02),float(8.3333337679505348e-03),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(2.5000000000000000e-01),float(8.3333335816860199e-02),float(2.0833333954215050e-02),float(1.6666667163372040e-01),float(1.6666667163372040e-01),float(8.3333335816860199e-02),float(2.7777777984738350e-02),float(4.1666667908430099e-02),float(4.1666667908430099e-02),float(2.0833333954215050e-02),float(8.3333337679505348e-03),float(8.3333337679505348e-03),float(1.3888889225199819e-03),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(4.1666667908430099e-02),float(8.3333337679505348e-03),float(1.0000000000000000e+00),float(1.0000000000000000e+00),float(5.0000000000000000e-01),float(1.6666667163372040e-01),float(4.1666667908430099e-02),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(2.5000000000000000e-01),float(8.3333335816860199e-02),float(1.6666667163372040e-01),float(1.6666667163372040e-01),float(8.3333335816860199e-02),float(4.1666667908430099e-02),float(4.1666667908430099e-02),float(8.3333337679505348e-03),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(2.5000000000000000e-01),float(8.3333335816860199e-02),float(2.0833333954215050e-02),float(5.0000000000000000e-01),float(5.0000000000000000e-01),float(2.5000000000000000e-01),float(8.3333335816860199e-02),float(2.5000000000000000e-01),float(2.5000000000000000e-01),float(1.2500000000000000e-01),float(8.3333335816860199e-02),float(8.3333335816860199e-02),float(2.0833333954215050e-02),float(1.6666667163372040e-01),float(1.6666667163372040e-01),float(8.3333335816860199e-02),float(2.7777777984738350e-02),float(1.6666667163372040e-01),float(1.6666667163372040e-01),float(8.3333335816860199e-02),float(8.3333335816860199e-02),float(8.3333335816860199e-02),float(2.7777777984738350e-02),float(4.1666667908430099e-02),float(4.1666667908430099e-02),float(2.0833333954215050e-02),float(4.1666667908430099e-02),float(4.1666667908430099e-02),float(2.0833333954215050e-02),float(8.3333337679505348e-03),float(8.3333337679505348e-03),float(8.3333337679505348e-03),float(1.3888889225199819e-03)};
static __constant__ char phi_Lsrc[83] = { 3,9,19,34,55,83,2,8,18,33,54,82,7,17,32,53,81,16,31,52,80,30,51,79,50,78,77,1,6,15,29,49,76,5,14,28,48,75,13,27,47,74,26,46,73,45,72,71,4,12,25,44,70,11,24,43,69,23,42,68,41,67,66,10,22,40,65,21,39,64,38,63,62,20,37,61,36,60,59,35,58,57,56};
#ifdef __CUDACC__
template<class T>
__device__
tensor_trless_sym<T, 7> L2L_cuda(const tensor_trless_sym<T, 7>& La, array<T,NDIM> X, bool do_phi) {
	const int tid = threadIdx.x;
	X[0] *= T(SCALE_FACTOR);
	X[1] *= T(SCALE_FACTOR);
	X[2] *= T(SCALE_FACTOR);
	tensor_trless_sym<T, 7> Lb;
	tensor_sym<T, 7> Lc;
	for( int i = 0; i < EXPANSION_SIZE; i ++ ) {
		Lb[i] = 0.0f;
	}
	for( int i = tid; i < EXPANSION_SIZE; i += WARP_SIZE ) {
		Lb[i] = La[i];
	}
	tensor_sym<T,7> dx;
	dx[0] = T(1);
	dx[1] = X[0];
	dx[2] = X[1];
	dx[3] = X[2];
	dx[9]= dx[3] * dx[3];
	dx[8]= dx[2] * dx[3];
	dx[7]= dx[2] * dx[2];
	dx[6]= dx[1] * dx[3];
	dx[5]= dx[1] * dx[2];
	dx[4]= dx[1] * dx[1];
	dx[19]= dx[9] * dx[3];
	dx[18]= dx[8] * dx[3];
	dx[17]= dx[8] * dx[2];
	dx[16]= dx[7] * dx[2];
	dx[15]= dx[6] * dx[3];
	dx[14]= dx[5] * dx[3];
	dx[13]= dx[5] * dx[2];
	dx[12]= dx[6] * dx[1];
	dx[11]= dx[5] * dx[1];
	dx[10]= dx[4] * dx[1];
	dx[34]= dx[9] * dx[9];
	dx[33]= dx[8] * dx[9];
	dx[32]= dx[8] * dx[8];
	dx[31]= dx[8] * dx[7];
	dx[30]= dx[7] * dx[7];
	dx[29]= dx[6] * dx[9];
	dx[28]= dx[5] * dx[9];
	dx[27]= dx[5] * dx[8];
	dx[26]= dx[5] * dx[7];
	dx[25]= dx[6] * dx[6];
	dx[24]= dx[5] * dx[6];
	dx[23]= dx[5] * dx[5];
	dx[22]= dx[6] * dx[4];
	dx[21]= dx[5] * dx[4];
	dx[20]= dx[4] * dx[4];
	dx[55]= dx[19] * dx[9];
	dx[54]= dx[18] * dx[9];
	dx[53]= dx[17] * dx[9];
	dx[52]= dx[17] * dx[8];
	dx[51]= dx[17] * dx[7];
	dx[50]= dx[16] * dx[7];
	dx[49]= dx[15] * dx[9];
	dx[48]= dx[14] * dx[9];
	dx[47]= dx[14] * dx[8];
	dx[46]= dx[14] * dx[7];
	dx[45]= dx[13] * dx[7];
	dx[44]= dx[12] * dx[9];
	dx[43]= dx[14] * dx[6];
	dx[42]= dx[14] * dx[5];
	dx[41]= dx[11] * dx[7];
	dx[40]= dx[12] * dx[6];
	dx[39]= dx[14] * dx[4];
	dx[38]= dx[11] * dx[5];
	dx[37]= dx[12] * dx[4];
	dx[36]= dx[11] * dx[4];
	dx[35]= dx[10] * dx[4];
	dx[83]= dx[19] * dx[19];
	dx[82]= dx[18] * dx[19];
	dx[81]= dx[17] * dx[19];
	dx[80]= dx[17] * dx[18];
	dx[79]= dx[17] * dx[17];
	dx[78]= dx[17] * dx[16];
	dx[77]= dx[16] * dx[16];
	dx[76]= dx[15] * dx[19];
	dx[75]= dx[14] * dx[19];
	dx[74]= dx[14] * dx[18];
	dx[73]= dx[14] * dx[17];
	dx[72]= dx[14] * dx[16];
	dx[71]= dx[13] * dx[16];
	dx[70]= dx[12] * dx[19];
	dx[69]= dx[14] * dx[15];
	dx[68]= dx[14] * dx[14];
	dx[67]= dx[14] * dx[13];
	dx[66]= dx[11] * dx[16];
	dx[65]= dx[12] * dx[15];
	dx[64]= dx[14] * dx[12];
	dx[63]= dx[14] * dx[11];
	dx[62]= dx[11] * dx[13];
	dx[61]= dx[12] * dx[12];
	dx[60]= dx[14] * dx[10];
	dx[59]= dx[11] * dx[11];
	dx[58]= dx[12] * dx[10];
	dx[57]= dx[11] * dx[10];
	dx[56]= dx[10] * dx[10];
	Lc[0] =  (La[0]);
	Lc[3] =  (La[28]);
	Lc[9] =  (La[49]);
	Lc[19] = -(La[31]+(La[33]));
	Lc[34] =  (La[10]+FMA(T(2),La[12],(La[14])));
	Lc[55] =  (La[38]+FMA(T(2),La[40],(La[42])));
	Lc[83] = -(La[21]+FMA(T(3),La[23],FMA(T(3),La[25],(La[27]))));
	Lc[2] =  (La[2]);
	Lc[8] =  (La[30]);
	Lc[18] = -(La[7]+(La[9]));
	Lc[33] = -(La[35]+(La[37]));
	Lc[54] =  (La[16]+FMA(T(2),La[18],(La[20])));
	Lc[82] =  (La[44]+FMA(T(2),La[46],(La[48])));
	Lc[7] =  (La[5]);
	Lc[17] =  (La[33]);
	Lc[32] = -(La[12]+(La[14]));
	Lc[53] = -(La[40]+(La[42]));
	Lc[81] =  (La[23]+FMA(T(2),La[25],(La[27])));
	Lc[16] =  (La[9]);
	Lc[31] =  (La[37]);
	Lc[52] = -(La[18]+(La[20]));
	Lc[80] = -(La[46]+(La[48]));
	Lc[30] =  (La[14]);
	Lc[51] =  (La[42]);
	Lc[79] = -(La[25]+(La[27]));
	Lc[50] =  (La[20]);
	Lc[78] =  (La[48]);
	Lc[77] =  (La[27]);
	Lc[1] =  (La[1]);
	Lc[6] =  (La[29]);
	Lc[15] = -(La[6]+(La[8]));
	Lc[29] = -(La[34]+(La[36]));
	Lc[49] =  (La[15]+FMA(T(2),La[17],(La[19])));
	Lc[76] =  (La[43]+FMA(T(2),La[45],(La[47])));
	Lc[5] =  (La[4]);
	Lc[14] =  (La[32]);
	Lc[28] = -(La[11]+(La[13]));
	Lc[48] = -(La[39]+(La[41]));
	Lc[75] =  (La[22]+FMA(T(2),La[24],(La[26])));
	Lc[13] =  (La[8]);
	Lc[27] =  (La[36]);
	Lc[47] = -(La[17]+(La[19]));
	Lc[74] = -(La[45]+(La[47]));
	Lc[26] =  (La[13]);
	Lc[46] =  (La[41]);
	Lc[73] = -(La[24]+(La[26]));
	Lc[45] =  (La[19]);
	Lc[72] =  (La[47]);
	Lc[71] =  (La[26]);
	Lc[4] =  (La[3]);
	Lc[12] =  (La[31]);
	Lc[25] = -(La[10]+(La[12]));
	Lc[44] = -(La[38]+(La[40]));
	Lc[70] =  (La[21]+FMA(T(2),La[23],(La[25])));
	Lc[11] =  (La[7]);
	Lc[24] =  (La[35]);
	Lc[43] = -(La[16]+(La[18]));
	Lc[69] = -(La[44]+(La[46]));
	Lc[23] =  (La[12]);
	Lc[42] =  (La[40]);
	Lc[68] = -(La[23]+(La[25]));
	Lc[41] =  (La[18]);
	Lc[67] =  (La[46]);
	Lc[66] =  (La[25]);
	Lc[10] =  (La[6]);
	Lc[22] =  (La[34]);
	Lc[40] = -(La[15]+(La[17]));
	Lc[65] = -(La[43]+(La[45]));
	Lc[21] =  (La[11]);
	Lc[39] =  (La[39]);
	Lc[64] = -(La[22]+(La[24]));
	Lc[38] =  (La[17]);
	Lc[63] =  (La[45]);
	Lc[62] =  (La[24]);
	Lc[20] =  (La[10]);
	Lc[37] =  (La[38]);
	Lc[61] = -(La[21]+(La[23]));
	Lc[36] =  (La[16]);
	Lc[60] =  (La[44]);
	Lc[59] =  (La[23]);
	Lc[35] =  (La[15]);
	Lc[58] =  (La[43]);
	Lc[57] =  (La[22]);
	Lc[56] =  (La[21]);
	for( int i = tid; i < 616; i+=WARP_SIZE) {
		Lb[Ldest1[i]] = FMA(factor1[i] * dx[xsrc1[i]], Lc[Lsrc1[i]], Lb[Ldest1[i]]);
	}
	if( do_phi ) {
		for( int i = tid; i < 83; i+=WARP_SIZE) {
			Lb[0] = FMA(phi_factor[i] * dx[phi_Lsrc[i]], Lc[phi_Lsrc[i]], Lb[0]);
		}
	}
	for (int P = warpSize / 2; P >= 1; P /= 2) {
		for (int i = 0; i < EXPANSION_SIZE; i++) {
			Lb[i] += __shfl_xor_sync(0xffffffff, Lb[i], P);
		}
	}
	return Lb;
/* FLOPS = 2653 + do_phi * 332*/
}
#endif
template<class T>
CUDA_EXPORT int apply_scale_factor_inv(tensor_trless_sym<T,7> &L) {
	L[0] *= SCALE_FACTOR_INV1;
	L[28] *= SCALE_FACTOR_INV2;
	L[2] *= SCALE_FACTOR_INV2;
	L[1] *= SCALE_FACTOR_INV2;
	L[49] *= SCALE_FACTOR_INV3;
	L[30] *= SCALE_FACTOR_INV3;
	L[5] *= SCALE_FACTOR_INV3;
	L[29] *= SCALE_FACTOR_INV3;
	L[4] *= SCALE_FACTOR_INV3;
	L[3] *= SCALE_FACTOR_INV3;
	L[33] *= SCALE_FACTOR_INV4;
	L[9] *= SCALE_FACTOR_INV4;
	L[32] *= SCALE_FACTOR_INV4;
	L[8] *= SCALE_FACTOR_INV4;
	L[31] *= SCALE_FACTOR_INV4;
	L[7] *= SCALE_FACTOR_INV4;
	L[6] *= SCALE_FACTOR_INV4;
	L[37] *= SCALE_FACTOR_INV5;
	L[14] *= SCALE_FACTOR_INV5;
	L[36] *= SCALE_FACTOR_INV5;
	L[13] *= SCALE_FACTOR_INV5;
	L[35] *= SCALE_FACTOR_INV5;
	L[12] *= SCALE_FACTOR_INV5;
	L[34] *= SCALE_FACTOR_INV5;
	L[11] *= SCALE_FACTOR_INV5;
	L[10] *= SCALE_FACTOR_INV5;
	L[42] *= SCALE_FACTOR_INV6;
	L[20] *= SCALE_FACTOR_INV6;
	L[41] *= SCALE_FACTOR_INV6;
	L[19] *= SCALE_FACTOR_INV6;
	L[40] *= SCALE_FACTOR_INV6;
	L[18] *= SCALE_FACTOR_INV6;
	L[39] *= SCALE_FACTOR_INV6;
	L[17] *= SCALE_FACTOR_INV6;
	L[38] *= SCALE_FACTOR_INV6;
	L[16] *= SCALE_FACTOR_INV6;
	L[15] *= SCALE_FACTOR_INV6;
	L[48] *= SCALE_FACTOR_INV7;
	L[27] *= SCALE_FACTOR_INV7;
	L[47] *= SCALE_FACTOR_INV7;
	L[26] *= SCALE_FACTOR_INV7;
	L[46] *= SCALE_FACTOR_INV7;
	L[25] *= SCALE_FACTOR_INV7;
	L[45] *= SCALE_FACTOR_INV7;
	L[24] *= SCALE_FACTOR_INV7;
	L[44] *= SCALE_FACTOR_INV7;
	L[23] *= SCALE_FACTOR_INV7;
	L[43] *= SCALE_FACTOR_INV7;
	L[22] *= SCALE_FACTOR_INV7;
	L[21] *= SCALE_FACTOR_INV7;
	return 50;
}
template<class T>
CUDA_EXPORT int apply_scale_factor(tensor_trless_sym<T,6> &M) {
	M[0] *= SCALE_FACTOR_INV0;
	M[21] *= SCALE_FACTOR_INV1;
	M[2] *= SCALE_FACTOR_INV1;
	M[1] *= SCALE_FACTOR_INV1;
	M[36] *= SCALE_FACTOR_INV2;
	M[23] *= SCALE_FACTOR_INV2;
	M[5] *= SCALE_FACTOR_INV2;
	M[22] *= SCALE_FACTOR_INV2;
	M[4] *= SCALE_FACTOR_INV2;
	M[3] *= SCALE_FACTOR_INV2;
	M[26] *= SCALE_FACTOR_INV3;
	M[9] *= SCALE_FACTOR_INV3;
	M[25] *= SCALE_FACTOR_INV3;
	M[8] *= SCALE_FACTOR_INV3;
	M[24] *= SCALE_FACTOR_INV3;
	M[7] *= SCALE_FACTOR_INV3;
	M[6] *= SCALE_FACTOR_INV3;
	M[30] *= SCALE_FACTOR_INV4;
	M[14] *= SCALE_FACTOR_INV4;
	M[29] *= SCALE_FACTOR_INV4;
	M[13] *= SCALE_FACTOR_INV4;
	M[28] *= SCALE_FACTOR_INV4;
	M[12] *= SCALE_FACTOR_INV4;
	M[27] *= SCALE_FACTOR_INV4;
	M[11] *= SCALE_FACTOR_INV4;
	M[10] *= SCALE_FACTOR_INV4;
	M[35] *= SCALE_FACTOR_INV5;
	M[20] *= SCALE_FACTOR_INV5;
	M[34] *= SCALE_FACTOR_INV5;
	M[19] *= SCALE_FACTOR_INV5;
	M[33] *= SCALE_FACTOR_INV5;
	M[18] *= SCALE_FACTOR_INV5;
	M[32] *= SCALE_FACTOR_INV5;
	M[17] *= SCALE_FACTOR_INV5;
	M[31] *= SCALE_FACTOR_INV5;
	M[16] *= SCALE_FACTOR_INV5;
	M[15] *= SCALE_FACTOR_INV5;
	return 37;
}
