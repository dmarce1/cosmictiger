/*
CosmicTiger - A cosmological N-Body code
Copyright (C) 2021  Dominic C. Marcello

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
*/
#pragma once
#include <cosmictiger/tensor.hpp>
#include <cosmictiger/cuda.hpp>
#include <cosmictiger/ewald_indices.hpp>
#include <cosmictiger/math.hpp>
#include <cosmictiger/kernels.hpp>
template<class T>
using expansion = tensor_sym<T,7>;
template<class T>
using expansion2 = tensor_sym<T,2>;
template<class T>
using multipole = tensor_sym<T,6>;
#define EXPANSION_SIZE 84
#define MULTIPOLE_SIZE 56


template<class T>
CUDA_EXPORT
inline int greens_function(tensor_sym<T, 7>& D, array<T, NDIM> dx, float rsinv, float rsinv2) {
	D = T(0);
	T r2 = fmaf(dx[0], dx[0], fmaf(dx[1], dx[1], sqr(dx[2])));
	const T r = sqrt(r2);
	const T rinv = 1.f / r;
	const T rinv0 = T(1);
	const T rinv1 = rinv;
	const T rinv2 = rinv1 * rinv1;
	const T rinv3 = rinv1 * rinv2;
	const auto d = green_kernel( r, rsinv, rsinv2 );
	const T Drinvpow_0_0 = d[0] * rinv0;
	const T Drinvpow_1_0 = d[1] * rinv0;
	const T Drinvpow_1_1 = d[1] * rinv1;
	const T Drinvpow_2_0 = d[2] * rinv0;
	const T Drinvpow_2_1 = d[2] * rinv1;
	const T Drinvpow_2_2 = d[2] * rinv2;
	const T Drinvpow_3_0 = d[3] * rinv0;
	const T Drinvpow_3_1 = d[3] * rinv1;
	const T Drinvpow_3_2 = d[3] * rinv2;
	const T Drinvpow_3_3 = d[3] * rinv3;
	const T Drinvpow_4_0 = d[4] * rinv0;
	const T Drinvpow_4_1 = d[4] * rinv1;
	const T Drinvpow_4_2 = d[4] * rinv2;
	const T Drinvpow_5_0 = d[5] * rinv0;
	const T Drinvpow_5_1 = d[5] * rinv1;
	const T Drinvpow_6_0 = d[6] * rinv0;
	array<T,NDIM> dxrinv;
	dxrinv[0] = dx[0] * rinv;
	dxrinv[1] = dx[1] * rinv;
	dxrinv[2] = dx[2] * rinv;
	T x[84];
	x[0] = T(1);
	x[1] = dxrinv[0];
	x[2] = dxrinv[1];
	x[3] = dxrinv[2];
	x[9] = x[3] * x[3];
	x[8] = x[2] * x[3];
	x[7] = x[2] * x[2];
	x[6] = x[1] * x[3];
	x[5] = x[1] * x[2];
	x[4] = x[1] * x[1];
	x[19] = x[9] * x[3];
	x[18] = x[8] * x[3];
	x[17] = x[8] * x[2];
	x[16] = x[7] * x[2];
	x[15] = x[6] * x[3];
	x[14] = x[5] * x[3];
	x[13] = x[5] * x[2];
	x[12] = x[6] * x[1];
	x[11] = x[5] * x[1];
	x[10] = x[4] * x[1];
	x[34] = x[9] * x[9];
	x[33] = x[8] * x[9];
	x[32] = x[8] * x[8];
	x[31] = x[8] * x[7];
	x[30] = x[7] * x[7];
	x[29] = x[6] * x[9];
	x[28] = x[5] * x[9];
	x[27] = x[5] * x[8];
	x[26] = x[5] * x[7];
	x[25] = x[6] * x[6];
	x[24] = x[5] * x[6];
	x[23] = x[5] * x[5];
	x[22] = x[6] * x[4];
	x[21] = x[5] * x[4];
	x[20] = x[4] * x[4];
	x[55] = x[19] * x[9];
	x[54] = x[18] * x[9];
	x[53] = x[17] * x[9];
	x[52] = x[17] * x[8];
	x[51] = x[17] * x[7];
	x[50] = x[16] * x[7];
	x[49] = x[15] * x[9];
	x[48] = x[14] * x[9];
	x[47] = x[14] * x[8];
	x[46] = x[14] * x[7];
	x[45] = x[13] * x[7];
	x[44] = x[12] * x[9];
	x[43] = x[14] * x[6];
	x[42] = x[14] * x[5];
	x[41] = x[11] * x[7];
	x[40] = x[12] * x[6];
	x[39] = x[14] * x[4];
	x[38] = x[11] * x[5];
	x[37] = x[12] * x[4];
	x[36] = x[11] * x[4];
	x[35] = x[10] * x[4];
	x[83] = x[19] * x[19];
	x[82] = x[18] * x[19];
	x[81] = x[17] * x[19];
	x[80] = x[17] * x[18];
	x[79] = x[17] * x[17];
	x[78] = x[17] * x[16];
	x[77] = x[16] * x[16];
	x[76] = x[15] * x[19];
	x[75] = x[14] * x[19];
	x[74] = x[14] * x[18];
	x[73] = x[14] * x[17];
	x[72] = x[14] * x[16];
	x[71] = x[13] * x[16];
	x[70] = x[12] * x[19];
	x[69] = x[14] * x[15];
	x[68] = x[14] * x[14];
	x[67] = x[14] * x[13];
	x[66] = x[11] * x[16];
	x[65] = x[12] * x[15];
	x[64] = x[14] * x[12];
	x[63] = x[14] * x[11];
	x[62] = x[11] * x[13];
	x[61] = x[12] * x[12];
	x[60] = x[14] * x[10];
	x[59] = x[11] * x[11];
	x[58] = x[12] * x[10];
	x[57] = x[11] * x[10];
	x[56] = x[10] * x[10];
	D[0] = fmaf(x[0], Drinvpow_0_0, D[0]);
	D[3] = fmaf(x[3], Drinvpow_1_0, D[3]);
	D[9] = fmaf(x[9], Drinvpow_2_0, D[9]);
	D[9] = fmaf(x[0], Drinvpow_1_1, D[9]);
	D[19] = fmaf(x[19], Drinvpow_3_0, D[19]);
	D[19] = fmaf(T(3.000000000e+00), x[3]*Drinvpow_2_1, D[19]);
	D[34] = fmaf(x[34], Drinvpow_4_0, D[34]);
	D[34] = fmaf(T(6.000000000e+00), x[9]*Drinvpow_3_1, D[34]);
	D[34] = fmaf(T(3.000000000e+00), x[0]*Drinvpow_2_2, D[34]);
	D[55] = fmaf(x[55], Drinvpow_5_0, D[55]);
	D[55] = fmaf(T(1.000000000e+01), x[19]*Drinvpow_4_1, D[55]);
	D[55] = fmaf(T(1.500000000e+01), x[3]*Drinvpow_3_2, D[55]);
	D[83] = fmaf(x[83], Drinvpow_6_0, D[83]);
	D[83] = fmaf(T(1.500000000e+01), x[34]*Drinvpow_5_1, D[83]);
	D[83] = fmaf(T(4.500000000e+01), x[9]*Drinvpow_4_2, D[83]);
	D[83] = fmaf(T(1.500000000e+01), x[0]*Drinvpow_3_3, D[83]);
	D[2] = fmaf(x[2], Drinvpow_1_0, D[2]);
	D[8] = fmaf(x[8], Drinvpow_2_0, D[8]);
	D[18] = fmaf(x[18], Drinvpow_3_0, D[18]);
	D[18] = fmaf(x[2], Drinvpow_2_1, D[18]);
	D[33] = fmaf(x[33], Drinvpow_4_0, D[33]);
	D[33] = fmaf(T(3.000000000e+00), x[8]*Drinvpow_3_1, D[33]);
	D[54] = fmaf(x[54], Drinvpow_5_0, D[54]);
	D[54] = fmaf(T(6.000000000e+00), x[18]*Drinvpow_4_1, D[54]);
	D[54] = fmaf(T(3.000000000e+00), x[2]*Drinvpow_3_2, D[54]);
	D[82] = fmaf(x[82], Drinvpow_6_0, D[82]);
	D[82] = fmaf(T(1.000000000e+01), x[33]*Drinvpow_5_1, D[82]);
	D[82] = fmaf(T(1.500000000e+01), x[8]*Drinvpow_4_2, D[82]);
	D[7] = fmaf(x[7], Drinvpow_2_0, D[7]);
	D[7] = fmaf(x[0], Drinvpow_1_1, D[7]);
	D[17] = fmaf(x[17], Drinvpow_3_0, D[17]);
	D[17] = fmaf(x[3], Drinvpow_2_1, D[17]);
	D[32] = fmaf(x[32], Drinvpow_4_0, D[32]);
	D[32] = fmaf(x[7], Drinvpow_3_1, D[32]);
	D[32] = fmaf(x[9], Drinvpow_3_1, D[32]);
	D[32] = fmaf(x[0], Drinvpow_2_2, D[32]);
	D[53] = fmaf(x[53], Drinvpow_5_0, D[53]);
	D[53] = fmaf(T(3.000000000e+00), x[17]*Drinvpow_4_1, D[53]);
	D[53] = fmaf(x[19], Drinvpow_4_1, D[53]);
	D[53] = fmaf(T(3.000000000e+00), x[3]*Drinvpow_3_2, D[53]);
	D[81] = fmaf(x[81], Drinvpow_6_0, D[81]);
	D[81] = fmaf(T(6.000000000e+00), x[32]*Drinvpow_5_1, D[81]);
	D[81] = fmaf(T(3.000000000e+00), x[7]*Drinvpow_4_2, D[81]);
	D[81] = fmaf(x[34], Drinvpow_5_1, D[81]);
	D[81] = fmaf(T(6.000000000e+00), x[9]*Drinvpow_4_2, D[81]);
	D[81] = fmaf(T(3.000000000e+00), x[0]*Drinvpow_3_3, D[81]);
	D[16] = fmaf(x[16], Drinvpow_3_0, D[16]);
	D[16] = fmaf(T(3.000000000e+00), x[2]*Drinvpow_2_1, D[16]);
	D[31] = fmaf(x[31], Drinvpow_4_0, D[31]);
	D[31] = fmaf(T(3.000000000e+00), x[8]*Drinvpow_3_1, D[31]);
	D[52] = fmaf(x[52], Drinvpow_5_0, D[52]);
	D[52] = fmaf(x[16], Drinvpow_4_1, D[52]);
	D[52] = fmaf(T(3.000000000e+00), x[18]*Drinvpow_4_1, D[52]);
	D[52] = fmaf(T(3.000000000e+00), x[2]*Drinvpow_3_2, D[52]);
	D[80] = fmaf(x[80], Drinvpow_6_0, D[80]);
	D[80] = fmaf(T(3.000000000e+00), x[31]*Drinvpow_5_1, D[80]);
	D[80] = fmaf(T(3.000000000e+00), x[33]*Drinvpow_5_1, D[80]);
	D[80] = fmaf(T(9.000000000e+00), x[8]*Drinvpow_4_2, D[80]);
	D[30] = fmaf(x[30], Drinvpow_4_0, D[30]);
	D[30] = fmaf(T(6.000000000e+00), x[7]*Drinvpow_3_1, D[30]);
	D[30] = fmaf(T(3.000000000e+00), x[0]*Drinvpow_2_2, D[30]);
	D[51] = fmaf(x[51], Drinvpow_5_0, D[51]);
	D[51] = fmaf(T(6.000000000e+00), x[17]*Drinvpow_4_1, D[51]);
	D[51] = fmaf(T(3.000000000e+00), x[3]*Drinvpow_3_2, D[51]);
	D[79] = fmaf(x[79], Drinvpow_6_0, D[79]);
	D[79] = fmaf(x[30], Drinvpow_5_1, D[79]);
	D[79] = fmaf(T(6.000000000e+00), x[32]*Drinvpow_5_1, D[79]);
	D[79] = fmaf(T(6.000000000e+00), x[7]*Drinvpow_4_2, D[79]);
	D[79] = fmaf(T(3.000000000e+00), x[9]*Drinvpow_4_2, D[79]);
	D[79] = fmaf(T(3.000000000e+00), x[0]*Drinvpow_3_3, D[79]);
	D[50] = fmaf(x[50], Drinvpow_5_0, D[50]);
	D[50] = fmaf(T(1.000000000e+01), x[16]*Drinvpow_4_1, D[50]);
	D[50] = fmaf(T(1.500000000e+01), x[2]*Drinvpow_3_2, D[50]);
	D[78] = fmaf(x[78], Drinvpow_6_0, D[78]);
	D[78] = fmaf(T(1.000000000e+01), x[31]*Drinvpow_5_1, D[78]);
	D[78] = fmaf(T(1.500000000e+01), x[8]*Drinvpow_4_2, D[78]);
	D[77] = fmaf(x[77], Drinvpow_6_0, D[77]);
	D[77] = fmaf(T(1.500000000e+01), x[30]*Drinvpow_5_1, D[77]);
	D[77] = fmaf(T(4.500000000e+01), x[7]*Drinvpow_4_2, D[77]);
	D[77] = fmaf(T(1.500000000e+01), x[0]*Drinvpow_3_3, D[77]);
	D[1] = fmaf(x[1], Drinvpow_1_0, D[1]);
	D[6] = fmaf(x[6], Drinvpow_2_0, D[6]);
	D[15] = fmaf(x[15], Drinvpow_3_0, D[15]);
	D[15] = fmaf(x[1], Drinvpow_2_1, D[15]);
	D[29] = fmaf(x[29], Drinvpow_4_0, D[29]);
	D[29] = fmaf(T(3.000000000e+00), x[6]*Drinvpow_3_1, D[29]);
	D[49] = fmaf(x[49], Drinvpow_5_0, D[49]);
	D[49] = fmaf(T(6.000000000e+00), x[15]*Drinvpow_4_1, D[49]);
	D[49] = fmaf(T(3.000000000e+00), x[1]*Drinvpow_3_2, D[49]);
	D[76] = fmaf(x[76], Drinvpow_6_0, D[76]);
	D[76] = fmaf(T(1.000000000e+01), x[29]*Drinvpow_5_1, D[76]);
	D[76] = fmaf(T(1.500000000e+01), x[6]*Drinvpow_4_2, D[76]);
	D[5] = fmaf(x[5], Drinvpow_2_0, D[5]);
	D[14] = fmaf(x[14], Drinvpow_3_0, D[14]);
	D[28] = fmaf(x[28], Drinvpow_4_0, D[28]);
	D[28] = fmaf(x[5], Drinvpow_3_1, D[28]);
	D[48] = fmaf(x[48], Drinvpow_5_0, D[48]);
	D[48] = fmaf(T(3.000000000e+00), x[14]*Drinvpow_4_1, D[48]);
	D[75] = fmaf(x[75], Drinvpow_6_0, D[75]);
	D[75] = fmaf(T(6.000000000e+00), x[28]*Drinvpow_5_1, D[75]);
	D[75] = fmaf(T(3.000000000e+00), x[5]*Drinvpow_4_2, D[75]);
	D[13] = fmaf(x[13], Drinvpow_3_0, D[13]);
	D[13] = fmaf(x[1], Drinvpow_2_1, D[13]);
	D[27] = fmaf(x[27], Drinvpow_4_0, D[27]);
	D[27] = fmaf(x[6], Drinvpow_3_1, D[27]);
	D[47] = fmaf(x[47], Drinvpow_5_0, D[47]);
	D[47] = fmaf(x[13], Drinvpow_4_1, D[47]);
	D[47] = fmaf(x[15], Drinvpow_4_1, D[47]);
	D[47] = fmaf(x[1], Drinvpow_3_2, D[47]);
	D[74] = fmaf(x[74], Drinvpow_6_0, D[74]);
	D[74] = fmaf(T(3.000000000e+00), x[27]*Drinvpow_5_1, D[74]);
	D[74] = fmaf(x[29], Drinvpow_5_1, D[74]);
	D[74] = fmaf(T(3.000000000e+00), x[6]*Drinvpow_4_2, D[74]);
	D[26] = fmaf(x[26], Drinvpow_4_0, D[26]);
	D[26] = fmaf(T(3.000000000e+00), x[5]*Drinvpow_3_1, D[26]);
	D[46] = fmaf(x[46], Drinvpow_5_0, D[46]);
	D[46] = fmaf(T(3.000000000e+00), x[14]*Drinvpow_4_1, D[46]);
	D[73] = fmaf(x[73], Drinvpow_6_0, D[73]);
	D[73] = fmaf(x[26], Drinvpow_5_1, D[73]);
	D[73] = fmaf(T(3.000000000e+00), x[28]*Drinvpow_5_1, D[73]);
	D[73] = fmaf(T(3.000000000e+00), x[5]*Drinvpow_4_2, D[73]);
	D[45] = fmaf(x[45], Drinvpow_5_0, D[45]);
	D[45] = fmaf(T(6.000000000e+00), x[13]*Drinvpow_4_1, D[45]);
	D[45] = fmaf(T(3.000000000e+00), x[1]*Drinvpow_3_2, D[45]);
	D[72] = fmaf(x[72], Drinvpow_6_0, D[72]);
	D[72] = fmaf(T(6.000000000e+00), x[27]*Drinvpow_5_1, D[72]);
	D[72] = fmaf(T(3.000000000e+00), x[6]*Drinvpow_4_2, D[72]);
	D[71] = fmaf(x[71], Drinvpow_6_0, D[71]);
	D[71] = fmaf(T(1.000000000e+01), x[26]*Drinvpow_5_1, D[71]);
	D[71] = fmaf(T(1.500000000e+01), x[5]*Drinvpow_4_2, D[71]);
	D[4] = fmaf(x[4], Drinvpow_2_0, D[4]);
	D[4] = fmaf(x[0], Drinvpow_1_1, D[4]);
	D[12] = fmaf(x[12], Drinvpow_3_0, D[12]);
	D[12] = fmaf(x[3], Drinvpow_2_1, D[12]);
	D[25] = fmaf(x[25], Drinvpow_4_0, D[25]);
	D[25] = fmaf(x[4], Drinvpow_3_1, D[25]);
	D[25] = fmaf(x[9], Drinvpow_3_1, D[25]);
	D[25] = fmaf(x[0], Drinvpow_2_2, D[25]);
	D[44] = fmaf(x[44], Drinvpow_5_0, D[44]);
	D[44] = fmaf(T(3.000000000e+00), x[12]*Drinvpow_4_1, D[44]);
	D[44] = fmaf(x[19], Drinvpow_4_1, D[44]);
	D[44] = fmaf(T(3.000000000e+00), x[3]*Drinvpow_3_2, D[44]);
	D[70] = fmaf(x[70], Drinvpow_6_0, D[70]);
	D[70] = fmaf(T(6.000000000e+00), x[25]*Drinvpow_5_1, D[70]);
	D[70] = fmaf(T(3.000000000e+00), x[4]*Drinvpow_4_2, D[70]);
	D[70] = fmaf(x[34], Drinvpow_5_1, D[70]);
	D[70] = fmaf(T(6.000000000e+00), x[9]*Drinvpow_4_2, D[70]);
	D[70] = fmaf(T(3.000000000e+00), x[0]*Drinvpow_3_3, D[70]);
	D[11] = fmaf(x[11], Drinvpow_3_0, D[11]);
	D[11] = fmaf(x[2], Drinvpow_2_1, D[11]);
	D[24] = fmaf(x[24], Drinvpow_4_0, D[24]);
	D[24] = fmaf(x[8], Drinvpow_3_1, D[24]);
	D[43] = fmaf(x[43], Drinvpow_5_0, D[43]);
	D[43] = fmaf(x[11], Drinvpow_4_1, D[43]);
	D[43] = fmaf(x[18], Drinvpow_4_1, D[43]);
	D[43] = fmaf(x[2], Drinvpow_3_2, D[43]);
	D[69] = fmaf(x[69], Drinvpow_6_0, D[69]);
	D[69] = fmaf(T(3.000000000e+00), x[24]*Drinvpow_5_1, D[69]);
	D[69] = fmaf(x[33], Drinvpow_5_1, D[69]);
	D[69] = fmaf(T(3.000000000e+00), x[8]*Drinvpow_4_2, D[69]);
	D[23] = fmaf(x[23], Drinvpow_4_0, D[23]);
	D[23] = fmaf(x[4], Drinvpow_3_1, D[23]);
	D[23] = fmaf(x[7], Drinvpow_3_1, D[23]);
	D[23] = fmaf(x[0], Drinvpow_2_2, D[23]);
	D[42] = fmaf(x[42], Drinvpow_5_0, D[42]);
	D[42] = fmaf(x[12], Drinvpow_4_1, D[42]);
	D[42] = fmaf(x[17], Drinvpow_4_1, D[42]);
	D[42] = fmaf(x[3], Drinvpow_3_2, D[42]);
	D[68] = fmaf(x[68], Drinvpow_6_0, D[68]);
	D[68] = fmaf(x[23], Drinvpow_5_1, D[68]);
	D[68] = fmaf(x[25], Drinvpow_5_1, D[68]);
	D[68] = fmaf(x[4], Drinvpow_4_2, D[68]);
	D[68] = fmaf(x[32], Drinvpow_5_1, D[68]);
	D[68] = fmaf(x[7], Drinvpow_4_2, D[68]);
	D[68] = fmaf(x[9], Drinvpow_4_2, D[68]);
	D[68] = fmaf(x[0], Drinvpow_3_3, D[68]);
	D[41] = fmaf(x[41], Drinvpow_5_0, D[41]);
	D[41] = fmaf(T(3.000000000e+00), x[11]*Drinvpow_4_1, D[41]);
	D[41] = fmaf(x[16], Drinvpow_4_1, D[41]);
	D[41] = fmaf(T(3.000000000e+00), x[2]*Drinvpow_3_2, D[41]);
	D[67] = fmaf(x[67], Drinvpow_6_0, D[67]);
	D[67] = fmaf(T(3.000000000e+00), x[24]*Drinvpow_5_1, D[67]);
	D[67] = fmaf(x[31], Drinvpow_5_1, D[67]);
	D[67] = fmaf(T(3.000000000e+00), x[8]*Drinvpow_4_2, D[67]);
	D[66] = fmaf(x[66], Drinvpow_6_0, D[66]);
	D[66] = fmaf(T(6.000000000e+00), x[23]*Drinvpow_5_1, D[66]);
	D[66] = fmaf(T(3.000000000e+00), x[4]*Drinvpow_4_2, D[66]);
	D[66] = fmaf(x[30], Drinvpow_5_1, D[66]);
	D[66] = fmaf(T(6.000000000e+00), x[7]*Drinvpow_4_2, D[66]);
	D[66] = fmaf(T(3.000000000e+00), x[0]*Drinvpow_3_3, D[66]);
	D[10] = fmaf(x[10], Drinvpow_3_0, D[10]);
	D[10] = fmaf(T(3.000000000e+00), x[1]*Drinvpow_2_1, D[10]);
	D[22] = fmaf(x[22], Drinvpow_4_0, D[22]);
	D[22] = fmaf(T(3.000000000e+00), x[6]*Drinvpow_3_1, D[22]);
	D[40] = fmaf(x[40], Drinvpow_5_0, D[40]);
	D[40] = fmaf(x[10], Drinvpow_4_1, D[40]);
	D[40] = fmaf(T(3.000000000e+00), x[15]*Drinvpow_4_1, D[40]);
	D[40] = fmaf(T(3.000000000e+00), x[1]*Drinvpow_3_2, D[40]);
	D[65] = fmaf(x[65], Drinvpow_6_0, D[65]);
	D[65] = fmaf(T(3.000000000e+00), x[22]*Drinvpow_5_1, D[65]);
	D[65] = fmaf(T(3.000000000e+00), x[29]*Drinvpow_5_1, D[65]);
	D[65] = fmaf(T(9.000000000e+00), x[6]*Drinvpow_4_2, D[65]);
	D[21] = fmaf(x[21], Drinvpow_4_0, D[21]);
	D[21] = fmaf(T(3.000000000e+00), x[5]*Drinvpow_3_1, D[21]);
	D[39] = fmaf(x[39], Drinvpow_5_0, D[39]);
	D[39] = fmaf(T(3.000000000e+00), x[14]*Drinvpow_4_1, D[39]);
	D[64] = fmaf(x[64], Drinvpow_6_0, D[64]);
	D[64] = fmaf(x[21], Drinvpow_5_1, D[64]);
	D[64] = fmaf(T(3.000000000e+00), x[28]*Drinvpow_5_1, D[64]);
	D[64] = fmaf(T(3.000000000e+00), x[5]*Drinvpow_4_2, D[64]);
	D[38] = fmaf(x[38], Drinvpow_5_0, D[38]);
	D[38] = fmaf(x[10], Drinvpow_4_1, D[38]);
	D[38] = fmaf(T(3.000000000e+00), x[13]*Drinvpow_4_1, D[38]);
	D[38] = fmaf(T(3.000000000e+00), x[1]*Drinvpow_3_2, D[38]);
	D[63] = fmaf(x[63], Drinvpow_6_0, D[63]);
	D[63] = fmaf(x[22], Drinvpow_5_1, D[63]);
	D[63] = fmaf(T(3.000000000e+00), x[27]*Drinvpow_5_1, D[63]);
	D[63] = fmaf(T(3.000000000e+00), x[6]*Drinvpow_4_2, D[63]);
	D[62] = fmaf(x[62], Drinvpow_6_0, D[62]);
	D[62] = fmaf(T(3.000000000e+00), x[21]*Drinvpow_5_1, D[62]);
	D[62] = fmaf(T(3.000000000e+00), x[26]*Drinvpow_5_1, D[62]);
	D[62] = fmaf(T(9.000000000e+00), x[5]*Drinvpow_4_2, D[62]);
	D[20] = fmaf(x[20], Drinvpow_4_0, D[20]);
	D[20] = fmaf(T(6.000000000e+00), x[4]*Drinvpow_3_1, D[20]);
	D[20] = fmaf(T(3.000000000e+00), x[0]*Drinvpow_2_2, D[20]);
	D[37] = fmaf(x[37], Drinvpow_5_0, D[37]);
	D[37] = fmaf(T(6.000000000e+00), x[12]*Drinvpow_4_1, D[37]);
	D[37] = fmaf(T(3.000000000e+00), x[3]*Drinvpow_3_2, D[37]);
	D[61] = fmaf(x[61], Drinvpow_6_0, D[61]);
	D[61] = fmaf(x[20], Drinvpow_5_1, D[61]);
	D[61] = fmaf(T(6.000000000e+00), x[25]*Drinvpow_5_1, D[61]);
	D[61] = fmaf(T(6.000000000e+00), x[4]*Drinvpow_4_2, D[61]);
	D[61] = fmaf(T(3.000000000e+00), x[9]*Drinvpow_4_2, D[61]);
	D[61] = fmaf(T(3.000000000e+00), x[0]*Drinvpow_3_3, D[61]);
	D[36] = fmaf(x[36], Drinvpow_5_0, D[36]);
	D[36] = fmaf(T(6.000000000e+00), x[11]*Drinvpow_4_1, D[36]);
	D[36] = fmaf(T(3.000000000e+00), x[2]*Drinvpow_3_2, D[36]);
	D[60] = fmaf(x[60], Drinvpow_6_0, D[60]);
	D[60] = fmaf(T(6.000000000e+00), x[24]*Drinvpow_5_1, D[60]);
	D[60] = fmaf(T(3.000000000e+00), x[8]*Drinvpow_4_2, D[60]);
	D[59] = fmaf(x[59], Drinvpow_6_0, D[59]);
	D[59] = fmaf(x[20], Drinvpow_5_1, D[59]);
	D[59] = fmaf(T(6.000000000e+00), x[23]*Drinvpow_5_1, D[59]);
	D[59] = fmaf(T(6.000000000e+00), x[4]*Drinvpow_4_2, D[59]);
	D[59] = fmaf(T(3.000000000e+00), x[7]*Drinvpow_4_2, D[59]);
	D[59] = fmaf(T(3.000000000e+00), x[0]*Drinvpow_3_3, D[59]);
	D[35] = fmaf(x[35], Drinvpow_5_0, D[35]);
	D[35] = fmaf(T(1.000000000e+01), x[10]*Drinvpow_4_1, D[35]);
	D[35] = fmaf(T(1.500000000e+01), x[1]*Drinvpow_3_2, D[35]);
	D[58] = fmaf(x[58], Drinvpow_6_0, D[58]);
	D[58] = fmaf(T(1.000000000e+01), x[22]*Drinvpow_5_1, D[58]);
	D[58] = fmaf(T(1.500000000e+01), x[6]*Drinvpow_4_2, D[58]);
	D[57] = fmaf(x[57], Drinvpow_6_0, D[57]);
	D[57] = fmaf(T(1.000000000e+01), x[21]*Drinvpow_5_1, D[57]);
	D[57] = fmaf(T(1.500000000e+01), x[5]*Drinvpow_4_2, D[57]);
	D[56] = fmaf(x[56], Drinvpow_6_0, D[56]);
	D[56] = fmaf(T(1.500000000e+01), x[20]*Drinvpow_5_1, D[56]);
	D[56] = fmaf(T(4.500000000e+01), x[4]*Drinvpow_4_2, D[56]);
	D[56] = fmaf(T(1.500000000e+01), x[0]*Drinvpow_3_3, D[56]);
	return 0; 
}


template<class T>
CUDA_EXPORT
inline int M2L(tensor_sym<T, 2>& L, const tensor_sym<T, 6>& M, const tensor_sym<T, 7>& D, bool do_phi) {
	if( do_phi ) {
		L[0] *= T(1.200000000e+02);
		L[0] = fmaf(M[35], D[35], L[0]);
		L[0] = fmaf(M[50], D[50], L[0]);
		L[0] = fmaf(M[55], D[55], L[0]);
		L[0] *= T(2.000000000e-01);
		L[0] = fmaf(M[51], D[51], L[0]);
		L[0] = fmaf(M[45], D[45], L[0]);
		L[0] = fmaf(M[49], D[49], L[0]);
		L[0] = fmaf(M[30], D[30], L[0]);
		L[0] = fmaf(M[54], D[54], L[0]);
		L[0] = fmaf(M[20], D[20], L[0]);
		L[0] = fmaf(M[36], D[36], L[0]);
		L[0] = fmaf(M[37], D[37], L[0]);
		L[0] = fmaf(M[34], D[34], L[0]);
		L[0] *= T(5.000000000e-01);
		L[0] = fmaf(M[38], D[38], L[0]);
		L[0] = fmaf(M[44], D[44], L[0]);
		L[0] = fmaf(M[53], D[53], L[0]);
		L[0] = fmaf(M[52], D[52], L[0]);
		L[0] = fmaf(M[41], D[41], L[0]);
		L[0] = fmaf(M[40], D[40], L[0]);
		L[0] *= T(5.000000000e-01);
		L[0] = fmaf(M[33], D[33], L[0]);
		L[0] = fmaf(M[46], D[46], L[0]);
		L[0] = fmaf(M[26], D[26], L[0]);
		L[0] = fmaf(M[48], D[48], L[0]);
		L[0] = fmaf(M[19], D[19], L[0]);
		L[0] = fmaf(M[29], D[29], L[0]);
		L[0] = fmaf(M[10], D[10], L[0]);
		L[0] = fmaf(M[22], D[22], L[0]);
		L[0] = fmaf(M[31], D[31], L[0]);
		L[0] = fmaf(M[16], D[16], L[0]);
		L[0] = fmaf(M[21], D[21], L[0]);
		L[0] = fmaf(M[39], D[39], L[0]);
		L[0] *= T(6.666666667e-01);
		L[0] = fmaf(M[42], D[42], L[0]);
		L[0] = fmaf(M[23], D[23], L[0]);
		L[0] = fmaf(M[43], D[43], L[0]);
		L[0] = fmaf(M[47], D[47], L[0]);
		L[0] = fmaf(M[32], D[32], L[0]);
		L[0] = fmaf(M[25], D[25], L[0]);
		L[0] *= T(5.000000000e-01);
		L[0] = fmaf(M[28], D[28], L[0]);
		L[0] = fmaf(M[24], D[24], L[0]);
		L[0] = fmaf(M[11], D[11], L[0]);
		L[0] = fmaf(M[4], D[4], L[0]);
		L[0] = fmaf(M[27], D[27], L[0]);
		L[0] = fmaf(M[13], D[13], L[0]);
		L[0] = fmaf(M[12], D[12], L[0]);
		L[0] = fmaf(M[9], D[9], L[0]);
		L[0] = fmaf(M[15], D[15], L[0]);
		L[0] = fmaf(M[18], D[18], L[0]);
		L[0] = fmaf(M[17], D[17], L[0]);
		L[0] = fmaf(M[7], D[7], L[0]);
		L[0] *= T(5.000000000e-01);
		L[0] = fmaf(M[3], D[3], L[0]);
		L[0] = fmaf(M[2], D[2], L[0]);
		L[0] = fmaf(M[8], D[8], L[0]);
		L[0] = fmaf(M[1], D[1], L[0]);
		L[0] = fmaf(M[6], D[6], L[0]);
		L[0] = fmaf(M[5], D[5], L[0]);
		L[0] = fmaf(M[14], D[14], L[0]);
		L[0] = fmaf(M[0], D[0], L[0]);
	}
	L[1] *= T(1.200000000e+02);
	L[2] *= T(1.200000000e+02);
	L[1] = fmaf(M[35], D[56], L[1]);
	L[2] = fmaf(M[35], D[57], L[2]);
	L[1] = fmaf(M[50], D[71], L[1]);
	L[2] = fmaf(M[50], D[77], L[2]);
	L[1] = fmaf(M[55], D[76], L[1]);
	L[2] = fmaf(M[55], D[82], L[2]);
	L[1] *= T(2.000000000e-01);
	L[2] *= T(2.000000000e-01);
	L[1] = fmaf(M[51], D[72], L[1]);
	L[2] = fmaf(M[51], D[78], L[2]);
	L[1] = fmaf(M[45], D[66], L[1]);
	L[2] = fmaf(M[45], D[71], L[2]);
	L[1] = fmaf(M[49], D[70], L[1]);
	L[2] = fmaf(M[49], D[75], L[2]);
	L[1] = fmaf(M[30], D[45], L[1]);
	L[2] = fmaf(M[30], D[50], L[2]);
	L[1] = fmaf(M[54], D[75], L[1]);
	L[2] = fmaf(M[54], D[81], L[2]);
	L[1] = fmaf(M[20], D[35], L[1]);
	L[2] = fmaf(M[20], D[36], L[2]);
	L[1] = fmaf(M[36], D[57], L[1]);
	L[2] = fmaf(M[36], D[59], L[2]);
	L[1] = fmaf(M[37], D[58], L[1]);
	L[2] = fmaf(M[37], D[60], L[2]);
	L[1] = fmaf(M[34], D[49], L[1]);
	L[2] = fmaf(M[34], D[54], L[2]);
	L[1] *= T(5.000000000e-01);
	L[2] *= T(5.000000000e-01);
	L[1] = fmaf(M[38], D[59], L[1]);
	L[2] = fmaf(M[38], D[62], L[2]);
	L[1] = fmaf(M[44], D[65], L[1]);
	L[2] = fmaf(M[44], D[69], L[2]);
	L[1] = fmaf(M[53], D[74], L[1]);
	L[2] = fmaf(M[53], D[80], L[2]);
	L[1] = fmaf(M[52], D[73], L[1]);
	L[2] = fmaf(M[52], D[79], L[2]);
	L[1] = fmaf(M[41], D[62], L[1]);
	L[2] = fmaf(M[41], D[66], L[2]);
	L[1] = fmaf(M[40], D[61], L[1]);
	L[2] = fmaf(M[40], D[64], L[2]);
	L[1] *= T(5.000000000e-01);
	L[2] *= T(5.000000000e-01);
	L[1] = fmaf(M[33], D[48], L[1]);
	L[2] = fmaf(M[33], D[53], L[2]);
	L[1] = fmaf(M[46], D[67], L[1]);
	L[2] = fmaf(M[46], D[72], L[2]);
	L[1] = fmaf(M[26], D[41], L[1]);
	L[2] = fmaf(M[26], D[45], L[2]);
	L[1] = fmaf(M[48], D[69], L[1]);
	L[2] = fmaf(M[48], D[74], L[2]);
	L[1] = fmaf(M[19], D[29], L[1]);
	L[2] = fmaf(M[19], D[33], L[2]);
	L[1] = fmaf(M[29], D[44], L[1]);
	L[2] = fmaf(M[29], D[48], L[2]);
	L[1] = fmaf(M[10], D[20], L[1]);
	L[2] = fmaf(M[10], D[21], L[2]);
	L[1] = fmaf(M[22], D[37], L[1]);
	L[2] = fmaf(M[22], D[39], L[2]);
	L[1] = fmaf(M[31], D[46], L[1]);
	L[2] = fmaf(M[31], D[51], L[2]);
	L[1] = fmaf(M[16], D[26], L[1]);
	L[2] = fmaf(M[16], D[30], L[2]);
	L[1] = fmaf(M[21], D[36], L[1]);
	L[2] = fmaf(M[21], D[38], L[2]);
	L[1] = fmaf(M[39], D[60], L[1]);
	L[2] = fmaf(M[39], D[63], L[2]);
	L[1] *= T(6.666666667e-01);
	L[2] *= T(6.666666667e-01);
	L[1] = fmaf(M[42], D[63], L[1]);
	L[2] = fmaf(M[42], D[67], L[2]);
	L[1] = fmaf(M[23], D[38], L[1]);
	L[2] = fmaf(M[23], D[41], L[2]);
	L[1] = fmaf(M[43], D[64], L[1]);
	L[2] = fmaf(M[43], D[68], L[2]);
	L[1] = fmaf(M[47], D[68], L[1]);
	L[2] = fmaf(M[47], D[73], L[2]);
	L[1] = fmaf(M[32], D[47], L[1]);
	L[2] = fmaf(M[32], D[52], L[2]);
	L[1] = fmaf(M[25], D[40], L[1]);
	L[2] = fmaf(M[25], D[43], L[2]);
	L[1] *= T(5.000000000e-01);
	L[2] *= T(5.000000000e-01);
	L[1] = fmaf(M[28], D[43], L[1]);
	L[2] = fmaf(M[28], D[47], L[2]);
	L[1] = fmaf(M[24], D[39], L[1]);
	L[2] = fmaf(M[24], D[42], L[2]);
	L[1] = fmaf(M[11], D[21], L[1]);
	L[2] = fmaf(M[11], D[23], L[2]);
	L[1] = fmaf(M[4], D[10], L[1]);
	L[2] = fmaf(M[4], D[11], L[2]);
	L[1] = fmaf(M[27], D[42], L[1]);
	L[2] = fmaf(M[27], D[46], L[2]);
	L[1] = fmaf(M[13], D[23], L[1]);
	L[2] = fmaf(M[13], D[26], L[2]);
	L[1] = fmaf(M[12], D[22], L[1]);
	L[2] = fmaf(M[12], D[24], L[2]);
	L[1] = fmaf(M[9], D[15], L[1]);
	L[2] = fmaf(M[9], D[18], L[2]);
	L[1] = fmaf(M[15], D[25], L[1]);
	L[2] = fmaf(M[15], D[28], L[2]);
	L[1] = fmaf(M[18], D[28], L[1]);
	L[2] = fmaf(M[18], D[32], L[2]);
	L[1] = fmaf(M[17], D[27], L[1]);
	L[2] = fmaf(M[17], D[31], L[2]);
	L[1] = fmaf(M[7], D[13], L[1]);
	L[2] = fmaf(M[7], D[16], L[2]);
	L[1] *= T(5.000000000e-01);
	L[2] *= T(5.000000000e-01);
	L[1] = fmaf(M[3], D[6], L[1]);
	L[2] = fmaf(M[3], D[8], L[2]);
	L[1] = fmaf(M[2], D[5], L[1]);
	L[2] = fmaf(M[2], D[7], L[2]);
	L[1] = fmaf(M[8], D[14], L[1]);
	L[2] = fmaf(M[8], D[17], L[2]);
	L[1] = fmaf(M[1], D[4], L[1]);
	L[2] = fmaf(M[1], D[5], L[2]);
	L[1] = fmaf(M[6], D[12], L[1]);
	L[2] = fmaf(M[6], D[14], L[2]);
	L[1] = fmaf(M[5], D[11], L[1]);
	L[2] = fmaf(M[5], D[13], L[2]);
	L[1] = fmaf(M[14], D[24], L[1]);
	L[2] = fmaf(M[14], D[27], L[2]);
	L[1] = fmaf(M[0], D[1], L[1]);
	L[2] = fmaf(M[0], D[2], L[2]);
	L[3] *= T(1.200000000e+02);
	L[3] = fmaf(M[35], D[58], L[3]);
	L[3] = fmaf(M[50], D[78], L[3]);
	L[3] = fmaf(M[55], D[83], L[3]);
	L[3] *= T(2.000000000e-01);
	L[3] = fmaf(M[51], D[79], L[3]);
	L[3] = fmaf(M[45], D[72], L[3]);
	L[3] = fmaf(M[49], D[76], L[3]);
	L[3] = fmaf(M[30], D[51], L[3]);
	L[3] = fmaf(M[54], D[82], L[3]);
	L[3] = fmaf(M[20], D[37], L[3]);
	L[3] = fmaf(M[36], D[60], L[3]);
	L[3] = fmaf(M[37], D[61], L[3]);
	L[3] = fmaf(M[34], D[55], L[3]);
	L[3] *= T(5.000000000e-01);
	L[3] = fmaf(M[38], D[63], L[3]);
	L[3] = fmaf(M[44], D[70], L[3]);
	L[3] = fmaf(M[53], D[81], L[3]);
	L[3] = fmaf(M[52], D[80], L[3]);
	L[3] = fmaf(M[41], D[67], L[3]);
	L[3] = fmaf(M[40], D[65], L[3]);
	L[3] *= T(5.000000000e-01);
	L[3] = fmaf(M[33], D[54], L[3]);
	L[3] = fmaf(M[46], D[73], L[3]);
	L[3] = fmaf(M[26], D[46], L[3]);
	L[3] = fmaf(M[48], D[75], L[3]);
	L[3] = fmaf(M[19], D[34], L[3]);
	L[3] = fmaf(M[29], D[49], L[3]);
	L[3] = fmaf(M[10], D[22], L[3]);
	L[3] = fmaf(M[22], D[40], L[3]);
	L[3] = fmaf(M[31], D[52], L[3]);
	L[3] = fmaf(M[16], D[31], L[3]);
	L[3] = fmaf(M[21], D[39], L[3]);
	L[3] = fmaf(M[39], D[64], L[3]);
	L[3] *= T(6.666666667e-01);
	L[3] = fmaf(M[42], D[68], L[3]);
	L[3] = fmaf(M[23], D[42], L[3]);
	L[3] = fmaf(M[43], D[69], L[3]);
	L[3] = fmaf(M[47], D[74], L[3]);
	L[3] = fmaf(M[32], D[53], L[3]);
	L[3] = fmaf(M[25], D[44], L[3]);
	L[3] *= T(5.000000000e-01);
	L[3] = fmaf(M[28], D[48], L[3]);
	L[3] = fmaf(M[24], D[43], L[3]);
	L[3] = fmaf(M[11], D[24], L[3]);
	L[3] = fmaf(M[4], D[12], L[3]);
	L[3] = fmaf(M[27], D[47], L[3]);
	L[3] = fmaf(M[13], D[27], L[3]);
	L[3] = fmaf(M[12], D[25], L[3]);
	L[3] = fmaf(M[9], D[19], L[3]);
	L[3] = fmaf(M[15], D[29], L[3]);
	L[3] = fmaf(M[18], D[33], L[3]);
	L[3] = fmaf(M[17], D[32], L[3]);
	L[3] = fmaf(M[7], D[17], L[3]);
	L[3] *= T(5.000000000e-01);
	L[3] = fmaf(M[3], D[9], L[3]);
	L[3] = fmaf(M[2], D[8], L[3]);
	L[3] = fmaf(M[8], D[18], L[3]);
	L[3] = fmaf(M[1], D[6], L[3]);
	L[3] = fmaf(M[6], D[15], L[3]);
	L[3] = fmaf(M[5], D[14], L[3]);
	L[3] = fmaf(M[14], D[28], L[3]);
	L[3] = fmaf(M[0], D[3], L[3]);
	return 357 + do_phi * 119;
}


template<class T>
CUDA_EXPORT
inline int M2L(tensor_sym<T, 7>& L, const tensor_sym<T, 6>& M, const tensor_sym<T, 7>& D, bool do_phi) {
	if( do_phi ) {
		L[0] *= T(1.200000000e+02);
		L[0] = fmaf(M[35], D[35], L[0]);
		L[0] = fmaf(M[50], D[50], L[0]);
		L[0] = fmaf(M[55], D[55], L[0]);
		L[0] *= T(2.000000000e-01);
		L[0] = fmaf(M[51], D[51], L[0]);
		L[0] = fmaf(M[45], D[45], L[0]);
		L[0] = fmaf(M[49], D[49], L[0]);
		L[0] = fmaf(M[30], D[30], L[0]);
		L[0] = fmaf(M[54], D[54], L[0]);
		L[0] = fmaf(M[20], D[20], L[0]);
		L[0] = fmaf(M[36], D[36], L[0]);
		L[0] = fmaf(M[37], D[37], L[0]);
		L[0] = fmaf(M[34], D[34], L[0]);
		L[0] *= T(5.000000000e-01);
		L[0] = fmaf(M[38], D[38], L[0]);
		L[0] = fmaf(M[44], D[44], L[0]);
		L[0] = fmaf(M[53], D[53], L[0]);
		L[0] = fmaf(M[52], D[52], L[0]);
		L[0] = fmaf(M[41], D[41], L[0]);
		L[0] = fmaf(M[40], D[40], L[0]);
		L[0] *= T(5.000000000e-01);
		L[0] = fmaf(M[33], D[33], L[0]);
		L[0] = fmaf(M[46], D[46], L[0]);
		L[0] = fmaf(M[26], D[26], L[0]);
		L[0] = fmaf(M[48], D[48], L[0]);
		L[0] = fmaf(M[19], D[19], L[0]);
		L[0] = fmaf(M[29], D[29], L[0]);
		L[0] = fmaf(M[10], D[10], L[0]);
		L[0] = fmaf(M[22], D[22], L[0]);
		L[0] = fmaf(M[31], D[31], L[0]);
		L[0] = fmaf(M[16], D[16], L[0]);
		L[0] = fmaf(M[21], D[21], L[0]);
		L[0] = fmaf(M[39], D[39], L[0]);
		L[0] *= T(6.666666667e-01);
		L[0] = fmaf(M[42], D[42], L[0]);
		L[0] = fmaf(M[23], D[23], L[0]);
		L[0] = fmaf(M[43], D[43], L[0]);
		L[0] = fmaf(M[47], D[47], L[0]);
		L[0] = fmaf(M[32], D[32], L[0]);
		L[0] = fmaf(M[25], D[25], L[0]);
		L[0] *= T(5.000000000e-01);
		L[0] = fmaf(M[28], D[28], L[0]);
		L[0] = fmaf(M[24], D[24], L[0]);
		L[0] = fmaf(M[11], D[11], L[0]);
		L[0] = fmaf(M[4], D[4], L[0]);
		L[0] = fmaf(M[27], D[27], L[0]);
		L[0] = fmaf(M[13], D[13], L[0]);
		L[0] = fmaf(M[12], D[12], L[0]);
		L[0] = fmaf(M[9], D[9], L[0]);
		L[0] = fmaf(M[15], D[15], L[0]);
		L[0] = fmaf(M[18], D[18], L[0]);
		L[0] = fmaf(M[17], D[17], L[0]);
		L[0] = fmaf(M[7], D[7], L[0]);
		L[0] *= T(5.000000000e-01);
		L[0] = fmaf(M[3], D[3], L[0]);
		L[0] = fmaf(M[2], D[2], L[0]);
		L[0] = fmaf(M[8], D[8], L[0]);
		L[0] = fmaf(M[1], D[1], L[0]);
		L[0] = fmaf(M[6], D[6], L[0]);
		L[0] = fmaf(M[5], D[5], L[0]);
		L[0] = fmaf(M[14], D[14], L[0]);
		L[0] = fmaf(M[0], D[0], L[0]);
	}
	L[1] *= T(1.200000000e+02);
	L[12] *= T(6.000000000e+00);
	L[1] = fmaf(M[35], D[56], L[1]);
	L[12] = fmaf(M[10], D[58], L[12]);
	L[1] = fmaf(M[50], D[71], L[1]);
	L[12] = fmaf(M[19], D[70], L[12]);
	L[1] = fmaf(M[55], D[76], L[1]);
	L[12] = fmaf(M[16], D[67], L[12]);
	L[1] *= T(2.000000000e-01);
	L[12] *= T(3.333333333e-01);
	L[1] = fmaf(M[51], D[72], L[1]);
	L[12] = fmaf(M[9], D[44], L[12]);
	L[1] = fmaf(M[45], D[66], L[1]);
	L[12] = fmaf(M[11], D[60], L[12]);
	L[1] = fmaf(M[49], D[70], L[1]);
	L[12] = fmaf(M[12], D[61], L[12]);
	L[1] = fmaf(M[30], D[45], L[1]);
	L[12] = fmaf(M[18], D[69], L[12]);
	L[1] = fmaf(M[54], D[75], L[1]);
	L[12] = fmaf(M[7], D[42], L[12]);
	L[1] = fmaf(M[20], D[35], L[1]);
	L[12] = fmaf(M[17], D[68], L[12]);
	L[1] = fmaf(M[36], D[57], L[1]);
	L[12] = fmaf(M[4], D[37], L[12]);
	L[1] = fmaf(M[37], D[58], L[1]);
	L[12] = fmaf(M[13], D[63], L[12]);
	L[1] = fmaf(M[34], D[49], L[1]);
	L[12] = fmaf(M[15], D[65], L[12]);
	L[1] *= T(5.000000000e-01);
	L[12] *= T(5.000000000e-01);
	L[1] = fmaf(M[38], D[59], L[1]);
	L[12] = fmaf(M[1], D[22], L[12]);
	L[1] = fmaf(M[44], D[65], L[1]);
	L[12] = fmaf(M[14], D[64], L[12]);
	L[1] = fmaf(M[53], D[74], L[1]);
	L[12] = fmaf(M[5], D[39], L[12]);
	L[1] = fmaf(M[52], D[73], L[1]);
	L[12] = fmaf(M[6], D[40], L[12]);
	L[1] = fmaf(M[41], D[62], L[1]);
	L[12] = fmaf(M[0], D[12], L[12]);
	L[1] = fmaf(M[40], D[61], L[1]);
	L[12] = fmaf(M[8], D[43], L[12]);
	L[1] *= T(5.000000000e-01);
	L[12] = fmaf(M[2], D[24], L[12]);
	L[1] = fmaf(M[33], D[48], L[1]);
	L[12] = fmaf(M[3], D[25], L[12]);
	L[1] = fmaf(M[46], D[67], L[1]);
	L[13] *= T(6.000000000e+00);
	L[1] = fmaf(M[26], D[41], L[1]);
	L[13] = fmaf(M[10], D[59], L[13]);
	L[1] = fmaf(M[48], D[69], L[1]);
	L[13] = fmaf(M[19], D[74], L[13]);
	L[1] = fmaf(M[19], D[29], L[1]);
	L[13] = fmaf(M[16], D[71], L[13]);
	L[1] = fmaf(M[29], D[44], L[1]);
	L[13] *= T(3.333333333e-01);
	L[1] = fmaf(M[10], D[20], L[1]);
	L[13] = fmaf(M[9], D[47], L[13]);
	L[1] = fmaf(M[22], D[37], L[1]);
	L[13] = fmaf(M[11], D[62], L[13]);
	L[1] = fmaf(M[31], D[46], L[1]);
	L[13] = fmaf(M[12], D[63], L[13]);
	L[1] = fmaf(M[16], D[26], L[1]);
	L[13] = fmaf(M[18], D[73], L[13]);
	L[1] = fmaf(M[21], D[36], L[1]);
	L[13] = fmaf(M[7], D[45], L[13]);
	L[1] = fmaf(M[39], D[60], L[1]);
	L[13] = fmaf(M[17], D[72], L[13]);
	L[1] *= T(6.666666667e-01);
	L[13] = fmaf(M[4], D[38], L[13]);
	L[1] = fmaf(M[42], D[63], L[1]);
	L[13] = fmaf(M[13], D[66], L[13]);
	L[1] = fmaf(M[23], D[38], L[1]);
	L[13] = fmaf(M[15], D[68], L[13]);
	L[1] = fmaf(M[43], D[64], L[1]);
	L[13] *= T(5.000000000e-01);
	L[1] = fmaf(M[47], D[68], L[1]);
	L[13] = fmaf(M[1], D[23], L[13]);
	L[1] = fmaf(M[32], D[47], L[1]);
	L[13] = fmaf(M[14], D[67], L[13]);
	L[1] = fmaf(M[25], D[40], L[1]);
	L[13] = fmaf(M[5], D[41], L[13]);
	L[1] *= T(5.000000000e-01);
	L[13] = fmaf(M[6], D[42], L[13]);
	L[1] = fmaf(M[28], D[43], L[1]);
	L[13] = fmaf(M[0], D[13], L[13]);
	L[1] = fmaf(M[24], D[39], L[1]);
	L[13] = fmaf(M[8], D[46], L[13]);
	L[1] = fmaf(M[11], D[21], L[1]);
	L[13] = fmaf(M[2], D[26], L[13]);
	L[1] = fmaf(M[4], D[10], L[1]);
	L[13] = fmaf(M[3], D[27], L[13]);
	L[1] = fmaf(M[27], D[42], L[1]);
	L[14] *= T(6.000000000e+00);
	L[1] = fmaf(M[13], D[23], L[1]);
	L[14] = fmaf(M[10], D[60], L[14]);
	L[1] = fmaf(M[12], D[22], L[1]);
	L[14] = fmaf(M[19], D[75], L[14]);
	L[1] = fmaf(M[9], D[15], L[1]);
	L[14] = fmaf(M[16], D[72], L[14]);
	L[1] = fmaf(M[15], D[25], L[1]);
	L[14] *= T(3.333333333e-01);
	L[1] = fmaf(M[18], D[28], L[1]);
	L[14] = fmaf(M[9], D[48], L[14]);
	L[1] = fmaf(M[17], D[27], L[1]);
	L[14] = fmaf(M[11], D[63], L[14]);
	L[1] = fmaf(M[7], D[13], L[1]);
	L[14] = fmaf(M[12], D[64], L[14]);
	L[1] *= T(5.000000000e-01);
	L[14] = fmaf(M[18], D[74], L[14]);
	L[1] = fmaf(M[3], D[6], L[1]);
	L[14] = fmaf(M[7], D[46], L[14]);
	L[1] = fmaf(M[2], D[5], L[1]);
	L[14] = fmaf(M[17], D[73], L[14]);
	L[1] = fmaf(M[8], D[14], L[1]);
	L[14] = fmaf(M[4], D[39], L[14]);
	L[1] = fmaf(M[1], D[4], L[1]);
	L[14] = fmaf(M[13], D[67], L[14]);
	L[1] = fmaf(M[6], D[12], L[1]);
	L[14] = fmaf(M[15], D[69], L[14]);
	L[1] = fmaf(M[5], D[11], L[1]);
	L[14] *= T(5.000000000e-01);
	L[1] = fmaf(M[14], D[24], L[1]);
	L[14] = fmaf(M[1], D[24], L[14]);
	L[1] = fmaf(M[0], D[1], L[1]);
	L[14] = fmaf(M[14], D[68], L[14]);
	L[2] *= T(1.200000000e+02);
	L[14] = fmaf(M[5], D[42], L[14]);
	L[2] = fmaf(M[35], D[57], L[2]);
	L[14] = fmaf(M[6], D[43], L[14]);
	L[2] = fmaf(M[50], D[77], L[2]);
	L[14] = fmaf(M[0], D[14], L[14]);
	L[2] = fmaf(M[55], D[82], L[2]);
	L[14] = fmaf(M[8], D[47], L[14]);
	L[2] *= T(2.000000000e-01);
	L[14] = fmaf(M[2], D[27], L[14]);
	L[2] = fmaf(M[51], D[78], L[2]);
	L[14] = fmaf(M[3], D[28], L[14]);
	L[2] = fmaf(M[45], D[71], L[2]);
	L[15] *= T(6.000000000e+00);
	L[2] = fmaf(M[49], D[75], L[2]);
	L[15] = fmaf(M[10], D[61], L[15]);
	L[2] = fmaf(M[30], D[50], L[2]);
	L[15] = fmaf(M[19], D[76], L[15]);
	L[2] = fmaf(M[54], D[81], L[2]);
	L[15] = fmaf(M[16], D[73], L[15]);
	L[2] = fmaf(M[20], D[36], L[2]);
	L[15] *= T(3.333333333e-01);
	L[2] = fmaf(M[36], D[59], L[2]);
	L[15] = fmaf(M[9], D[49], L[15]);
	L[2] = fmaf(M[37], D[60], L[2]);
	L[15] = fmaf(M[11], D[64], L[15]);
	L[2] = fmaf(M[34], D[54], L[2]);
	L[15] = fmaf(M[12], D[65], L[15]);
	L[2] *= T(5.000000000e-01);
	L[15] = fmaf(M[18], D[75], L[15]);
	L[2] = fmaf(M[38], D[62], L[2]);
	L[15] = fmaf(M[7], D[47], L[15]);
	L[2] = fmaf(M[44], D[69], L[2]);
	L[15] = fmaf(M[17], D[74], L[15]);
	L[2] = fmaf(M[53], D[80], L[2]);
	L[15] = fmaf(M[4], D[40], L[15]);
	L[2] = fmaf(M[52], D[79], L[2]);
	L[15] = fmaf(M[13], D[68], L[15]);
	L[2] = fmaf(M[41], D[66], L[2]);
	L[15] = fmaf(M[15], D[70], L[15]);
	L[2] = fmaf(M[40], D[64], L[2]);
	L[15] *= T(5.000000000e-01);
	L[2] *= T(5.000000000e-01);
	L[15] = fmaf(M[1], D[25], L[15]);
	L[2] = fmaf(M[33], D[53], L[2]);
	L[15] = fmaf(M[14], D[69], L[15]);
	L[2] = fmaf(M[46], D[72], L[2]);
	L[15] = fmaf(M[5], D[43], L[15]);
	L[2] = fmaf(M[26], D[45], L[2]);
	L[15] = fmaf(M[6], D[44], L[15]);
	L[2] = fmaf(M[48], D[74], L[2]);
	L[15] = fmaf(M[0], D[15], L[15]);
	L[2] = fmaf(M[19], D[33], L[2]);
	L[15] = fmaf(M[8], D[48], L[15]);
	L[2] = fmaf(M[29], D[48], L[2]);
	L[15] = fmaf(M[2], D[28], L[15]);
	L[2] = fmaf(M[10], D[21], L[2]);
	L[15] = fmaf(M[3], D[29], L[15]);
	L[2] = fmaf(M[22], D[39], L[2]);
	L[16] *= T(6.000000000e+00);
	L[2] = fmaf(M[31], D[51], L[2]);
	L[16] = fmaf(M[10], D[62], L[16]);
	L[2] = fmaf(M[16], D[30], L[2]);
	L[16] = fmaf(M[19], D[80], L[16]);
	L[2] = fmaf(M[21], D[38], L[2]);
	L[16] = fmaf(M[16], D[77], L[16]);
	L[2] = fmaf(M[39], D[63], L[2]);
	L[16] *= T(3.333333333e-01);
	L[2] *= T(6.666666667e-01);
	L[16] = fmaf(M[9], D[52], L[16]);
	L[2] = fmaf(M[42], D[67], L[2]);
	L[16] = fmaf(M[11], D[66], L[16]);
	L[2] = fmaf(M[23], D[41], L[2]);
	L[16] = fmaf(M[12], D[67], L[16]);
	L[2] = fmaf(M[43], D[68], L[2]);
	L[16] = fmaf(M[18], D[79], L[16]);
	L[2] = fmaf(M[47], D[73], L[2]);
	L[16] = fmaf(M[7], D[50], L[16]);
	L[2] = fmaf(M[32], D[52], L[2]);
	L[16] = fmaf(M[17], D[78], L[16]);
	L[2] = fmaf(M[25], D[43], L[2]);
	L[16] = fmaf(M[4], D[41], L[16]);
	L[2] *= T(5.000000000e-01);
	L[16] = fmaf(M[13], D[71], L[16]);
	L[2] = fmaf(M[28], D[47], L[2]);
	L[16] = fmaf(M[15], D[73], L[16]);
	L[2] = fmaf(M[24], D[42], L[2]);
	L[16] *= T(5.000000000e-01);
	L[2] = fmaf(M[11], D[23], L[2]);
	L[16] = fmaf(M[1], D[26], L[16]);
	L[2] = fmaf(M[4], D[11], L[2]);
	L[16] = fmaf(M[14], D[72], L[16]);
	L[2] = fmaf(M[27], D[46], L[2]);
	L[16] = fmaf(M[5], D[45], L[16]);
	L[2] = fmaf(M[13], D[26], L[2]);
	L[16] = fmaf(M[6], D[46], L[16]);
	L[2] = fmaf(M[12], D[24], L[2]);
	L[16] = fmaf(M[0], D[16], L[16]);
	L[2] = fmaf(M[9], D[18], L[2]);
	L[16] = fmaf(M[8], D[51], L[16]);
	L[2] = fmaf(M[15], D[28], L[2]);
	L[16] = fmaf(M[2], D[30], L[16]);
	L[2] = fmaf(M[18], D[32], L[2]);
	L[16] = fmaf(M[3], D[31], L[16]);
	L[2] = fmaf(M[17], D[31], L[2]);
	L[17] *= T(6.000000000e+00);
	L[2] = fmaf(M[7], D[16], L[2]);
	L[17] = fmaf(M[10], D[63], L[17]);
	L[2] *= T(5.000000000e-01);
	L[17] = fmaf(M[19], D[81], L[17]);
	L[2] = fmaf(M[3], D[8], L[2]);
	L[17] = fmaf(M[16], D[78], L[17]);
	L[2] = fmaf(M[2], D[7], L[2]);
	L[17] *= T(3.333333333e-01);
	L[2] = fmaf(M[8], D[17], L[2]);
	L[17] = fmaf(M[9], D[53], L[17]);
	L[2] = fmaf(M[1], D[5], L[2]);
	L[17] = fmaf(M[11], D[67], L[17]);
	L[2] = fmaf(M[6], D[14], L[2]);
	L[17] = fmaf(M[12], D[68], L[17]);
	L[2] = fmaf(M[5], D[13], L[2]);
	L[17] = fmaf(M[18], D[80], L[17]);
	L[2] = fmaf(M[14], D[27], L[2]);
	L[17] = fmaf(M[7], D[51], L[17]);
	L[2] = fmaf(M[0], D[2], L[2]);
	L[17] = fmaf(M[17], D[79], L[17]);
	L[3] *= T(1.200000000e+02);
	L[17] = fmaf(M[4], D[42], L[17]);
	L[3] = fmaf(M[35], D[58], L[3]);
	L[17] = fmaf(M[13], D[72], L[17]);
	L[3] = fmaf(M[50], D[78], L[3]);
	L[17] = fmaf(M[15], D[74], L[17]);
	L[3] = fmaf(M[55], D[83], L[3]);
	L[17] *= T(5.000000000e-01);
	L[3] *= T(2.000000000e-01);
	L[17] = fmaf(M[1], D[27], L[17]);
	L[3] = fmaf(M[51], D[79], L[3]);
	L[17] = fmaf(M[14], D[73], L[17]);
	L[3] = fmaf(M[45], D[72], L[3]);
	L[17] = fmaf(M[5], D[46], L[17]);
	L[3] = fmaf(M[49], D[76], L[3]);
	L[17] = fmaf(M[6], D[47], L[17]);
	L[3] = fmaf(M[30], D[51], L[3]);
	L[17] = fmaf(M[0], D[17], L[17]);
	L[3] = fmaf(M[54], D[82], L[3]);
	L[17] = fmaf(M[8], D[52], L[17]);
	L[3] = fmaf(M[20], D[37], L[3]);
	L[17] = fmaf(M[2], D[31], L[17]);
	L[3] = fmaf(M[36], D[60], L[3]);
	L[17] = fmaf(M[3], D[32], L[17]);
	L[3] = fmaf(M[37], D[61], L[3]);
	L[18] *= T(6.000000000e+00);
	L[3] = fmaf(M[34], D[55], L[3]);
	L[18] = fmaf(M[10], D[64], L[18]);
	L[3] *= T(5.000000000e-01);
	L[18] = fmaf(M[19], D[82], L[18]);
	L[3] = fmaf(M[38], D[63], L[3]);
	L[18] = fmaf(M[16], D[79], L[18]);
	L[3] = fmaf(M[44], D[70], L[3]);
	L[18] *= T(3.333333333e-01);
	L[3] = fmaf(M[53], D[81], L[3]);
	L[18] = fmaf(M[9], D[54], L[18]);
	L[3] = fmaf(M[52], D[80], L[3]);
	L[18] = fmaf(M[11], D[68], L[18]);
	L[3] = fmaf(M[41], D[67], L[3]);
	L[18] = fmaf(M[12], D[69], L[18]);
	L[3] = fmaf(M[40], D[65], L[3]);
	L[18] = fmaf(M[18], D[81], L[18]);
	L[3] *= T(5.000000000e-01);
	L[18] = fmaf(M[7], D[52], L[18]);
	L[3] = fmaf(M[33], D[54], L[3]);
	L[18] = fmaf(M[17], D[80], L[18]);
	L[3] = fmaf(M[46], D[73], L[3]);
	L[18] = fmaf(M[4], D[43], L[18]);
	L[3] = fmaf(M[26], D[46], L[3]);
	L[18] = fmaf(M[13], D[73], L[18]);
	L[3] = fmaf(M[48], D[75], L[3]);
	L[18] = fmaf(M[15], D[75], L[18]);
	L[3] = fmaf(M[19], D[34], L[3]);
	L[18] *= T(5.000000000e-01);
	L[3] = fmaf(M[29], D[49], L[3]);
	L[18] = fmaf(M[1], D[28], L[18]);
	L[3] = fmaf(M[10], D[22], L[3]);
	L[18] = fmaf(M[14], D[74], L[18]);
	L[3] = fmaf(M[22], D[40], L[3]);
	L[18] = fmaf(M[5], D[47], L[18]);
	L[3] = fmaf(M[31], D[52], L[3]);
	L[18] = fmaf(M[6], D[48], L[18]);
	L[3] = fmaf(M[16], D[31], L[3]);
	L[18] = fmaf(M[0], D[18], L[18]);
	L[3] = fmaf(M[21], D[39], L[3]);
	L[18] = fmaf(M[8], D[53], L[18]);
	L[3] = fmaf(M[39], D[64], L[3]);
	L[18] = fmaf(M[2], D[32], L[18]);
	L[3] *= T(6.666666667e-01);
	L[18] = fmaf(M[3], D[33], L[18]);
	L[3] = fmaf(M[42], D[68], L[3]);
	L[19] *= T(6.000000000e+00);
	L[3] = fmaf(M[23], D[42], L[3]);
	L[19] = fmaf(M[10], D[65], L[19]);
	L[3] = fmaf(M[43], D[69], L[3]);
	L[19] = fmaf(M[19], D[83], L[19]);
	L[3] = fmaf(M[47], D[74], L[3]);
	L[19] = fmaf(M[16], D[80], L[19]);
	L[3] = fmaf(M[32], D[53], L[3]);
	L[19] *= T(3.333333333e-01);
	L[3] = fmaf(M[25], D[44], L[3]);
	L[19] = fmaf(M[9], D[55], L[19]);
	L[3] *= T(5.000000000e-01);
	L[19] = fmaf(M[11], D[69], L[19]);
	L[3] = fmaf(M[28], D[48], L[3]);
	L[19] = fmaf(M[12], D[70], L[19]);
	L[3] = fmaf(M[24], D[43], L[3]);
	L[19] = fmaf(M[18], D[82], L[19]);
	L[3] = fmaf(M[11], D[24], L[3]);
	L[19] = fmaf(M[7], D[53], L[19]);
	L[3] = fmaf(M[4], D[12], L[3]);
	L[19] = fmaf(M[17], D[81], L[19]);
	L[3] = fmaf(M[27], D[47], L[3]);
	L[19] = fmaf(M[4], D[44], L[19]);
	L[3] = fmaf(M[13], D[27], L[3]);
	L[19] = fmaf(M[13], D[74], L[19]);
	L[3] = fmaf(M[12], D[25], L[3]);
	L[19] = fmaf(M[15], D[76], L[19]);
	L[3] = fmaf(M[9], D[19], L[3]);
	L[19] *= T(5.000000000e-01);
	L[3] = fmaf(M[15], D[29], L[3]);
	L[19] = fmaf(M[1], D[29], L[19]);
	L[3] = fmaf(M[18], D[33], L[3]);
	L[19] = fmaf(M[14], D[75], L[19]);
	L[3] = fmaf(M[17], D[32], L[3]);
	L[19] = fmaf(M[5], D[48], L[19]);
	L[3] = fmaf(M[7], D[17], L[3]);
	L[19] = fmaf(M[6], D[49], L[19]);
	L[3] *= T(5.000000000e-01);
	L[19] = fmaf(M[0], D[19], L[19]);
	L[3] = fmaf(M[3], D[9], L[3]);
	L[19] = fmaf(M[8], D[54], L[19]);
	L[3] = fmaf(M[2], D[8], L[3]);
	L[19] = fmaf(M[2], D[33], L[19]);
	L[3] = fmaf(M[8], D[18], L[3]);
	L[19] = fmaf(M[3], D[34], L[19]);
	L[3] = fmaf(M[1], D[6], L[3]);
	L[20] *= T(2.000000000e+00);
	L[3] = fmaf(M[6], D[15], L[3]);
	L[20] = fmaf(M[9], D[61], L[20]);
	L[3] = fmaf(M[5], D[14], L[3]);
	L[20] = fmaf(M[7], D[59], L[20]);
	L[3] = fmaf(M[14], D[28], L[3]);
	L[20] = fmaf(M[4], D[56], L[20]);
	L[3] = fmaf(M[0], D[3], L[3]);
	L[20] *= T(5.000000000e-01);
	L[4] *= T(2.400000000e+01);
	L[20] = fmaf(M[0], D[20], L[20]);
	L[4] = fmaf(M[20], D[56], L[4]);
	L[20] = fmaf(M[3], D[37], L[20]);
	L[4] = fmaf(M[34], D[70], L[4]);
	L[20] = fmaf(M[2], D[36], L[20]);
	L[4] = fmaf(M[30], D[66], L[4]);
	L[20] = fmaf(M[8], D[60], L[20]);
	L[4] *= T(2.500000000e-01);
	L[20] = fmaf(M[1], D[35], L[20]);
	L[4] = fmaf(M[21], D[57], L[4]);
	L[20] = fmaf(M[6], D[58], L[20]);
	L[4] = fmaf(M[19], D[44], L[4]);
	L[20] = fmaf(M[5], D[57], L[20]);
	L[4] = fmaf(M[22], D[58], L[4]);
	L[21] *= T(2.000000000e+00);
	L[4] = fmaf(M[10], D[35], L[4]);
	L[21] = fmaf(M[9], D[64], L[21]);
	L[4] = fmaf(M[26], D[62], L[4]);
	L[21] = fmaf(M[7], D[62], L[21]);
	L[4] = fmaf(M[33], D[69], L[4]);
	L[21] = fmaf(M[4], D[57], L[21]);
	L[4] = fmaf(M[29], D[65], L[4]);
	L[21] *= T(5.000000000e-01);
	L[4] = fmaf(M[16], D[41], L[4]);
	L[21] = fmaf(M[0], D[21], L[21]);
	L[4] = fmaf(M[31], D[67], L[4]);
	L[21] = fmaf(M[3], D[39], L[21]);
	L[4] *= T(6.666666667e-01);
	L[21] = fmaf(M[2], D[38], L[21]);
	L[4] = fmaf(M[32], D[68], L[4]);
	L[21] = fmaf(M[8], D[63], L[21]);
	L[4] = fmaf(M[25], D[61], L[4]);
	L[21] = fmaf(M[1], D[36], L[21]);
	L[4] = fmaf(M[23], D[59], L[4]);
	L[21] = fmaf(M[6], D[60], L[21]);
	L[4] *= T(5.000000000e-01);
	L[21] = fmaf(M[5], D[59], L[21]);
	L[4] = fmaf(M[15], D[40], L[4]);
	L[22] *= T(2.000000000e+00);
	L[4] = fmaf(M[11], D[36], L[4]);
	L[22] = fmaf(M[9], D[65], L[22]);
	L[4] = fmaf(M[12], D[37], L[4]);
	L[22] = fmaf(M[7], D[63], L[22]);
	L[4] = fmaf(M[4], D[20], L[4]);
	L[22] = fmaf(M[4], D[58], L[22]);
	L[4] = fmaf(M[24], D[60], L[4]);
	L[22] *= T(5.000000000e-01);
	L[4] = fmaf(M[27], D[63], L[4]);
	L[22] = fmaf(M[0], D[22], L[22]);
	L[4] = fmaf(M[13], D[38], L[4]);
	L[22] = fmaf(M[3], D[40], L[22]);
	L[4] = fmaf(M[28], D[64], L[4]);
	L[22] = fmaf(M[2], D[39], L[22]);
	L[4] = fmaf(M[17], D[42], L[4]);
	L[22] = fmaf(M[8], D[64], L[22]);
	L[4] = fmaf(M[7], D[23], L[4]);
	L[22] = fmaf(M[1], D[37], L[22]);
	L[4] = fmaf(M[18], D[43], L[4]);
	L[22] = fmaf(M[6], D[61], L[22]);
	L[4] = fmaf(M[9], D[25], L[4]);
	L[22] = fmaf(M[5], D[60], L[22]);
	L[4] *= T(5.000000000e-01);
	L[23] *= T(2.000000000e+00);
	L[4] = fmaf(M[14], D[39], L[4]);
	L[23] = fmaf(M[9], D[68], L[23]);
	L[4] = fmaf(M[5], D[21], L[4]);
	L[23] = fmaf(M[7], D[66], L[23]);
	L[4] = fmaf(M[0], D[4], L[4]);
	L[23] = fmaf(M[4], D[59], L[23]);
	L[4] = fmaf(M[6], D[22], L[4]);
	L[23] *= T(5.000000000e-01);
	L[4] = fmaf(M[1], D[10], L[4]);
	L[23] = fmaf(M[0], D[23], L[23]);
	L[4] = fmaf(M[8], D[24], L[4]);
	L[23] = fmaf(M[3], D[42], L[23]);
	L[4] = fmaf(M[2], D[11], L[4]);
	L[23] = fmaf(M[2], D[41], L[23]);
	L[4] = fmaf(M[3], D[12], L[4]);
	L[23] = fmaf(M[8], D[67], L[23]);
	L[5] *= T(2.400000000e+01);
	L[23] = fmaf(M[1], D[38], L[23]);
	L[5] = fmaf(M[20], D[57], L[5]);
	L[23] = fmaf(M[6], D[63], L[23]);
	L[5] = fmaf(M[34], D[75], L[5]);
	L[23] = fmaf(M[5], D[62], L[23]);
	L[5] = fmaf(M[30], D[71], L[5]);
	L[24] *= T(2.000000000e+00);
	L[5] *= T(2.500000000e-01);
	L[24] = fmaf(M[9], D[69], L[24]);
	L[5] = fmaf(M[21], D[59], L[5]);
	L[24] = fmaf(M[7], D[67], L[24]);
	L[5] = fmaf(M[19], D[48], L[5]);
	L[24] = fmaf(M[4], D[60], L[24]);
	L[5] = fmaf(M[22], D[60], L[5]);
	L[24] *= T(5.000000000e-01);
	L[5] = fmaf(M[10], D[36], L[5]);
	L[24] = fmaf(M[0], D[24], L[24]);
	L[5] = fmaf(M[26], D[66], L[5]);
	L[24] = fmaf(M[3], D[43], L[24]);
	L[5] = fmaf(M[33], D[74], L[5]);
	L[24] = fmaf(M[2], D[42], L[24]);
	L[5] = fmaf(M[29], D[69], L[5]);
	L[24] = fmaf(M[8], D[68], L[24]);
	L[5] = fmaf(M[16], D[45], L[5]);
	L[24] = fmaf(M[1], D[39], L[24]);
	L[5] = fmaf(M[31], D[72], L[5]);
	L[24] = fmaf(M[6], D[64], L[24]);
	L[5] *= T(6.666666667e-01);
	L[24] = fmaf(M[5], D[63], L[24]);
	L[5] = fmaf(M[32], D[73], L[5]);
	L[25] *= T(2.000000000e+00);
	L[5] = fmaf(M[25], D[64], L[5]);
	L[25] = fmaf(M[9], D[70], L[25]);
	L[5] = fmaf(M[23], D[62], L[5]);
	L[25] = fmaf(M[7], D[68], L[25]);
	L[5] *= T(5.000000000e-01);
	L[25] = fmaf(M[4], D[61], L[25]);
	L[5] = fmaf(M[15], D[43], L[5]);
	L[25] *= T(5.000000000e-01);
	L[5] = fmaf(M[11], D[38], L[5]);
	L[25] = fmaf(M[0], D[25], L[25]);
	L[5] = fmaf(M[12], D[39], L[5]);
	L[25] = fmaf(M[3], D[44], L[25]);
	L[5] = fmaf(M[4], D[21], L[5]);
	L[25] = fmaf(M[2], D[43], L[25]);
	L[5] = fmaf(M[24], D[63], L[5]);
	L[25] = fmaf(M[8], D[69], L[25]);
	L[5] = fmaf(M[27], D[67], L[5]);
	L[25] = fmaf(M[1], D[40], L[25]);
	L[5] = fmaf(M[13], D[41], L[5]);
	L[25] = fmaf(M[6], D[65], L[25]);
	L[5] = fmaf(M[28], D[68], L[5]);
	L[25] = fmaf(M[5], D[64], L[25]);
	L[5] = fmaf(M[17], D[46], L[5]);
	L[26] *= T(2.000000000e+00);
	L[5] = fmaf(M[7], D[26], L[5]);
	L[26] = fmaf(M[9], D[73], L[26]);
	L[5] = fmaf(M[18], D[47], L[5]);
	L[26] = fmaf(M[7], D[71], L[26]);
	L[5] = fmaf(M[9], D[28], L[5]);
	L[26] = fmaf(M[4], D[62], L[26]);
	L[5] *= T(5.000000000e-01);
	L[26] *= T(5.000000000e-01);
	L[5] = fmaf(M[14], D[42], L[5]);
	L[26] = fmaf(M[0], D[26], L[26]);
	L[5] = fmaf(M[5], D[23], L[5]);
	L[26] = fmaf(M[3], D[46], L[26]);
	L[5] = fmaf(M[0], D[5], L[5]);
	L[26] = fmaf(M[2], D[45], L[26]);
	L[5] = fmaf(M[6], D[24], L[5]);
	L[26] = fmaf(M[8], D[72], L[26]);
	L[5] = fmaf(M[1], D[11], L[5]);
	L[26] = fmaf(M[1], D[41], L[26]);
	L[5] = fmaf(M[8], D[27], L[5]);
	L[26] = fmaf(M[6], D[67], L[26]);
	L[5] = fmaf(M[2], D[13], L[5]);
	L[26] = fmaf(M[5], D[66], L[26]);
	L[5] = fmaf(M[3], D[14], L[5]);
	L[27] *= T(2.000000000e+00);
	L[6] *= T(2.400000000e+01);
	L[27] = fmaf(M[9], D[74], L[27]);
	L[6] = fmaf(M[20], D[58], L[6]);
	L[27] = fmaf(M[7], D[72], L[27]);
	L[6] = fmaf(M[34], D[76], L[6]);
	L[27] = fmaf(M[4], D[63], L[27]);
	L[6] = fmaf(M[30], D[72], L[6]);
	L[27] *= T(5.000000000e-01);
	L[6] *= T(2.500000000e-01);
	L[27] = fmaf(M[0], D[27], L[27]);
	L[6] = fmaf(M[21], D[60], L[6]);
	L[27] = fmaf(M[3], D[47], L[27]);
	L[6] = fmaf(M[19], D[49], L[6]);
	L[27] = fmaf(M[2], D[46], L[27]);
	L[6] = fmaf(M[22], D[61], L[6]);
	L[27] = fmaf(M[8], D[73], L[27]);
	L[6] = fmaf(M[10], D[37], L[6]);
	L[27] = fmaf(M[1], D[42], L[27]);
	L[6] = fmaf(M[26], D[67], L[6]);
	L[27] = fmaf(M[6], D[68], L[27]);
	L[6] = fmaf(M[33], D[75], L[6]);
	L[27] = fmaf(M[5], D[67], L[27]);
	L[6] = fmaf(M[29], D[70], L[6]);
	L[28] *= T(2.000000000e+00);
	L[6] = fmaf(M[16], D[46], L[6]);
	L[28] = fmaf(M[9], D[75], L[28]);
	L[6] = fmaf(M[31], D[73], L[6]);
	L[28] = fmaf(M[7], D[73], L[28]);
	L[6] *= T(6.666666667e-01);
	L[28] = fmaf(M[4], D[64], L[28]);
	L[6] = fmaf(M[32], D[74], L[6]);
	L[28] *= T(5.000000000e-01);
	L[6] = fmaf(M[25], D[65], L[6]);
	L[28] = fmaf(M[0], D[28], L[28]);
	L[6] = fmaf(M[23], D[63], L[6]);
	L[28] = fmaf(M[3], D[48], L[28]);
	L[6] *= T(5.000000000e-01);
	L[28] = fmaf(M[2], D[47], L[28]);
	L[6] = fmaf(M[15], D[44], L[6]);
	L[28] = fmaf(M[8], D[74], L[28]);
	L[6] = fmaf(M[11], D[39], L[6]);
	L[28] = fmaf(M[1], D[43], L[28]);
	L[6] = fmaf(M[12], D[40], L[6]);
	L[28] = fmaf(M[6], D[69], L[28]);
	L[6] = fmaf(M[4], D[22], L[6]);
	L[28] = fmaf(M[5], D[68], L[28]);
	L[6] = fmaf(M[24], D[64], L[6]);
	L[29] *= T(2.000000000e+00);
	L[6] = fmaf(M[27], D[68], L[6]);
	L[29] = fmaf(M[9], D[76], L[29]);
	L[6] = fmaf(M[13], D[42], L[6]);
	L[29] = fmaf(M[7], D[74], L[29]);
	L[6] = fmaf(M[28], D[69], L[6]);
	L[29] = fmaf(M[4], D[65], L[29]);
	L[6] = fmaf(M[17], D[47], L[6]);
	L[29] *= T(5.000000000e-01);
	L[6] = fmaf(M[7], D[27], L[6]);
	L[29] = fmaf(M[0], D[29], L[29]);
	L[6] = fmaf(M[18], D[48], L[6]);
	L[29] = fmaf(M[3], D[49], L[29]);
	L[6] = fmaf(M[9], D[29], L[6]);
	L[29] = fmaf(M[2], D[48], L[29]);
	L[6] *= T(5.000000000e-01);
	L[29] = fmaf(M[8], D[75], L[29]);
	L[6] = fmaf(M[14], D[43], L[6]);
	L[29] = fmaf(M[1], D[44], L[29]);
	L[6] = fmaf(M[5], D[24], L[6]);
	L[29] = fmaf(M[6], D[70], L[29]);
	L[6] = fmaf(M[0], D[6], L[6]);
	L[29] = fmaf(M[5], D[69], L[29]);
	L[6] = fmaf(M[6], D[25], L[6]);
	L[30] *= T(2.000000000e+00);
	L[6] = fmaf(M[1], D[12], L[6]);
	L[30] = fmaf(M[9], D[79], L[30]);
	L[6] = fmaf(M[8], D[28], L[6]);
	L[30] = fmaf(M[7], D[77], L[30]);
	L[6] = fmaf(M[2], D[14], L[6]);
	L[30] = fmaf(M[4], D[66], L[30]);
	L[6] = fmaf(M[3], D[15], L[6]);
	L[30] *= T(5.000000000e-01);
	L[7] *= T(2.400000000e+01);
	L[30] = fmaf(M[0], D[30], L[30]);
	L[7] = fmaf(M[20], D[59], L[7]);
	L[30] = fmaf(M[3], D[51], L[30]);
	L[7] = fmaf(M[34], D[81], L[7]);
	L[30] = fmaf(M[2], D[50], L[30]);
	L[7] = fmaf(M[30], D[77], L[7]);
	L[30] = fmaf(M[8], D[78], L[30]);
	L[7] *= T(2.500000000e-01);
	L[30] = fmaf(M[1], D[45], L[30]);
	L[7] = fmaf(M[21], D[62], L[7]);
	L[30] = fmaf(M[6], D[72], L[30]);
	L[7] = fmaf(M[19], D[53], L[7]);
	L[30] = fmaf(M[5], D[71], L[30]);
	L[7] = fmaf(M[22], D[63], L[7]);
	L[31] *= T(2.000000000e+00);
	L[7] = fmaf(M[10], D[38], L[7]);
	L[31] = fmaf(M[9], D[80], L[31]);
	L[7] = fmaf(M[26], D[71], L[7]);
	L[31] = fmaf(M[7], D[78], L[31]);
	L[7] = fmaf(M[33], D[80], L[7]);
	L[31] = fmaf(M[4], D[67], L[31]);
	L[7] = fmaf(M[29], D[74], L[7]);
	L[31] *= T(5.000000000e-01);
	L[7] = fmaf(M[16], D[50], L[7]);
	L[31] = fmaf(M[0], D[31], L[31]);
	L[7] = fmaf(M[31], D[78], L[7]);
	L[31] = fmaf(M[3], D[52], L[31]);
	L[7] *= T(6.666666667e-01);
	L[31] = fmaf(M[2], D[51], L[31]);
	L[7] = fmaf(M[32], D[79], L[7]);
	L[31] = fmaf(M[8], D[79], L[31]);
	L[7] = fmaf(M[25], D[68], L[7]);
	L[31] = fmaf(M[1], D[46], L[31]);
	L[7] = fmaf(M[23], D[66], L[7]);
	L[31] = fmaf(M[6], D[73], L[31]);
	L[7] *= T(5.000000000e-01);
	L[31] = fmaf(M[5], D[72], L[31]);
	L[7] = fmaf(M[15], D[47], L[7]);
	L[32] *= T(2.000000000e+00);
	L[7] = fmaf(M[11], D[41], L[7]);
	L[32] = fmaf(M[9], D[81], L[32]);
	L[7] = fmaf(M[12], D[42], L[7]);
	L[32] = fmaf(M[7], D[79], L[32]);
	L[7] = fmaf(M[4], D[23], L[7]);
	L[32] = fmaf(M[4], D[68], L[32]);
	L[7] = fmaf(M[24], D[67], L[7]);
	L[32] *= T(5.000000000e-01);
	L[7] = fmaf(M[27], D[72], L[7]);
	L[32] = fmaf(M[0], D[32], L[32]);
	L[7] = fmaf(M[13], D[45], L[7]);
	L[32] = fmaf(M[3], D[53], L[32]);
	L[7] = fmaf(M[28], D[73], L[7]);
	L[32] = fmaf(M[2], D[52], L[32]);
	L[7] = fmaf(M[17], D[51], L[7]);
	L[32] = fmaf(M[8], D[80], L[32]);
	L[7] = fmaf(M[7], D[30], L[7]);
	L[32] = fmaf(M[1], D[47], L[32]);
	L[7] = fmaf(M[18], D[52], L[7]);
	L[32] = fmaf(M[6], D[74], L[32]);
	L[7] = fmaf(M[9], D[32], L[7]);
	L[32] = fmaf(M[5], D[73], L[32]);
	L[7] *= T(5.000000000e-01);
	L[33] *= T(2.000000000e+00);
	L[7] = fmaf(M[14], D[46], L[7]);
	L[33] = fmaf(M[9], D[82], L[33]);
	L[7] = fmaf(M[5], D[26], L[7]);
	L[33] = fmaf(M[7], D[80], L[33]);
	L[7] = fmaf(M[0], D[7], L[7]);
	L[33] = fmaf(M[4], D[69], L[33]);
	L[7] = fmaf(M[6], D[27], L[7]);
	L[33] *= T(5.000000000e-01);
	L[7] = fmaf(M[1], D[13], L[7]);
	L[33] = fmaf(M[0], D[33], L[33]);
	L[7] = fmaf(M[8], D[31], L[7]);
	L[33] = fmaf(M[3], D[54], L[33]);
	L[7] = fmaf(M[2], D[16], L[7]);
	L[33] = fmaf(M[2], D[53], L[33]);
	L[7] = fmaf(M[3], D[17], L[7]);
	L[33] = fmaf(M[8], D[81], L[33]);
	L[8] *= T(2.400000000e+01);
	L[33] = fmaf(M[1], D[48], L[33]);
	L[8] = fmaf(M[20], D[60], L[8]);
	L[33] = fmaf(M[6], D[75], L[33]);
	L[8] = fmaf(M[34], D[82], L[8]);
	L[33] = fmaf(M[5], D[74], L[33]);
	L[8] = fmaf(M[30], D[78], L[8]);
	L[34] *= T(2.000000000e+00);
	L[8] *= T(2.500000000e-01);
	L[34] = fmaf(M[9], D[83], L[34]);
	L[8] = fmaf(M[21], D[63], L[8]);
	L[34] = fmaf(M[7], D[81], L[34]);
	L[8] = fmaf(M[19], D[54], L[8]);
	L[34] = fmaf(M[4], D[70], L[34]);
	L[8] = fmaf(M[22], D[64], L[8]);
	L[34] *= T(5.000000000e-01);
	L[8] = fmaf(M[10], D[39], L[8]);
	L[34] = fmaf(M[0], D[34], L[34]);
	L[8] = fmaf(M[26], D[72], L[8]);
	L[34] = fmaf(M[3], D[55], L[34]);
	L[8] = fmaf(M[33], D[81], L[8]);
	L[34] = fmaf(M[2], D[54], L[34]);
	L[8] = fmaf(M[29], D[75], L[8]);
	L[34] = fmaf(M[8], D[82], L[34]);
	L[8] = fmaf(M[16], D[51], L[8]);
	L[34] = fmaf(M[1], D[49], L[34]);
	L[8] = fmaf(M[31], D[79], L[8]);
	L[34] = fmaf(M[6], D[76], L[34]);
	L[8] *= T(6.666666667e-01);
	L[34] = fmaf(M[5], D[75], L[34]);
	L[8] = fmaf(M[32], D[80], L[8]);
	L[35] = fmaf(M[0], D[35], L[35]);
	L[8] = fmaf(M[25], D[69], L[8]);
	L[35] = fmaf(M[3], D[58], L[35]);
	L[8] = fmaf(M[23], D[67], L[8]);
	L[35] = fmaf(M[2], D[57], L[35]);
	L[8] *= T(5.000000000e-01);
	L[35] = fmaf(M[1], D[56], L[35]);
	L[8] = fmaf(M[15], D[48], L[8]);
	L[36] = fmaf(M[0], D[36], L[36]);
	L[8] = fmaf(M[11], D[42], L[8]);
	L[36] = fmaf(M[3], D[60], L[36]);
	L[8] = fmaf(M[12], D[43], L[8]);
	L[36] = fmaf(M[2], D[59], L[36]);
	L[8] = fmaf(M[4], D[24], L[8]);
	L[36] = fmaf(M[1], D[57], L[36]);
	L[8] = fmaf(M[24], D[68], L[8]);
	L[37] = fmaf(M[0], D[37], L[37]);
	L[8] = fmaf(M[27], D[73], L[8]);
	L[37] = fmaf(M[3], D[61], L[37]);
	L[8] = fmaf(M[13], D[46], L[8]);
	L[37] = fmaf(M[2], D[60], L[37]);
	L[8] = fmaf(M[28], D[74], L[8]);
	L[37] = fmaf(M[1], D[58], L[37]);
	L[8] = fmaf(M[17], D[52], L[8]);
	L[38] = fmaf(M[0], D[38], L[38]);
	L[8] = fmaf(M[7], D[31], L[8]);
	L[38] = fmaf(M[3], D[63], L[38]);
	L[8] = fmaf(M[18], D[53], L[8]);
	L[38] = fmaf(M[2], D[62], L[38]);
	L[8] = fmaf(M[9], D[33], L[8]);
	L[38] = fmaf(M[1], D[59], L[38]);
	L[8] *= T(5.000000000e-01);
	L[39] = fmaf(M[0], D[39], L[39]);
	L[8] = fmaf(M[14], D[47], L[8]);
	L[39] = fmaf(M[3], D[64], L[39]);
	L[8] = fmaf(M[5], D[27], L[8]);
	L[39] = fmaf(M[2], D[63], L[39]);
	L[8] = fmaf(M[0], D[8], L[8]);
	L[39] = fmaf(M[1], D[60], L[39]);
	L[8] = fmaf(M[6], D[28], L[8]);
	L[40] = fmaf(M[0], D[40], L[40]);
	L[8] = fmaf(M[1], D[14], L[8]);
	L[40] = fmaf(M[3], D[65], L[40]);
	L[8] = fmaf(M[8], D[32], L[8]);
	L[40] = fmaf(M[2], D[64], L[40]);
	L[8] = fmaf(M[2], D[17], L[8]);
	L[40] = fmaf(M[1], D[61], L[40]);
	L[8] = fmaf(M[3], D[18], L[8]);
	L[41] = fmaf(M[0], D[41], L[41]);
	L[9] *= T(2.400000000e+01);
	L[41] = fmaf(M[3], D[67], L[41]);
	L[9] = fmaf(M[20], D[61], L[9]);
	L[41] = fmaf(M[2], D[66], L[41]);
	L[9] = fmaf(M[34], D[83], L[9]);
	L[41] = fmaf(M[1], D[62], L[41]);
	L[9] = fmaf(M[30], D[79], L[9]);
	L[42] = fmaf(M[0], D[42], L[42]);
	L[9] *= T(2.500000000e-01);
	L[42] = fmaf(M[3], D[68], L[42]);
	L[9] = fmaf(M[21], D[64], L[9]);
	L[42] = fmaf(M[2], D[67], L[42]);
	L[9] = fmaf(M[19], D[55], L[9]);
	L[42] = fmaf(M[1], D[63], L[42]);
	L[9] = fmaf(M[22], D[65], L[9]);
	L[43] = fmaf(M[0], D[43], L[43]);
	L[9] = fmaf(M[10], D[40], L[9]);
	L[43] = fmaf(M[3], D[69], L[43]);
	L[9] = fmaf(M[26], D[73], L[9]);
	L[43] = fmaf(M[2], D[68], L[43]);
	L[9] = fmaf(M[33], D[82], L[9]);
	L[43] = fmaf(M[1], D[64], L[43]);
	L[9] = fmaf(M[29], D[76], L[9]);
	L[44] = fmaf(M[0], D[44], L[44]);
	L[9] = fmaf(M[16], D[52], L[9]);
	L[44] = fmaf(M[3], D[70], L[44]);
	L[9] = fmaf(M[31], D[80], L[9]);
	L[44] = fmaf(M[2], D[69], L[44]);
	L[9] *= T(6.666666667e-01);
	L[44] = fmaf(M[1], D[65], L[44]);
	L[9] = fmaf(M[32], D[81], L[9]);
	L[45] = fmaf(M[0], D[45], L[45]);
	L[9] = fmaf(M[25], D[70], L[9]);
	L[45] = fmaf(M[3], D[72], L[45]);
	L[9] = fmaf(M[23], D[68], L[9]);
	L[45] = fmaf(M[2], D[71], L[45]);
	L[9] *= T(5.000000000e-01);
	L[45] = fmaf(M[1], D[66], L[45]);
	L[9] = fmaf(M[15], D[49], L[9]);
	L[46] = fmaf(M[0], D[46], L[46]);
	L[9] = fmaf(M[11], D[43], L[9]);
	L[46] = fmaf(M[3], D[73], L[46]);
	L[9] = fmaf(M[12], D[44], L[9]);
	L[46] = fmaf(M[2], D[72], L[46]);
	L[9] = fmaf(M[4], D[25], L[9]);
	L[46] = fmaf(M[1], D[67], L[46]);
	L[9] = fmaf(M[24], D[69], L[9]);
	L[47] = fmaf(M[0], D[47], L[47]);
	L[9] = fmaf(M[27], D[74], L[9]);
	L[47] = fmaf(M[3], D[74], L[47]);
	L[9] = fmaf(M[13], D[47], L[9]);
	L[47] = fmaf(M[2], D[73], L[47]);
	L[9] = fmaf(M[28], D[75], L[9]);
	L[47] = fmaf(M[1], D[68], L[47]);
	L[9] = fmaf(M[17], D[53], L[9]);
	L[48] = fmaf(M[0], D[48], L[48]);
	L[9] = fmaf(M[7], D[32], L[9]);
	L[48] = fmaf(M[3], D[75], L[48]);
	L[9] = fmaf(M[18], D[54], L[9]);
	L[48] = fmaf(M[2], D[74], L[48]);
	L[9] = fmaf(M[9], D[34], L[9]);
	L[48] = fmaf(M[1], D[69], L[48]);
	L[9] *= T(5.000000000e-01);
	L[49] = fmaf(M[0], D[49], L[49]);
	L[9] = fmaf(M[14], D[48], L[9]);
	L[49] = fmaf(M[3], D[76], L[49]);
	L[9] = fmaf(M[5], D[28], L[9]);
	L[49] = fmaf(M[2], D[75], L[49]);
	L[9] = fmaf(M[0], D[9], L[9]);
	L[49] = fmaf(M[1], D[70], L[49]);
	L[9] = fmaf(M[6], D[29], L[9]);
	L[50] = fmaf(M[0], D[50], L[50]);
	L[9] = fmaf(M[1], D[15], L[9]);
	L[50] = fmaf(M[3], D[78], L[50]);
	L[9] = fmaf(M[8], D[33], L[9]);
	L[50] = fmaf(M[2], D[77], L[50]);
	L[9] = fmaf(M[2], D[18], L[9]);
	L[50] = fmaf(M[1], D[71], L[50]);
	L[9] = fmaf(M[3], D[19], L[9]);
	L[51] = fmaf(M[0], D[51], L[51]);
	L[10] *= T(6.000000000e+00);
	L[51] = fmaf(M[3], D[79], L[51]);
	L[10] = fmaf(M[10], D[56], L[10]);
	L[51] = fmaf(M[2], D[78], L[51]);
	L[10] = fmaf(M[19], D[65], L[10]);
	L[51] = fmaf(M[1], D[72], L[51]);
	L[10] = fmaf(M[16], D[62], L[10]);
	L[52] = fmaf(M[0], D[52], L[52]);
	L[10] *= T(3.333333333e-01);
	L[52] = fmaf(M[3], D[80], L[52]);
	L[10] = fmaf(M[9], D[40], L[10]);
	L[52] = fmaf(M[2], D[79], L[52]);
	L[10] = fmaf(M[11], D[57], L[10]);
	L[52] = fmaf(M[1], D[73], L[52]);
	L[10] = fmaf(M[12], D[58], L[10]);
	L[53] = fmaf(M[0], D[53], L[53]);
	L[10] = fmaf(M[18], D[64], L[10]);
	L[53] = fmaf(M[3], D[81], L[53]);
	L[10] = fmaf(M[7], D[38], L[10]);
	L[53] = fmaf(M[2], D[80], L[53]);
	L[10] = fmaf(M[17], D[63], L[10]);
	L[53] = fmaf(M[1], D[74], L[53]);
	L[10] = fmaf(M[4], D[35], L[10]);
	L[54] = fmaf(M[0], D[54], L[54]);
	L[10] = fmaf(M[13], D[59], L[10]);
	L[54] = fmaf(M[3], D[82], L[54]);
	L[10] = fmaf(M[15], D[61], L[10]);
	L[54] = fmaf(M[2], D[81], L[54]);
	L[10] *= T(5.000000000e-01);
	L[54] = fmaf(M[1], D[75], L[54]);
	L[10] = fmaf(M[1], D[20], L[10]);
	L[55] = fmaf(M[0], D[55], L[55]);
	L[10] = fmaf(M[14], D[60], L[10]);
	L[55] = fmaf(M[3], D[83], L[55]);
	L[10] = fmaf(M[5], D[36], L[10]);
	L[55] = fmaf(M[2], D[82], L[55]);
	L[10] = fmaf(M[6], D[37], L[10]);
	L[55] = fmaf(M[1], D[76], L[55]);
	L[10] = fmaf(M[0], D[10], L[10]);
	L[56] = fmaf(M[0], D[56], L[56]);
	L[10] = fmaf(M[8], D[39], L[10]);
	L[57] = fmaf(M[0], D[57], L[57]);
	L[10] = fmaf(M[2], D[21], L[10]);
	L[58] = fmaf(M[0], D[58], L[58]);
	L[10] = fmaf(M[3], D[22], L[10]);
	L[59] = fmaf(M[0], D[59], L[59]);
	L[11] *= T(6.000000000e+00);
	L[60] = fmaf(M[0], D[60], L[60]);
	L[11] = fmaf(M[10], D[57], L[11]);
	L[61] = fmaf(M[0], D[61], L[61]);
	L[11] = fmaf(M[19], D[69], L[11]);
	L[62] = fmaf(M[0], D[62], L[62]);
	L[11] = fmaf(M[16], D[66], L[11]);
	L[63] = fmaf(M[0], D[63], L[63]);
	L[11] *= T(3.333333333e-01);
	L[64] = fmaf(M[0], D[64], L[64]);
	L[11] = fmaf(M[9], D[43], L[11]);
	L[65] = fmaf(M[0], D[65], L[65]);
	L[11] = fmaf(M[11], D[59], L[11]);
	L[66] = fmaf(M[0], D[66], L[66]);
	L[11] = fmaf(M[12], D[60], L[11]);
	L[67] = fmaf(M[0], D[67], L[67]);
	L[11] = fmaf(M[18], D[68], L[11]);
	L[68] = fmaf(M[0], D[68], L[68]);
	L[11] = fmaf(M[7], D[41], L[11]);
	L[69] = fmaf(M[0], D[69], L[69]);
	L[11] = fmaf(M[17], D[67], L[11]);
	L[70] = fmaf(M[0], D[70], L[70]);
	L[11] = fmaf(M[4], D[36], L[11]);
	L[71] = fmaf(M[0], D[71], L[71]);
	L[11] = fmaf(M[13], D[62], L[11]);
	L[72] = fmaf(M[0], D[72], L[72]);
	L[11] = fmaf(M[15], D[64], L[11]);
	L[73] = fmaf(M[0], D[73], L[73]);
	L[11] *= T(5.000000000e-01);
	L[74] = fmaf(M[0], D[74], L[74]);
	L[11] = fmaf(M[1], D[21], L[11]);
	L[75] = fmaf(M[0], D[75], L[75]);
	L[11] = fmaf(M[14], D[63], L[11]);
	L[76] = fmaf(M[0], D[76], L[76]);
	L[11] = fmaf(M[5], D[38], L[11]);
	L[77] = fmaf(M[0], D[77], L[77]);
	L[11] = fmaf(M[6], D[39], L[11]);
	L[78] = fmaf(M[0], D[78], L[78]);
	L[11] = fmaf(M[0], D[11], L[11]);
	L[79] = fmaf(M[0], D[79], L[79]);
	L[11] = fmaf(M[8], D[42], L[11]);
	L[80] = fmaf(M[0], D[80], L[80]);
	L[11] = fmaf(M[2], D[23], L[11]);
	L[81] = fmaf(M[0], D[81], L[81]);
	L[11] = fmaf(M[3], D[24], L[11]);
	L[82] = fmaf(M[0], D[82], L[82]);
	L[83] = fmaf(M[0], D[83], L[83]);
	return 1791 + do_phi * 119;
}


template<class T>
CUDA_EXPORT
tensor_sym<T, 6> P2M(array<T, NDIM>& X) {
	tensor_sym<T, 6> M;
	X[0] *= -T(1);
	X[1] *= -T(1);
	X[2] *= -T(1);
	M[0] = T(1);
	M[1] = X[0];
	M[2] = X[1];
	M[3] = X[2];
	M[9] = M[3] * M[3];
	M[8] = M[2] * M[3];
	M[7] = M[2] * M[2];
	M[6] = M[1] * M[3];
	M[5] = M[1] * M[2];
	M[4] = M[1] * M[1];
	M[19] = M[9] * M[3];
	M[18] = M[8] * M[3];
	M[17] = M[8] * M[2];
	M[16] = M[7] * M[2];
	M[15] = M[6] * M[3];
	M[14] = M[5] * M[3];
	M[13] = M[5] * M[2];
	M[12] = M[6] * M[1];
	M[11] = M[5] * M[1];
	M[10] = M[4] * M[1];
	M[34] = M[9] * M[9];
	M[33] = M[8] * M[9];
	M[32] = M[8] * M[8];
	M[31] = M[8] * M[7];
	M[30] = M[7] * M[7];
	M[29] = M[6] * M[9];
	M[28] = M[5] * M[9];
	M[27] = M[5] * M[8];
	M[26] = M[5] * M[7];
	M[25] = M[6] * M[6];
	M[24] = M[5] * M[6];
	M[23] = M[5] * M[5];
	M[22] = M[6] * M[4];
	M[21] = M[5] * M[4];
	M[20] = M[4] * M[4];
	M[55] = M[19] * M[9];
	M[54] = M[18] * M[9];
	M[53] = M[17] * M[9];
	M[52] = M[17] * M[8];
	M[51] = M[17] * M[7];
	M[50] = M[16] * M[7];
	M[49] = M[15] * M[9];
	M[48] = M[14] * M[9];
	M[47] = M[14] * M[8];
	M[46] = M[14] * M[7];
	M[45] = M[13] * M[7];
	M[44] = M[12] * M[9];
	M[43] = M[14] * M[6];
	M[42] = M[14] * M[5];
	M[41] = M[11] * M[7];
	M[40] = M[12] * M[6];
	M[39] = M[14] * M[4];
	M[38] = M[11] * M[5];
	M[37] = M[12] * M[4];
	M[36] = M[11] * M[4];
	M[35] = M[10] * M[4];
	return M;
}


template<class T>
CUDA_EXPORT
tensor_sym<T, 6> M2M(const tensor_sym<T,6>& Ma, array<T, NDIM>& X) {
	auto Mb = Ma;
	X[0] *= -T(1);
	X[1] *= -T(1);
	X[2] *= -T(1);
	T x[56];
	x[0] = T(1);
	x[1] = X[0];
	x[2] = X[1];
	x[3] = X[2];
	x[9] = x[3] * x[3];
	x[8] = x[2] * x[3];
	x[7] = x[2] * x[2];
	x[6] = x[1] * x[3];
	x[5] = x[1] * x[2];
	x[4] = x[1] * x[1];
	x[19] = x[9] * x[3];
	x[18] = x[8] * x[3];
	x[17] = x[8] * x[2];
	x[16] = x[7] * x[2];
	x[15] = x[6] * x[3];
	x[14] = x[5] * x[3];
	x[13] = x[5] * x[2];
	x[12] = x[6] * x[1];
	x[11] = x[5] * x[1];
	x[10] = x[4] * x[1];
	x[34] = x[9] * x[9];
	x[33] = x[8] * x[9];
	x[32] = x[8] * x[8];
	x[31] = x[8] * x[7];
	x[30] = x[7] * x[7];
	x[29] = x[6] * x[9];
	x[28] = x[5] * x[9];
	x[27] = x[5] * x[8];
	x[26] = x[5] * x[7];
	x[25] = x[6] * x[6];
	x[24] = x[5] * x[6];
	x[23] = x[5] * x[5];
	x[22] = x[6] * x[4];
	x[21] = x[5] * x[4];
	x[20] = x[4] * x[4];
	x[55] = x[19] * x[9];
	x[54] = x[18] * x[9];
	x[53] = x[17] * x[9];
	x[52] = x[17] * x[8];
	x[51] = x[17] * x[7];
	x[50] = x[16] * x[7];
	x[49] = x[15] * x[9];
	x[48] = x[14] * x[9];
	x[47] = x[14] * x[8];
	x[46] = x[14] * x[7];
	x[45] = x[13] * x[7];
	x[44] = x[12] * x[9];
	x[43] = x[14] * x[6];
	x[42] = x[14] * x[5];
	x[41] = x[11] * x[7];
	x[40] = x[12] * x[6];
	x[39] = x[14] * x[4];
	x[38] = x[11] * x[5];
	x[37] = x[12] * x[4];
	x[36] = x[11] * x[4];
	x[35] = x[10] * x[4];
	Mb[1] = fmaf( x[1], Ma[0], Mb[1]);
	Mb[2] = fmaf( x[2], Ma[0], Mb[2]);
	Mb[3] = fmaf( x[3], Ma[0], Mb[3]);
	Mb[4] *= T(5.000000000e-01);
	Mb[4] = fmaf( x[1], Ma[1], Mb[4]);
	Mb[4] *= T(2.000000000e+00);
	Mb[4] = fmaf( x[4], Ma[0], Mb[4]);
	Mb[5] = fmaf( x[5], Ma[0], Mb[5]);
	Mb[5] = fmaf( x[1], Ma[2], Mb[5]);
	Mb[5] = fmaf( x[2], Ma[1], Mb[5]);
	Mb[6] = fmaf( x[6], Ma[0], Mb[6]);
	Mb[6] = fmaf( x[1], Ma[3], Mb[6]);
	Mb[6] = fmaf( x[3], Ma[1], Mb[6]);
	Mb[7] *= T(5.000000000e-01);
	Mb[7] = fmaf( x[2], Ma[2], Mb[7]);
	Mb[7] *= T(2.000000000e+00);
	Mb[7] = fmaf( x[7], Ma[0], Mb[7]);
	Mb[8] = fmaf( x[8], Ma[0], Mb[8]);
	Mb[8] = fmaf( x[2], Ma[3], Mb[8]);
	Mb[8] = fmaf( x[3], Ma[2], Mb[8]);
	Mb[9] *= T(5.000000000e-01);
	Mb[9] = fmaf( x[3], Ma[3], Mb[9]);
	Mb[9] *= T(2.000000000e+00);
	Mb[9] = fmaf( x[9], Ma[0], Mb[9]);
	Mb[10] *= T(3.333333333e-01);
	Mb[10] = fmaf( x[4], Ma[1], Mb[10]);
	Mb[10] = fmaf( x[1], Ma[4], Mb[10]);
	Mb[10] *= T(3.000000000e+00);
	Mb[10] = fmaf( x[10], Ma[0], Mb[10]);
	Mb[11] *= T(5.000000000e-01);
	Mb[11] = fmaf( x[5], Ma[1], Mb[11]);
	Mb[11] = fmaf( x[1], Ma[5], Mb[11]);
	Mb[11] *= T(2.000000000e+00);
	Mb[11] = fmaf( x[11], Ma[0], Mb[11]);
	Mb[11] = fmaf( x[4], Ma[2], Mb[11]);
	Mb[11] = fmaf( x[2], Ma[4], Mb[11]);
	Mb[12] *= T(5.000000000e-01);
	Mb[12] = fmaf( x[6], Ma[1], Mb[12]);
	Mb[12] = fmaf( x[1], Ma[6], Mb[12]);
	Mb[12] *= T(2.000000000e+00);
	Mb[12] = fmaf( x[12], Ma[0], Mb[12]);
	Mb[12] = fmaf( x[4], Ma[3], Mb[12]);
	Mb[12] = fmaf( x[3], Ma[4], Mb[12]);
	Mb[13] *= T(5.000000000e-01);
	Mb[13] = fmaf( x[5], Ma[2], Mb[13]);
	Mb[13] = fmaf( x[2], Ma[5], Mb[13]);
	Mb[13] *= T(2.000000000e+00);
	Mb[13] = fmaf( x[13], Ma[0], Mb[13]);
	Mb[13] = fmaf( x[1], Ma[7], Mb[13]);
	Mb[13] = fmaf( x[7], Ma[1], Mb[13]);
	Mb[14] = fmaf( x[14], Ma[0], Mb[14]);
	Mb[14] = fmaf( x[5], Ma[3], Mb[14]);
	Mb[14] = fmaf( x[6], Ma[2], Mb[14]);
	Mb[14] = fmaf( x[1], Ma[8], Mb[14]);
	Mb[14] = fmaf( x[8], Ma[1], Mb[14]);
	Mb[14] = fmaf( x[2], Ma[6], Mb[14]);
	Mb[14] = fmaf( x[3], Ma[5], Mb[14]);
	Mb[15] *= T(5.000000000e-01);
	Mb[15] = fmaf( x[6], Ma[3], Mb[15]);
	Mb[15] = fmaf( x[3], Ma[6], Mb[15]);
	Mb[15] *= T(2.000000000e+00);
	Mb[15] = fmaf( x[15], Ma[0], Mb[15]);
	Mb[15] = fmaf( x[1], Ma[9], Mb[15]);
	Mb[15] = fmaf( x[9], Ma[1], Mb[15]);
	Mb[16] *= T(3.333333333e-01);
	Mb[16] = fmaf( x[7], Ma[2], Mb[16]);
	Mb[16] = fmaf( x[2], Ma[7], Mb[16]);
	Mb[16] *= T(3.000000000e+00);
	Mb[16] = fmaf( x[16], Ma[0], Mb[16]);
	Mb[17] *= T(5.000000000e-01);
	Mb[17] = fmaf( x[8], Ma[2], Mb[17]);
	Mb[17] = fmaf( x[2], Ma[8], Mb[17]);
	Mb[17] *= T(2.000000000e+00);
	Mb[17] = fmaf( x[17], Ma[0], Mb[17]);
	Mb[17] = fmaf( x[7], Ma[3], Mb[17]);
	Mb[17] = fmaf( x[3], Ma[7], Mb[17]);
	Mb[18] *= T(5.000000000e-01);
	Mb[18] = fmaf( x[8], Ma[3], Mb[18]);
	Mb[18] = fmaf( x[3], Ma[8], Mb[18]);
	Mb[18] *= T(2.000000000e+00);
	Mb[18] = fmaf( x[18], Ma[0], Mb[18]);
	Mb[18] = fmaf( x[2], Ma[9], Mb[18]);
	Mb[18] = fmaf( x[9], Ma[2], Mb[18]);
	Mb[19] *= T(3.333333333e-01);
	Mb[19] = fmaf( x[9], Ma[3], Mb[19]);
	Mb[19] = fmaf( x[3], Ma[9], Mb[19]);
	Mb[19] *= T(3.000000000e+00);
	Mb[19] = fmaf( x[19], Ma[0], Mb[19]);
	Mb[20] *= T(1.666666667e-01);
	Mb[20] = fmaf( x[4], Ma[4], Mb[20]);
	Mb[20] *= T(1.500000000e+00);
	Mb[20] = fmaf( x[10], Ma[1], Mb[20]);
	Mb[20] = fmaf( x[1], Ma[10], Mb[20]);
	Mb[20] *= T(4.000000000e+00);
	Mb[20] = fmaf( x[20], Ma[0], Mb[20]);
	Mb[21] *= T(3.333333333e-01);
	Mb[21] = fmaf( x[11], Ma[1], Mb[21]);
	Mb[21] = fmaf( x[4], Ma[5], Mb[21]);
	Mb[21] = fmaf( x[5], Ma[4], Mb[21]);
	Mb[21] = fmaf( x[1], Ma[11], Mb[21]);
	Mb[21] *= T(3.000000000e+00);
	Mb[21] = fmaf( x[21], Ma[0], Mb[21]);
	Mb[21] = fmaf( x[10], Ma[2], Mb[21]);
	Mb[21] = fmaf( x[2], Ma[10], Mb[21]);
	Mb[22] *= T(3.333333333e-01);
	Mb[22] = fmaf( x[12], Ma[1], Mb[22]);
	Mb[22] = fmaf( x[4], Ma[6], Mb[22]);
	Mb[22] = fmaf( x[6], Ma[4], Mb[22]);
	Mb[22] = fmaf( x[1], Ma[12], Mb[22]);
	Mb[22] *= T(3.000000000e+00);
	Mb[22] = fmaf( x[22], Ma[0], Mb[22]);
	Mb[22] = fmaf( x[10], Ma[3], Mb[22]);
	Mb[22] = fmaf( x[3], Ma[10], Mb[22]);
	Mb[23] *= T(2.500000000e-01);
	Mb[23] = fmaf( x[5], Ma[5], Mb[23]);
	Mb[23] *= T(2.000000000e+00);
	Mb[23] = fmaf( x[11], Ma[2], Mb[23]);
	Mb[23] = fmaf( x[13], Ma[1], Mb[23]);
	Mb[23] = fmaf( x[1], Ma[13], Mb[23]);
	Mb[23] = fmaf( x[2], Ma[11], Mb[23]);
	Mb[23] *= T(2.000000000e+00);
	Mb[23] = fmaf( x[23], Ma[0], Mb[23]);
	Mb[23] = fmaf( x[4], Ma[7], Mb[23]);
	Mb[23] = fmaf( x[7], Ma[4], Mb[23]);
	Mb[24] *= T(5.000000000e-01);
	Mb[24] = fmaf( x[14], Ma[1], Mb[24]);
	Mb[24] = fmaf( x[5], Ma[6], Mb[24]);
	Mb[24] = fmaf( x[6], Ma[5], Mb[24]);
	Mb[24] = fmaf( x[1], Ma[14], Mb[24]);
	Mb[24] *= T(2.000000000e+00);
	Mb[24] = fmaf( x[24], Ma[0], Mb[24]);
	Mb[24] = fmaf( x[11], Ma[3], Mb[24]);
	Mb[24] = fmaf( x[12], Ma[2], Mb[24]);
	Mb[24] = fmaf( x[4], Ma[8], Mb[24]);
	Mb[24] = fmaf( x[8], Ma[4], Mb[24]);
	Mb[24] = fmaf( x[2], Ma[12], Mb[24]);
	Mb[24] = fmaf( x[3], Ma[11], Mb[24]);
	Mb[25] *= T(2.500000000e-01);
	Mb[25] = fmaf( x[6], Ma[6], Mb[25]);
	Mb[25] *= T(2.000000000e+00);
	Mb[25] = fmaf( x[12], Ma[3], Mb[25]);
	Mb[25] = fmaf( x[15], Ma[1], Mb[25]);
	Mb[25] = fmaf( x[1], Ma[15], Mb[25]);
	Mb[25] = fmaf( x[3], Ma[12], Mb[25]);
	Mb[25] *= T(2.000000000e+00);
	Mb[25] = fmaf( x[25], Ma[0], Mb[25]);
	Mb[25] = fmaf( x[4], Ma[9], Mb[25]);
	Mb[25] = fmaf( x[9], Ma[4], Mb[25]);
	Mb[26] *= T(3.333333333e-01);
	Mb[26] = fmaf( x[13], Ma[2], Mb[26]);
	Mb[26] = fmaf( x[5], Ma[7], Mb[26]);
	Mb[26] = fmaf( x[7], Ma[5], Mb[26]);
	Mb[26] = fmaf( x[2], Ma[13], Mb[26]);
	Mb[26] *= T(3.000000000e+00);
	Mb[26] = fmaf( x[26], Ma[0], Mb[26]);
	Mb[26] = fmaf( x[1], Ma[16], Mb[26]);
	Mb[26] = fmaf( x[16], Ma[1], Mb[26]);
	Mb[27] *= T(5.000000000e-01);
	Mb[27] = fmaf( x[14], Ma[2], Mb[27]);
	Mb[27] = fmaf( x[5], Ma[8], Mb[27]);
	Mb[27] = fmaf( x[8], Ma[5], Mb[27]);
	Mb[27] = fmaf( x[2], Ma[14], Mb[27]);
	Mb[27] *= T(2.000000000e+00);
	Mb[27] = fmaf( x[27], Ma[0], Mb[27]);
	Mb[27] = fmaf( x[13], Ma[3], Mb[27]);
	Mb[27] = fmaf( x[6], Ma[7], Mb[27]);
	Mb[27] = fmaf( x[1], Ma[17], Mb[27]);
	Mb[27] = fmaf( x[17], Ma[1], Mb[27]);
	Mb[27] = fmaf( x[7], Ma[6], Mb[27]);
	Mb[27] = fmaf( x[3], Ma[13], Mb[27]);
	Mb[28] *= T(5.000000000e-01);
	Mb[28] = fmaf( x[14], Ma[3], Mb[28]);
	Mb[28] = fmaf( x[6], Ma[8], Mb[28]);
	Mb[28] = fmaf( x[8], Ma[6], Mb[28]);
	Mb[28] = fmaf( x[3], Ma[14], Mb[28]);
	Mb[28] *= T(2.000000000e+00);
	Mb[28] = fmaf( x[28], Ma[0], Mb[28]);
	Mb[28] = fmaf( x[5], Ma[9], Mb[28]);
	Mb[28] = fmaf( x[15], Ma[2], Mb[28]);
	Mb[28] = fmaf( x[1], Ma[18], Mb[28]);
	Mb[28] = fmaf( x[18], Ma[1], Mb[28]);
	Mb[28] = fmaf( x[2], Ma[15], Mb[28]);
	Mb[28] = fmaf( x[9], Ma[5], Mb[28]);
	Mb[29] *= T(3.333333333e-01);
	Mb[29] = fmaf( x[15], Ma[3], Mb[29]);
	Mb[29] = fmaf( x[6], Ma[9], Mb[29]);
	Mb[29] = fmaf( x[9], Ma[6], Mb[29]);
	Mb[29] = fmaf( x[3], Ma[15], Mb[29]);
	Mb[29] *= T(3.000000000e+00);
	Mb[29] = fmaf( x[29], Ma[0], Mb[29]);
	Mb[29] = fmaf( x[1], Ma[19], Mb[29]);
	Mb[29] = fmaf( x[19], Ma[1], Mb[29]);
	Mb[30] *= T(1.666666667e-01);
	Mb[30] = fmaf( x[7], Ma[7], Mb[30]);
	Mb[30] *= T(1.500000000e+00);
	Mb[30] = fmaf( x[16], Ma[2], Mb[30]);
	Mb[30] = fmaf( x[2], Ma[16], Mb[30]);
	Mb[30] *= T(4.000000000e+00);
	Mb[30] = fmaf( x[30], Ma[0], Mb[30]);
	Mb[31] *= T(3.333333333e-01);
	Mb[31] = fmaf( x[17], Ma[2], Mb[31]);
	Mb[31] = fmaf( x[7], Ma[8], Mb[31]);
	Mb[31] = fmaf( x[8], Ma[7], Mb[31]);
	Mb[31] = fmaf( x[2], Ma[17], Mb[31]);
	Mb[31] *= T(3.000000000e+00);
	Mb[31] = fmaf( x[31], Ma[0], Mb[31]);
	Mb[31] = fmaf( x[16], Ma[3], Mb[31]);
	Mb[31] = fmaf( x[3], Ma[16], Mb[31]);
	Mb[32] *= T(2.500000000e-01);
	Mb[32] = fmaf( x[8], Ma[8], Mb[32]);
	Mb[32] *= T(2.000000000e+00);
	Mb[32] = fmaf( x[17], Ma[3], Mb[32]);
	Mb[32] = fmaf( x[18], Ma[2], Mb[32]);
	Mb[32] = fmaf( x[2], Ma[18], Mb[32]);
	Mb[32] = fmaf( x[3], Ma[17], Mb[32]);
	Mb[32] *= T(2.000000000e+00);
	Mb[32] = fmaf( x[32], Ma[0], Mb[32]);
	Mb[32] = fmaf( x[7], Ma[9], Mb[32]);
	Mb[32] = fmaf( x[9], Ma[7], Mb[32]);
	Mb[33] *= T(3.333333333e-01);
	Mb[33] = fmaf( x[18], Ma[3], Mb[33]);
	Mb[33] = fmaf( x[8], Ma[9], Mb[33]);
	Mb[33] = fmaf( x[9], Ma[8], Mb[33]);
	Mb[33] = fmaf( x[3], Ma[18], Mb[33]);
	Mb[33] *= T(3.000000000e+00);
	Mb[33] = fmaf( x[33], Ma[0], Mb[33]);
	Mb[33] = fmaf( x[2], Ma[19], Mb[33]);
	Mb[33] = fmaf( x[19], Ma[2], Mb[33]);
	Mb[34] *= T(1.666666667e-01);
	Mb[34] = fmaf( x[9], Ma[9], Mb[34]);
	Mb[34] *= T(1.500000000e+00);
	Mb[34] = fmaf( x[19], Ma[3], Mb[34]);
	Mb[34] = fmaf( x[3], Ma[19], Mb[34]);
	Mb[34] *= T(4.000000000e+00);
	Mb[34] = fmaf( x[34], Ma[0], Mb[34]);
	Mb[35] *= T(1.000000000e-01);
	Mb[35] = fmaf( x[10], Ma[4], Mb[35]);
	Mb[35] = fmaf( x[4], Ma[10], Mb[35]);
	Mb[35] *= T(2.000000000e+00);
	Mb[35] = fmaf( x[20], Ma[1], Mb[35]);
	Mb[35] = fmaf( x[1], Ma[20], Mb[35]);
	Mb[35] *= T(5.000000000e+00);
	Mb[35] = fmaf( x[35], Ma[0], Mb[35]);
	Mb[36] *= T(1.666666667e-01);
	Mb[36] = fmaf( x[11], Ma[4], Mb[36]);
	Mb[36] = fmaf( x[4], Ma[11], Mb[36]);
	Mb[36] *= T(1.500000000e+00);
	Mb[36] = fmaf( x[21], Ma[1], Mb[36]);
	Mb[36] = fmaf( x[10], Ma[5], Mb[36]);
	Mb[36] = fmaf( x[5], Ma[10], Mb[36]);
	Mb[36] = fmaf( x[1], Ma[21], Mb[36]);
	Mb[36] *= T(4.000000000e+00);
	Mb[36] = fmaf( x[36], Ma[0], Mb[36]);
	Mb[36] = fmaf( x[20], Ma[2], Mb[36]);
	Mb[36] = fmaf( x[2], Ma[20], Mb[36]);
	Mb[37] *= T(1.666666667e-01);
	Mb[37] = fmaf( x[12], Ma[4], Mb[37]);
	Mb[37] = fmaf( x[4], Ma[12], Mb[37]);
	Mb[37] *= T(1.500000000e+00);
	Mb[37] = fmaf( x[22], Ma[1], Mb[37]);
	Mb[37] = fmaf( x[10], Ma[6], Mb[37]);
	Mb[37] = fmaf( x[6], Ma[10], Mb[37]);
	Mb[37] = fmaf( x[1], Ma[22], Mb[37]);
	Mb[37] *= T(4.000000000e+00);
	Mb[37] = fmaf( x[37], Ma[0], Mb[37]);
	Mb[37] = fmaf( x[20], Ma[3], Mb[37]);
	Mb[37] = fmaf( x[3], Ma[20], Mb[37]);
	Mb[38] *= T(1.666666667e-01);
	Mb[38] = fmaf( x[11], Ma[5], Mb[38]);
	Mb[38] = fmaf( x[5], Ma[11], Mb[38]);
	Mb[38] *= T(2.000000000e+00);
	Mb[38] = fmaf( x[23], Ma[1], Mb[38]);
	Mb[38] = fmaf( x[4], Ma[13], Mb[38]);
	Mb[38] = fmaf( x[13], Ma[4], Mb[38]);
	Mb[38] = fmaf( x[1], Ma[23], Mb[38]);
	Mb[38] *= T(1.500000000e+00);
	Mb[38] = fmaf( x[21], Ma[2], Mb[38]);
	Mb[38] = fmaf( x[2], Ma[21], Mb[38]);
	Mb[38] *= T(2.000000000e+00);
	Mb[38] = fmaf( x[38], Ma[0], Mb[38]);
	Mb[38] = fmaf( x[10], Ma[7], Mb[38]);
	Mb[38] = fmaf( x[7], Ma[10], Mb[38]);
	Mb[39] *= T(3.333333333e-01);
	Mb[39] = fmaf( x[24], Ma[1], Mb[39]);
	Mb[39] = fmaf( x[11], Ma[6], Mb[39]);
	Mb[39] = fmaf( x[12], Ma[5], Mb[39]);
	Mb[39] = fmaf( x[4], Ma[14], Mb[39]);
	Mb[39] = fmaf( x[14], Ma[4], Mb[39]);
	Mb[39] = fmaf( x[5], Ma[12], Mb[39]);
	Mb[39] = fmaf( x[6], Ma[11], Mb[39]);
	Mb[39] = fmaf( x[1], Ma[24], Mb[39]);
	Mb[39] *= T(3.000000000e+00);
	Mb[39] = fmaf( x[39], Ma[0], Mb[39]);
	Mb[39] = fmaf( x[21], Ma[3], Mb[39]);
	Mb[39] = fmaf( x[22], Ma[2], Mb[39]);
	Mb[39] = fmaf( x[10], Ma[8], Mb[39]);
	Mb[39] = fmaf( x[8], Ma[10], Mb[39]);
	Mb[39] = fmaf( x[2], Ma[22], Mb[39]);
	Mb[39] = fmaf( x[3], Ma[21], Mb[39]);
	Mb[40] *= T(1.666666667e-01);
	Mb[40] = fmaf( x[12], Ma[6], Mb[40]);
	Mb[40] = fmaf( x[6], Ma[12], Mb[40]);
	Mb[40] *= T(2.000000000e+00);
	Mb[40] = fmaf( x[25], Ma[1], Mb[40]);
	Mb[40] = fmaf( x[4], Ma[15], Mb[40]);
	Mb[40] = fmaf( x[15], Ma[4], Mb[40]);
	Mb[40] = fmaf( x[1], Ma[25], Mb[40]);
	Mb[40] *= T(1.500000000e+00);
	Mb[40] = fmaf( x[22], Ma[3], Mb[40]);
	Mb[40] = fmaf( x[3], Ma[22], Mb[40]);
	Mb[40] *= T(2.000000000e+00);
	Mb[40] = fmaf( x[40], Ma[0], Mb[40]);
	Mb[40] = fmaf( x[10], Ma[9], Mb[40]);
	Mb[40] = fmaf( x[9], Ma[10], Mb[40]);
	Mb[41] *= T(1.666666667e-01);
	Mb[41] = fmaf( x[13], Ma[5], Mb[41]);
	Mb[41] = fmaf( x[5], Ma[13], Mb[41]);
	Mb[41] *= T(2.000000000e+00);
	Mb[41] = fmaf( x[23], Ma[2], Mb[41]);
	Mb[41] = fmaf( x[11], Ma[7], Mb[41]);
	Mb[41] = fmaf( x[7], Ma[11], Mb[41]);
	Mb[41] = fmaf( x[2], Ma[23], Mb[41]);
	Mb[41] *= T(1.500000000e+00);
	Mb[41] = fmaf( x[26], Ma[1], Mb[41]);
	Mb[41] = fmaf( x[1], Ma[26], Mb[41]);
	Mb[41] *= T(2.000000000e+00);
	Mb[41] = fmaf( x[41], Ma[0], Mb[41]);
	Mb[41] = fmaf( x[4], Ma[16], Mb[41]);
	Mb[41] = fmaf( x[16], Ma[4], Mb[41]);
	Mb[42] *= T(2.500000000e-01);
	Mb[42] = fmaf( x[14], Ma[5], Mb[42]);
	Mb[42] = fmaf( x[5], Ma[14], Mb[42]);
	Mb[42] *= T(2.000000000e+00);
	Mb[42] = fmaf( x[24], Ma[2], Mb[42]);
	Mb[42] = fmaf( x[11], Ma[8], Mb[42]);
	Mb[42] = fmaf( x[2], Ma[24], Mb[42]);
	Mb[42] = fmaf( x[8], Ma[11], Mb[42]);
	Mb[42] = fmaf( x[27], Ma[1], Mb[42]);
	Mb[42] = fmaf( x[13], Ma[6], Mb[42]);
	Mb[42] = fmaf( x[6], Ma[13], Mb[42]);
	Mb[42] = fmaf( x[1], Ma[27], Mb[42]);
	Mb[42] *= T(2.000000000e+00);
	Mb[42] = fmaf( x[3], Ma[23], Mb[42]);
	Mb[42] = fmaf( x[42], Ma[0], Mb[42]);
	Mb[42] = fmaf( x[7], Ma[12], Mb[42]);
	Mb[42] = fmaf( x[17], Ma[4], Mb[42]);
	Mb[42] = fmaf( x[4], Ma[17], Mb[42]);
	Mb[42] = fmaf( x[12], Ma[7], Mb[42]);
	Mb[42] = fmaf( x[23], Ma[3], Mb[42]);
	Mb[43] *= T(2.500000000e-01);
	Mb[43] = fmaf( x[6], Ma[14], Mb[43]);
	Mb[43] = fmaf( x[14], Ma[6], Mb[43]);
	Mb[43] *= T(2.000000000e+00);
	Mb[43] = fmaf( x[5], Ma[15], Mb[43]);
	Mb[43] = fmaf( x[3], Ma[24], Mb[43]);
	Mb[43] = fmaf( x[8], Ma[12], Mb[43]);
	Mb[43] = fmaf( x[1], Ma[28], Mb[43]);
	Mb[43] = fmaf( x[15], Ma[5], Mb[43]);
	Mb[43] = fmaf( x[28], Ma[1], Mb[43]);
	Mb[43] = fmaf( x[12], Ma[8], Mb[43]);
	Mb[43] = fmaf( x[24], Ma[3], Mb[43]);
	Mb[43] *= T(2.000000000e+00);
	Mb[43] = fmaf( x[43], Ma[0], Mb[43]);
	Mb[43] = fmaf( x[4], Ma[18], Mb[43]);
	Mb[43] = fmaf( x[25], Ma[2], Mb[43]);
	Mb[43] = fmaf( x[18], Ma[4], Mb[43]);
	Mb[43] = fmaf( x[11], Ma[9], Mb[43]);
	Mb[43] = fmaf( x[2], Ma[25], Mb[43]);
	Mb[43] = fmaf( x[9], Ma[11], Mb[43]);
	Mb[44] *= T(1.666666667e-01);
	Mb[44] = fmaf( x[15], Ma[6], Mb[44]);
	Mb[44] = fmaf( x[6], Ma[15], Mb[44]);
	Mb[44] *= T(2.000000000e+00);
	Mb[44] = fmaf( x[25], Ma[3], Mb[44]);
	Mb[44] = fmaf( x[12], Ma[9], Mb[44]);
	Mb[44] = fmaf( x[9], Ma[12], Mb[44]);
	Mb[44] = fmaf( x[3], Ma[25], Mb[44]);
	Mb[44] *= T(1.500000000e+00);
	Mb[44] = fmaf( x[29], Ma[1], Mb[44]);
	Mb[44] = fmaf( x[1], Ma[29], Mb[44]);
	Mb[44] *= T(2.000000000e+00);
	Mb[44] = fmaf( x[44], Ma[0], Mb[44]);
	Mb[44] = fmaf( x[4], Ma[19], Mb[44]);
	Mb[44] = fmaf( x[19], Ma[4], Mb[44]);
	Mb[45] *= T(1.666666667e-01);
	Mb[45] = fmaf( x[13], Ma[7], Mb[45]);
	Mb[45] = fmaf( x[7], Ma[13], Mb[45]);
	Mb[45] *= T(1.500000000e+00);
	Mb[45] = fmaf( x[26], Ma[2], Mb[45]);
	Mb[45] = fmaf( x[5], Ma[16], Mb[45]);
	Mb[45] = fmaf( x[16], Ma[5], Mb[45]);
	Mb[45] = fmaf( x[2], Ma[26], Mb[45]);
	Mb[45] *= T(4.000000000e+00);
	Mb[45] = fmaf( x[45], Ma[0], Mb[45]);
	Mb[45] = fmaf( x[1], Ma[30], Mb[45]);
	Mb[45] = fmaf( x[30], Ma[1], Mb[45]);
	Mb[46] *= T(3.333333333e-01);
	Mb[46] = fmaf( x[27], Ma[2], Mb[46]);
	Mb[46] = fmaf( x[13], Ma[8], Mb[46]);
	Mb[46] = fmaf( x[14], Ma[7], Mb[46]);
	Mb[46] = fmaf( x[5], Ma[17], Mb[46]);
	Mb[46] = fmaf( x[17], Ma[5], Mb[46]);
	Mb[46] = fmaf( x[7], Ma[14], Mb[46]);
	Mb[46] = fmaf( x[8], Ma[13], Mb[46]);
	Mb[46] = fmaf( x[2], Ma[27], Mb[46]);
	Mb[46] *= T(3.000000000e+00);
	Mb[46] = fmaf( x[46], Ma[0], Mb[46]);
	Mb[46] = fmaf( x[26], Ma[3], Mb[46]);
	Mb[46] = fmaf( x[6], Ma[16], Mb[46]);
	Mb[46] = fmaf( x[1], Ma[31], Mb[46]);
	Mb[46] = fmaf( x[31], Ma[1], Mb[46]);
	Mb[46] = fmaf( x[16], Ma[6], Mb[46]);
	Mb[46] = fmaf( x[3], Ma[26], Mb[46]);
	Mb[47] *= T(2.500000000e-01);
	Mb[47] = fmaf( x[8], Ma[14], Mb[47]);
	Mb[47] = fmaf( x[14], Ma[8], Mb[47]);
	Mb[47] *= T(2.000000000e+00);
	Mb[47] = fmaf( x[27], Ma[3], Mb[47]);
	Mb[47] = fmaf( x[3], Ma[27], Mb[47]);
	Mb[47] = fmaf( x[2], Ma[28], Mb[47]);
	Mb[47] = fmaf( x[18], Ma[5], Mb[47]);
	Mb[47] = fmaf( x[17], Ma[6], Mb[47]);
	Mb[47] = fmaf( x[6], Ma[17], Mb[47]);
	Mb[47] = fmaf( x[5], Ma[18], Mb[47]);
	Mb[47] = fmaf( x[28], Ma[2], Mb[47]);
	Mb[47] *= T(2.000000000e+00);
	Mb[47] = fmaf( x[1], Ma[32], Mb[47]);
	Mb[47] = fmaf( x[32], Ma[1], Mb[47]);
	Mb[47] = fmaf( x[15], Ma[7], Mb[47]);
	Mb[47] = fmaf( x[7], Ma[15], Mb[47]);
	Mb[47] = fmaf( x[13], Ma[9], Mb[47]);
	Mb[47] = fmaf( x[9], Ma[13], Mb[47]);
	Mb[47] = fmaf( x[47], Ma[0], Mb[47]);
	Mb[48] *= T(3.333333333e-01);
	Mb[48] = fmaf( x[28], Ma[3], Mb[48]);
	Mb[48] = fmaf( x[14], Ma[9], Mb[48]);
	Mb[48] = fmaf( x[15], Ma[8], Mb[48]);
	Mb[48] = fmaf( x[6], Ma[18], Mb[48]);
	Mb[48] = fmaf( x[18], Ma[6], Mb[48]);
	Mb[48] = fmaf( x[8], Ma[15], Mb[48]);
	Mb[48] = fmaf( x[9], Ma[14], Mb[48]);
	Mb[48] = fmaf( x[3], Ma[28], Mb[48]);
	Mb[48] *= T(3.000000000e+00);
	Mb[48] = fmaf( x[48], Ma[0], Mb[48]);
	Mb[48] = fmaf( x[5], Ma[19], Mb[48]);
	Mb[48] = fmaf( x[29], Ma[2], Mb[48]);
	Mb[48] = fmaf( x[1], Ma[33], Mb[48]);
	Mb[48] = fmaf( x[33], Ma[1], Mb[48]);
	Mb[48] = fmaf( x[2], Ma[29], Mb[48]);
	Mb[48] = fmaf( x[19], Ma[5], Mb[48]);
	Mb[49] *= T(1.666666667e-01);
	Mb[49] = fmaf( x[15], Ma[9], Mb[49]);
	Mb[49] = fmaf( x[9], Ma[15], Mb[49]);
	Mb[49] *= T(1.500000000e+00);
	Mb[49] = fmaf( x[29], Ma[3], Mb[49]);
	Mb[49] = fmaf( x[6], Ma[19], Mb[49]);
	Mb[49] = fmaf( x[19], Ma[6], Mb[49]);
	Mb[49] = fmaf( x[3], Ma[29], Mb[49]);
	Mb[49] *= T(4.000000000e+00);
	Mb[49] = fmaf( x[49], Ma[0], Mb[49]);
	Mb[49] = fmaf( x[1], Ma[34], Mb[49]);
	Mb[49] = fmaf( x[34], Ma[1], Mb[49]);
	Mb[50] *= T(1.000000000e-01);
	Mb[50] = fmaf( x[16], Ma[7], Mb[50]);
	Mb[50] = fmaf( x[7], Ma[16], Mb[50]);
	Mb[50] *= T(2.000000000e+00);
	Mb[50] = fmaf( x[30], Ma[2], Mb[50]);
	Mb[50] = fmaf( x[2], Ma[30], Mb[50]);
	Mb[50] *= T(5.000000000e+00);
	Mb[50] = fmaf( x[50], Ma[0], Mb[50]);
	Mb[51] *= T(1.666666667e-01);
	Mb[51] = fmaf( x[17], Ma[7], Mb[51]);
	Mb[51] = fmaf( x[7], Ma[17], Mb[51]);
	Mb[51] *= T(1.500000000e+00);
	Mb[51] = fmaf( x[31], Ma[2], Mb[51]);
	Mb[51] = fmaf( x[16], Ma[8], Mb[51]);
	Mb[51] = fmaf( x[8], Ma[16], Mb[51]);
	Mb[51] = fmaf( x[2], Ma[31], Mb[51]);
	Mb[51] *= T(4.000000000e+00);
	Mb[51] = fmaf( x[51], Ma[0], Mb[51]);
	Mb[51] = fmaf( x[30], Ma[3], Mb[51]);
	Mb[51] = fmaf( x[3], Ma[30], Mb[51]);
	Mb[52] *= T(1.666666667e-01);
	Mb[52] = fmaf( x[17], Ma[8], Mb[52]);
	Mb[52] = fmaf( x[8], Ma[17], Mb[52]);
	Mb[52] *= T(2.000000000e+00);
	Mb[52] = fmaf( x[32], Ma[2], Mb[52]);
	Mb[52] = fmaf( x[7], Ma[18], Mb[52]);
	Mb[52] = fmaf( x[18], Ma[7], Mb[52]);
	Mb[52] = fmaf( x[2], Ma[32], Mb[52]);
	Mb[52] *= T(1.500000000e+00);
	Mb[52] = fmaf( x[31], Ma[3], Mb[52]);
	Mb[52] = fmaf( x[3], Ma[31], Mb[52]);
	Mb[52] *= T(2.000000000e+00);
	Mb[52] = fmaf( x[52], Ma[0], Mb[52]);
	Mb[52] = fmaf( x[16], Ma[9], Mb[52]);
	Mb[52] = fmaf( x[9], Ma[16], Mb[52]);
	Mb[53] *= T(1.666666667e-01);
	Mb[53] = fmaf( x[18], Ma[8], Mb[53]);
	Mb[53] = fmaf( x[8], Ma[18], Mb[53]);
	Mb[53] *= T(2.000000000e+00);
	Mb[53] = fmaf( x[32], Ma[3], Mb[53]);
	Mb[53] = fmaf( x[17], Ma[9], Mb[53]);
	Mb[53] = fmaf( x[9], Ma[17], Mb[53]);
	Mb[53] = fmaf( x[3], Ma[32], Mb[53]);
	Mb[53] *= T(1.500000000e+00);
	Mb[53] = fmaf( x[33], Ma[2], Mb[53]);
	Mb[53] = fmaf( x[2], Ma[33], Mb[53]);
	Mb[53] *= T(2.000000000e+00);
	Mb[53] = fmaf( x[53], Ma[0], Mb[53]);
	Mb[53] = fmaf( x[7], Ma[19], Mb[53]);
	Mb[53] = fmaf( x[19], Ma[7], Mb[53]);
	Mb[54] *= T(1.666666667e-01);
	Mb[54] = fmaf( x[18], Ma[9], Mb[54]);
	Mb[54] = fmaf( x[9], Ma[18], Mb[54]);
	Mb[54] *= T(1.500000000e+00);
	Mb[54] = fmaf( x[33], Ma[3], Mb[54]);
	Mb[54] = fmaf( x[8], Ma[19], Mb[54]);
	Mb[54] = fmaf( x[19], Ma[8], Mb[54]);
	Mb[54] = fmaf( x[3], Ma[33], Mb[54]);
	Mb[54] *= T(4.000000000e+00);
	Mb[54] = fmaf( x[54], Ma[0], Mb[54]);
	Mb[54] = fmaf( x[2], Ma[34], Mb[54]);
	Mb[54] = fmaf( x[34], Ma[2], Mb[54]);
	Mb[55] *= T(1.000000000e-01);
	Mb[55] = fmaf( x[19], Ma[9], Mb[55]);
	Mb[55] = fmaf( x[9], Ma[19], Mb[55]);
	Mb[55] *= T(2.000000000e+00);
	Mb[55] = fmaf( x[34], Ma[3], Mb[55]);
	Mb[55] = fmaf( x[3], Ma[34], Mb[55]);
	Mb[55] *= T(5.000000000e+00);
	Mb[55] = fmaf( x[55], Ma[0], Mb[55]);
	return Mb;

}

template<class T>
CUDA_EXPORT
#ifdef __CUDACC__
__noinline__
#endif
tensor_sym<T, 2> L2P(const tensor_sym<T, 7>& La, array<T,NDIM> X, bool do_phi) {
	tensor_sym<T, 2> Lb;
	T x[84];
	x[0] = T(1);
	x[1] = X[0];
	x[2] = X[1];
	x[3] = X[2];
	x[9] = x[3] * x[3];
	x[8] = x[2] * x[3];
	x[7] = x[2] * x[2];
	x[6] = x[1] * x[3];
	x[5] = x[1] * x[2];
	x[4] = x[1] * x[1];
	x[19] = x[9] * x[3];
	x[18] = x[8] * x[3];
	x[17] = x[8] * x[2];
	x[16] = x[7] * x[2];
	x[15] = x[6] * x[3];
	x[14] = x[5] * x[3];
	x[13] = x[5] * x[2];
	x[12] = x[6] * x[1];
	x[11] = x[5] * x[1];
	x[10] = x[4] * x[1];
	x[34] = x[9] * x[9];
	x[33] = x[8] * x[9];
	x[32] = x[8] * x[8];
	x[31] = x[8] * x[7];
	x[30] = x[7] * x[7];
	x[29] = x[6] * x[9];
	x[28] = x[5] * x[9];
	x[27] = x[5] * x[8];
	x[26] = x[5] * x[7];
	x[25] = x[6] * x[6];
	x[24] = x[5] * x[6];
	x[23] = x[5] * x[5];
	x[22] = x[6] * x[4];
	x[21] = x[5] * x[4];
	x[20] = x[4] * x[4];
	x[55] = x[19] * x[9];
	x[54] = x[18] * x[9];
	x[53] = x[17] * x[9];
	x[52] = x[17] * x[8];
	x[51] = x[17] * x[7];
	x[50] = x[16] * x[7];
	x[49] = x[15] * x[9];
	x[48] = x[14] * x[9];
	x[47] = x[14] * x[8];
	x[46] = x[14] * x[7];
	x[45] = x[13] * x[7];
	x[44] = x[12] * x[9];
	x[43] = x[14] * x[6];
	x[42] = x[14] * x[5];
	x[41] = x[11] * x[7];
	x[40] = x[12] * x[6];
	x[39] = x[14] * x[4];
	x[38] = x[11] * x[5];
	x[37] = x[12] * x[4];
	x[36] = x[11] * x[4];
	x[35] = x[10] * x[4];
	x[83] = x[19] * x[19];
	x[82] = x[18] * x[19];
	x[81] = x[17] * x[19];
	x[80] = x[17] * x[18];
	x[79] = x[17] * x[17];
	x[78] = x[17] * x[16];
	x[77] = x[16] * x[16];
	x[76] = x[15] * x[19];
	x[75] = x[14] * x[19];
	x[74] = x[14] * x[18];
	x[73] = x[14] * x[17];
	x[72] = x[14] * x[16];
	x[71] = x[13] * x[16];
	x[70] = x[12] * x[19];
	x[69] = x[14] * x[15];
	x[68] = x[14] * x[14];
	x[67] = x[14] * x[13];
	x[66] = x[11] * x[16];
	x[65] = x[12] * x[15];
	x[64] = x[14] * x[12];
	x[63] = x[14] * x[11];
	x[62] = x[11] * x[13];
	x[61] = x[12] * x[12];
	x[60] = x[14] * x[10];
	x[59] = x[11] * x[11];
	x[58] = x[12] * x[10];
	x[57] = x[11] * x[10];
	x[56] = x[10] * x[10];
	Lb[0] = La[0];
	Lb[1] = La[1];
	Lb[2] = La[2];
	Lb[3] = La[3];
	if( do_phi ) {
		Lb[0] *= T(7.200000000e+02);
		Lb[0] = fmaf( x[56], La[56], Lb[0]);
		Lb[0] = fmaf( x[77], La[77], Lb[0]);
		Lb[0] = fmaf( x[83], La[83], Lb[0]);
		Lb[0] *= T(1.666666667e-01);
		Lb[0] = fmaf( x[78], La[78], Lb[0]);
		Lb[0] = fmaf( x[50], La[50], Lb[0]);
		Lb[0] = fmaf( x[76], La[76], Lb[0]);
		Lb[0] = fmaf( x[82], La[82], Lb[0]);
		Lb[0] = fmaf( x[71], La[71], Lb[0]);
		Lb[0] = fmaf( x[35], La[35], Lb[0]);
		Lb[0] = fmaf( x[58], La[58], Lb[0]);
		Lb[0] = fmaf( x[57], La[57], Lb[0]);
		Lb[0] = fmaf( x[55], La[55], Lb[0]);
		Lb[0] *= T(4.000000000e-01);
		Lb[0] = fmaf( x[59], La[59], Lb[0]);
		Lb[0] = fmaf( x[61], La[61], Lb[0]);
		Lb[0] = fmaf( x[70], La[70], Lb[0]);
		Lb[0] = fmaf( x[81], La[81], Lb[0]);
		Lb[0] = fmaf( x[79], La[79], Lb[0]);
		Lb[0] = fmaf( x[66], La[66], Lb[0]);
		Lb[0] *= T(7.500000000e-01);
		Lb[0] = fmaf( x[62], La[62], Lb[0]);
		Lb[0] = fmaf( x[80], La[80], Lb[0]);
		Lb[0] = fmaf( x[65], La[65], Lb[0]);
		Lb[0] *= T(6.666666667e-01);
		Lb[0] = fmaf( x[30], La[30], Lb[0]);
		Lb[0] = fmaf( x[45], La[45], Lb[0]);
		Lb[0] = fmaf( x[49], La[49], Lb[0]);
		Lb[0] = fmaf( x[75], La[75], Lb[0]);
		Lb[0] = fmaf( x[72], La[72], Lb[0]);
		Lb[0] = fmaf( x[34], La[34], Lb[0]);
		Lb[0] = fmaf( x[60], La[60], Lb[0]);
		Lb[0] = fmaf( x[54], La[54], Lb[0]);
		Lb[0] = fmaf( x[20], La[20], Lb[0]);
		Lb[0] = fmaf( x[36], La[36], Lb[0]);
		Lb[0] = fmaf( x[51], La[51], Lb[0]);
		Lb[0] = fmaf( x[37], La[37], Lb[0]);
		Lb[0] *= T(5.000000000e-01);
		Lb[0] = fmaf( x[41], La[41], Lb[0]);
		Lb[0] = fmaf( x[73], La[73], Lb[0]);
		Lb[0] = fmaf( x[44], La[44], Lb[0]);
		Lb[0] = fmaf( x[69], La[69], Lb[0]);
		Lb[0] = fmaf( x[67], La[67], Lb[0]);
		Lb[0] = fmaf( x[63], La[63], Lb[0]);
		Lb[0] = fmaf( x[38], La[38], Lb[0]);
		Lb[0] = fmaf( x[40], La[40], Lb[0]);
		Lb[0] = fmaf( x[74], La[74], Lb[0]);
		Lb[0] = fmaf( x[64], La[64], Lb[0]);
		Lb[0] = fmaf( x[53], La[53], Lb[0]);
		Lb[0] = fmaf( x[52], La[52], Lb[0]);
		Lb[0] *= T(6.666666667e-01);
		Lb[0] = fmaf( x[68], La[68], Lb[0]);
		Lb[0] *= T(7.500000000e-01);
		Lb[0] = fmaf( x[26], La[26], Lb[0]);
		Lb[0] = fmaf( x[19], La[19], Lb[0]);
		Lb[0] = fmaf( x[33], La[33], Lb[0]);
		Lb[0] = fmaf( x[16], La[16], Lb[0]);
		Lb[0] = fmaf( x[31], La[31], Lb[0]);
		Lb[0] = fmaf( x[39], La[39], Lb[0]);
		Lb[0] = fmaf( x[21], La[21], Lb[0]);
		Lb[0] = fmaf( x[22], La[22], Lb[0]);
		Lb[0] = fmaf( x[10], La[10], Lb[0]);
		Lb[0] = fmaf( x[29], La[29], Lb[0]);
		Lb[0] = fmaf( x[46], La[46], Lb[0]);
		Lb[0] = fmaf( x[48], La[48], Lb[0]);
		Lb[0] *= T(6.666666667e-01);
		Lb[0] = fmaf( x[23], La[23], Lb[0]);
		Lb[0] = fmaf( x[42], La[42], Lb[0]);
		Lb[0] = fmaf( x[43], La[43], Lb[0]);
		Lb[0] = fmaf( x[32], La[32], Lb[0]);
		Lb[0] = fmaf( x[47], La[47], Lb[0]);
		Lb[0] = fmaf( x[25], La[25], Lb[0]);
		Lb[0] *= T(5.000000000e-01);
		Lb[0] = fmaf( x[9], La[9], Lb[0]);
		Lb[0] = fmaf( x[28], La[28], Lb[0]);
		Lb[0] = fmaf( x[18], La[18], Lb[0]);
		Lb[0] = fmaf( x[7], La[7], Lb[0]);
		Lb[0] = fmaf( x[17], La[17], Lb[0]);
		Lb[0] = fmaf( x[27], La[27], Lb[0]);
		Lb[0] = fmaf( x[4], La[4], Lb[0]);
		Lb[0] = fmaf( x[12], La[12], Lb[0]);
		Lb[0] = fmaf( x[13], La[13], Lb[0]);
		Lb[0] = fmaf( x[15], La[15], Lb[0]);
		Lb[0] = fmaf( x[11], La[11], Lb[0]);
		Lb[0] = fmaf( x[24], La[24], Lb[0]);
		Lb[0] *= T(5.000000000e-01);
		Lb[0] = fmaf( x[1], La[1], Lb[0]);
		Lb[0] = fmaf( x[6], La[6], Lb[0]);
		Lb[0] = fmaf( x[3], La[3], Lb[0]);
		Lb[0] = fmaf( x[8], La[8], Lb[0]);
		Lb[0] = fmaf( x[2], La[2], Lb[0]);
		Lb[0] = fmaf( x[5], La[5], Lb[0]);
		Lb[0] = fmaf( x[14], La[14], Lb[0]);
	}
	Lb[1] *= T(1.200000000e+02);
	Lb[1] = fmaf( x[35], La[56], Lb[1]);
	Lb[1] = fmaf( x[50], La[71], Lb[1]);
	Lb[1] = fmaf( x[55], La[76], Lb[1]);
	Lb[1] *= T(2.000000000e-01);
	Lb[1] = fmaf( x[36], La[57], Lb[1]);
	Lb[1] = fmaf( x[37], La[58], Lb[1]);
	Lb[1] = fmaf( x[20], La[35], Lb[1]);
	Lb[1] = fmaf( x[45], La[66], Lb[1]);
	Lb[1] = fmaf( x[54], La[75], Lb[1]);
	Lb[1] = fmaf( x[49], La[70], Lb[1]);
	Lb[1] = fmaf( x[34], La[49], Lb[1]);
	Lb[1] = fmaf( x[51], La[72], Lb[1]);
	Lb[1] = fmaf( x[30], La[45], Lb[1]);
	Lb[1] *= T(5.000000000e-01);
	Lb[1] = fmaf( x[40], La[61], Lb[1]);
	Lb[1] = fmaf( x[44], La[65], Lb[1]);
	Lb[1] = fmaf( x[41], La[62], Lb[1]);
	Lb[1] = fmaf( x[52], La[73], Lb[1]);
	Lb[1] = fmaf( x[53], La[74], Lb[1]);
	Lb[1] = fmaf( x[38], La[59], Lb[1]);
	Lb[1] *= T(5.000000000e-01);
	Lb[1] = fmaf( x[16], La[26], Lb[1]);
	Lb[1] = fmaf( x[19], La[29], Lb[1]);
	Lb[1] = fmaf( x[33], La[48], Lb[1]);
	Lb[1] = fmaf( x[46], La[67], Lb[1]);
	Lb[1] = fmaf( x[26], La[41], Lb[1]);
	Lb[1] = fmaf( x[48], La[69], Lb[1]);
	Lb[1] = fmaf( x[10], La[20], Lb[1]);
	Lb[1] = fmaf( x[39], La[60], Lb[1]);
	Lb[1] = fmaf( x[29], La[44], Lb[1]);
	Lb[1] = fmaf( x[22], La[37], Lb[1]);
	Lb[1] = fmaf( x[21], La[36], Lb[1]);
	Lb[1] = fmaf( x[31], La[46], Lb[1]);
	Lb[1] *= T(6.666666667e-01);
	Lb[1] = fmaf( x[42], La[63], Lb[1]);
	Lb[1] = fmaf( x[23], La[38], Lb[1]);
	Lb[1] = fmaf( x[43], La[64], Lb[1]);
	Lb[1] = fmaf( x[47], La[68], Lb[1]);
	Lb[1] = fmaf( x[32], La[47], Lb[1]);
	Lb[1] = fmaf( x[25], La[40], Lb[1]);
	Lb[1] *= T(5.000000000e-01);
	Lb[1] = fmaf( x[28], La[43], Lb[1]);
	Lb[1] = fmaf( x[24], La[39], Lb[1]);
	Lb[1] = fmaf( x[11], La[21], Lb[1]);
	Lb[1] = fmaf( x[12], La[22], Lb[1]);
	Lb[1] = fmaf( x[4], La[10], Lb[1]);
	Lb[1] = fmaf( x[27], La[42], Lb[1]);
	Lb[1] = fmaf( x[13], La[23], Lb[1]);
	Lb[1] = fmaf( x[15], La[25], Lb[1]);
	Lb[1] = fmaf( x[17], La[27], Lb[1]);
	Lb[1] = fmaf( x[7], La[13], Lb[1]);
	Lb[1] = fmaf( x[18], La[28], Lb[1]);
	Lb[1] = fmaf( x[9], La[15], Lb[1]);
	Lb[1] *= T(5.000000000e-01);
	Lb[1] = fmaf( x[3], La[6], Lb[1]);
	Lb[1] = fmaf( x[14], La[24], Lb[1]);
	Lb[1] = fmaf( x[5], La[11], Lb[1]);
	Lb[1] = fmaf( x[6], La[12], Lb[1]);
	Lb[1] = fmaf( x[1], La[4], Lb[1]);
	Lb[1] = fmaf( x[8], La[14], Lb[1]);
	Lb[1] = fmaf( x[2], La[5], Lb[1]);
	Lb[2] *= T(1.200000000e+02);
	Lb[2] = fmaf( x[35], La[57], Lb[2]);
	Lb[2] = fmaf( x[50], La[77], Lb[2]);
	Lb[2] = fmaf( x[55], La[82], Lb[2]);
	Lb[2] *= T(2.000000000e-01);
	Lb[2] = fmaf( x[36], La[59], Lb[2]);
	Lb[2] = fmaf( x[37], La[60], Lb[2]);
	Lb[2] = fmaf( x[20], La[36], Lb[2]);
	Lb[2] = fmaf( x[45], La[71], Lb[2]);
	Lb[2] = fmaf( x[54], La[81], Lb[2]);
	Lb[2] = fmaf( x[49], La[75], Lb[2]);
	Lb[2] = fmaf( x[34], La[54], Lb[2]);
	Lb[2] = fmaf( x[51], La[78], Lb[2]);
	Lb[2] = fmaf( x[30], La[50], Lb[2]);
	Lb[2] *= T(5.000000000e-01);
	Lb[2] = fmaf( x[40], La[64], Lb[2]);
	Lb[2] = fmaf( x[44], La[69], Lb[2]);
	Lb[2] = fmaf( x[41], La[66], Lb[2]);
	Lb[2] = fmaf( x[52], La[79], Lb[2]);
	Lb[2] = fmaf( x[53], La[80], Lb[2]);
	Lb[2] = fmaf( x[38], La[62], Lb[2]);
	Lb[2] *= T(5.000000000e-01);
	Lb[2] = fmaf( x[16], La[30], Lb[2]);
	Lb[2] = fmaf( x[19], La[33], Lb[2]);
	Lb[2] = fmaf( x[33], La[53], Lb[2]);
	Lb[2] = fmaf( x[46], La[72], Lb[2]);
	Lb[2] = fmaf( x[26], La[45], Lb[2]);
	Lb[2] = fmaf( x[48], La[74], Lb[2]);
	Lb[2] = fmaf( x[10], La[21], Lb[2]);
	Lb[2] = fmaf( x[39], La[63], Lb[2]);
	Lb[2] = fmaf( x[29], La[48], Lb[2]);
	Lb[2] = fmaf( x[22], La[39], Lb[2]);
	Lb[2] = fmaf( x[21], La[38], Lb[2]);
	Lb[2] = fmaf( x[31], La[51], Lb[2]);
	Lb[2] *= T(6.666666667e-01);
	Lb[2] = fmaf( x[42], La[67], Lb[2]);
	Lb[2] = fmaf( x[23], La[41], Lb[2]);
	Lb[2] = fmaf( x[43], La[68], Lb[2]);
	Lb[2] = fmaf( x[47], La[73], Lb[2]);
	Lb[2] = fmaf( x[32], La[52], Lb[2]);
	Lb[2] = fmaf( x[25], La[43], Lb[2]);
	Lb[2] *= T(5.000000000e-01);
	Lb[2] = fmaf( x[28], La[47], Lb[2]);
	Lb[2] = fmaf( x[24], La[42], Lb[2]);
	Lb[2] = fmaf( x[11], La[23], Lb[2]);
	Lb[2] = fmaf( x[12], La[24], Lb[2]);
	Lb[2] = fmaf( x[4], La[11], Lb[2]);
	Lb[2] = fmaf( x[27], La[46], Lb[2]);
	Lb[2] = fmaf( x[13], La[26], Lb[2]);
	Lb[2] = fmaf( x[15], La[28], Lb[2]);
	Lb[2] = fmaf( x[17], La[31], Lb[2]);
	Lb[2] = fmaf( x[7], La[16], Lb[2]);
	Lb[2] = fmaf( x[18], La[32], Lb[2]);
	Lb[2] = fmaf( x[9], La[18], Lb[2]);
	Lb[2] *= T(5.000000000e-01);
	Lb[2] = fmaf( x[3], La[8], Lb[2]);
	Lb[2] = fmaf( x[14], La[27], Lb[2]);
	Lb[2] = fmaf( x[5], La[13], Lb[2]);
	Lb[2] = fmaf( x[6], La[14], Lb[2]);
	Lb[2] = fmaf( x[1], La[5], Lb[2]);
	Lb[2] = fmaf( x[8], La[17], Lb[2]);
	Lb[2] = fmaf( x[2], La[7], Lb[2]);
	Lb[3] *= T(1.200000000e+02);
	Lb[3] = fmaf( x[35], La[58], Lb[3]);
	Lb[3] = fmaf( x[50], La[78], Lb[3]);
	Lb[3] = fmaf( x[55], La[83], Lb[3]);
	Lb[3] *= T(2.000000000e-01);
	Lb[3] = fmaf( x[36], La[60], Lb[3]);
	Lb[3] = fmaf( x[37], La[61], Lb[3]);
	Lb[3] = fmaf( x[20], La[37], Lb[3]);
	Lb[3] = fmaf( x[45], La[72], Lb[3]);
	Lb[3] = fmaf( x[54], La[82], Lb[3]);
	Lb[3] = fmaf( x[49], La[76], Lb[3]);
	Lb[3] = fmaf( x[34], La[55], Lb[3]);
	Lb[3] = fmaf( x[51], La[79], Lb[3]);
	Lb[3] = fmaf( x[30], La[51], Lb[3]);
	Lb[3] *= T(5.000000000e-01);
	Lb[3] = fmaf( x[40], La[65], Lb[3]);
	Lb[3] = fmaf( x[44], La[70], Lb[3]);
	Lb[3] = fmaf( x[41], La[67], Lb[3]);
	Lb[3] = fmaf( x[52], La[80], Lb[3]);
	Lb[3] = fmaf( x[53], La[81], Lb[3]);
	Lb[3] = fmaf( x[38], La[63], Lb[3]);
	Lb[3] *= T(5.000000000e-01);
	Lb[3] = fmaf( x[16], La[31], Lb[3]);
	Lb[3] = fmaf( x[19], La[34], Lb[3]);
	Lb[3] = fmaf( x[33], La[54], Lb[3]);
	Lb[3] = fmaf( x[46], La[73], Lb[3]);
	Lb[3] = fmaf( x[26], La[46], Lb[3]);
	Lb[3] = fmaf( x[48], La[75], Lb[3]);
	Lb[3] = fmaf( x[10], La[22], Lb[3]);
	Lb[3] = fmaf( x[39], La[64], Lb[3]);
	Lb[3] = fmaf( x[29], La[49], Lb[3]);
	Lb[3] = fmaf( x[22], La[40], Lb[3]);
	Lb[3] = fmaf( x[21], La[39], Lb[3]);
	Lb[3] = fmaf( x[31], La[52], Lb[3]);
	Lb[3] *= T(6.666666667e-01);
	Lb[3] = fmaf( x[42], La[68], Lb[3]);
	Lb[3] = fmaf( x[23], La[42], Lb[3]);
	Lb[3] = fmaf( x[43], La[69], Lb[3]);
	Lb[3] = fmaf( x[47], La[74], Lb[3]);
	Lb[3] = fmaf( x[32], La[53], Lb[3]);
	Lb[3] = fmaf( x[25], La[44], Lb[3]);
	Lb[3] *= T(5.000000000e-01);
	Lb[3] = fmaf( x[28], La[48], Lb[3]);
	Lb[3] = fmaf( x[24], La[43], Lb[3]);
	Lb[3] = fmaf( x[11], La[24], Lb[3]);
	Lb[3] = fmaf( x[12], La[25], Lb[3]);
	Lb[3] = fmaf( x[4], La[12], Lb[3]);
	Lb[3] = fmaf( x[27], La[47], Lb[3]);
	Lb[3] = fmaf( x[13], La[27], Lb[3]);
	Lb[3] = fmaf( x[15], La[29], Lb[3]);
	Lb[3] = fmaf( x[17], La[32], Lb[3]);
	Lb[3] = fmaf( x[7], La[17], Lb[3]);
	Lb[3] = fmaf( x[18], La[33], Lb[3]);
	Lb[3] = fmaf( x[9], La[19], Lb[3]);
	Lb[3] *= T(5.000000000e-01);
	Lb[3] = fmaf( x[3], La[9], Lb[3]);
	Lb[3] = fmaf( x[14], La[28], Lb[3]);
	Lb[3] = fmaf( x[5], La[14], Lb[3]);
	Lb[3] = fmaf( x[6], La[15], Lb[3]);
	Lb[3] = fmaf( x[1], La[6], Lb[3]);
	Lb[3] = fmaf( x[8], La[18], Lb[3]);
	Lb[3] = fmaf( x[2], La[8], Lb[3]);
	return Lb;
/* FLOPS = 434 + do_phi * 178*/
}
static __device__ char Ldest1[757] = { 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,30,30,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,31,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,35,35,35,36,36,36,37,37,37,38,38,38,39,39,39,40,40,40,41,41,41,42,42,42,43,43,43,44,44,44,45,45,45,46,46,46,47,47,47,48,48,48,49,49,49,50,50,50,51,51,51,52,52,52,53,53,53,54,54,54,55,55,55};
static __constant__ float factor1[757] = { float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.666666716e-01),float(4.166666791e-02),float(1.666666716e-01),float(1.666666716e-01),float(2.500000000e-01),float(5.000000000e-01),float(2.500000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.666666716e-01),float(4.166666791e-02),float(1.666666716e-01),float(2.500000000e-01),float(1.666666716e-01),float(4.166666791e-02),float(8.333333768e-03),float(4.166666791e-02),float(4.166666791e-02),float(8.333333582e-02),float(1.666666716e-01),float(8.333333582e-02),float(8.333333582e-02),float(2.500000000e-01),float(2.500000000e-01),float(8.333333582e-02),float(4.166666791e-02),float(1.666666716e-01),float(2.500000000e-01),float(1.666666716e-01),float(4.166666791e-02),float(8.333333768e-03),float(4.166666791e-02),float(8.333333582e-02),float(8.333333582e-02),float(4.166666791e-02),float(8.333333768e-03),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.666666716e-01),float(4.166666791e-02),float(1.666666716e-01),float(1.666666716e-01),float(2.500000000e-01),float(5.000000000e-01),float(2.500000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.666666716e-01),float(4.166666791e-02),float(1.666666716e-01),float(2.500000000e-01),float(1.666666716e-01),float(4.166666791e-02),float(8.333333768e-03),float(4.166666791e-02),float(4.166666791e-02),float(8.333333582e-02),float(1.666666716e-01),float(8.333333582e-02),float(8.333333582e-02),float(2.500000000e-01),float(2.500000000e-01),float(8.333333582e-02),float(4.166666791e-02),float(1.666666716e-01),float(2.500000000e-01),float(1.666666716e-01),float(4.166666791e-02),float(8.333333768e-03),float(4.166666791e-02),float(8.333333582e-02),float(8.333333582e-02),float(4.166666791e-02),float(8.333333768e-03),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.666666716e-01),float(4.166666791e-02),float(1.666666716e-01),float(1.666666716e-01),float(2.500000000e-01),float(5.000000000e-01),float(2.500000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.666666716e-01),float(4.166666791e-02),float(1.666666716e-01),float(2.500000000e-01),float(1.666666716e-01),float(4.166666791e-02),float(8.333333768e-03),float(4.166666791e-02),float(4.166666791e-02),float(8.333333582e-02),float(1.666666716e-01),float(8.333333582e-02),float(8.333333582e-02),float(2.500000000e-01),float(2.500000000e-01),float(8.333333582e-02),float(4.166666791e-02),float(1.666666716e-01),float(2.500000000e-01),float(1.666666716e-01),float(4.166666791e-02),float(8.333333768e-03),float(4.166666791e-02),float(8.333333582e-02),float(8.333333582e-02),float(4.166666791e-02),float(8.333333768e-03),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.666666716e-01),float(4.166666791e-02),float(1.666666716e-01),float(1.666666716e-01),float(2.500000000e-01),float(5.000000000e-01),float(2.500000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.666666716e-01),float(4.166666791e-02),float(1.666666716e-01),float(2.500000000e-01),float(1.666666716e-01),float(4.166666791e-02),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.666666716e-01),float(4.166666791e-02),float(1.666666716e-01),float(1.666666716e-01),float(2.500000000e-01),float(5.000000000e-01),float(2.500000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.666666716e-01),float(4.166666791e-02),float(1.666666716e-01),float(2.500000000e-01),float(1.666666716e-01),float(4.166666791e-02),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.666666716e-01),float(4.166666791e-02),float(1.666666716e-01),float(1.666666716e-01),float(2.500000000e-01),float(5.000000000e-01),float(2.500000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.666666716e-01),float(4.166666791e-02),float(1.666666716e-01),float(2.500000000e-01),float(1.666666716e-01),float(4.166666791e-02),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.666666716e-01),float(4.166666791e-02),float(1.666666716e-01),float(1.666666716e-01),float(2.500000000e-01),float(5.000000000e-01),float(2.500000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.666666716e-01),float(4.166666791e-02),float(1.666666716e-01),float(2.500000000e-01),float(1.666666716e-01),float(4.166666791e-02),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.666666716e-01),float(4.166666791e-02),float(1.666666716e-01),float(1.666666716e-01),float(2.500000000e-01),float(5.000000000e-01),float(2.500000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.666666716e-01),float(4.166666791e-02),float(1.666666716e-01),float(2.500000000e-01),float(1.666666716e-01),float(4.166666791e-02),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.666666716e-01),float(4.166666791e-02),float(1.666666716e-01),float(1.666666716e-01),float(2.500000000e-01),float(5.000000000e-01),float(2.500000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.666666716e-01),float(4.166666791e-02),float(1.666666716e-01),float(2.500000000e-01),float(1.666666716e-01),float(4.166666791e-02),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.666666716e-01),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.666666716e-01),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.666666716e-01),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.666666716e-01),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.666666716e-01),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.666666716e-01),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.666666716e-01),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.666666716e-01),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.666666716e-01),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.666666716e-01),float(5.000000000e-01),float(5.000000000e-01),float(1.666666716e-01),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(5.000000000e-01),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00),float(1.000000000e+00)};
static __constant__ char xsrc1[757] = { 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3};
static __constant__ char Lsrc1[757] = { 4,5,6,10,11,12,13,14,15,20,21,22,23,24,25,26,27,28,29,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,5,7,8,11,13,14,16,17,18,21,23,24,26,27,28,30,31,32,33,36,38,39,41,42,43,45,46,47,48,50,51,52,53,54,57,59,60,62,63,64,66,67,68,69,71,72,73,74,75,77,78,79,80,81,82,6,8,9,12,14,15,17,18,19,22,24,25,27,28,29,31,32,33,34,37,39,40,42,43,44,46,47,48,49,51,52,53,54,55,58,60,61,63,64,65,67,68,69,70,72,73,74,75,76,78,79,80,81,82,83,10,11,12,20,21,22,23,24,25,35,36,37,38,39,40,41,42,43,44,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,11,13,14,21,23,24,26,27,28,36,38,39,41,42,43,45,46,47,48,57,59,60,62,63,64,66,67,68,69,71,72,73,74,75,12,14,15,22,24,25,27,28,29,37,39,40,42,43,44,46,47,48,49,58,60,61,63,64,65,67,68,69,70,72,73,74,75,76,13,16,17,23,26,27,30,31,32,38,41,42,45,46,47,50,51,52,53,59,62,63,66,67,68,71,72,73,74,77,78,79,80,81,14,17,18,24,27,28,31,32,33,39,42,43,46,47,48,51,52,53,54,60,63,64,67,68,69,72,73,74,75,78,79,80,81,82,15,18,19,25,28,29,32,33,34,40,43,44,47,48,49,52,53,54,55,61,64,65,68,69,70,73,74,75,76,79,80,81,82,83,20,21,22,35,36,37,38,39,40,56,57,58,59,60,61,62,63,64,65,21,23,24,36,38,39,41,42,43,57,59,60,62,63,64,66,67,68,69,22,24,25,37,39,40,42,43,44,58,60,61,63,64,65,67,68,69,70,23,26,27,38,41,42,45,46,47,59,62,63,66,67,68,71,72,73,74,24,27,28,39,42,43,46,47,48,60,63,64,67,68,69,72,73,74,75,25,28,29,40,43,44,47,48,49,61,64,65,68,69,70,73,74,75,76,26,30,31,41,45,46,50,51,52,62,66,67,71,72,73,77,78,79,80,27,31,32,42,46,47,51,52,53,63,67,68,72,73,74,78,79,80,81,28,32,33,43,47,48,52,53,54,64,68,69,73,74,75,79,80,81,82,29,33,34,44,48,49,53,54,55,65,69,70,74,75,76,80,81,82,83,35,36,37,56,57,58,59,60,61,36,38,39,57,59,60,62,63,64,37,39,40,58,60,61,63,64,65,38,41,42,59,62,63,66,67,68,39,42,43,60,63,64,67,68,69,40,43,44,61,64,65,68,69,70,41,45,46,62,66,67,71,72,73,42,46,47,63,67,68,72,73,74,43,47,48,64,68,69,73,74,75,44,48,49,65,69,70,74,75,76,45,50,51,66,71,72,77,78,79,46,51,52,67,72,73,78,79,80,47,52,53,68,73,74,79,80,81,48,53,54,69,74,75,80,81,82,49,54,55,70,75,76,81,82,83,56,57,58,57,59,60,58,60,61,59,62,63,60,63,64,61,64,65,62,66,67,63,67,68,64,68,69,65,69,70,66,71,72,67,72,73,68,73,74,69,74,75,70,75,76,71,77,78,72,78,79,73,79,80,74,80,81,75,81,82,76,82,83};
static __constant__ float phi_factor[83] = { float(1.000000000e+00),float(5.000000000e-01),float(1.666666716e-01),float(4.166666791e-02),float(8.333333768e-03),float(1.388888923e-03),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.666666716e-01),float(4.166666791e-02),float(8.333333768e-03),float(5.000000000e-01),float(5.000000000e-01),float(2.500000000e-01),float(8.333333582e-02),float(2.083333395e-02),float(1.666666716e-01),float(1.666666716e-01),float(8.333333582e-02),float(2.777777798e-02),float(4.166666791e-02),float(4.166666791e-02),float(2.083333395e-02),float(8.333333768e-03),float(8.333333768e-03),float(1.388888923e-03),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.666666716e-01),float(4.166666791e-02),float(8.333333768e-03),float(1.000000000e+00),float(1.000000000e+00),float(5.000000000e-01),float(1.666666716e-01),float(4.166666791e-02),float(5.000000000e-01),float(5.000000000e-01),float(2.500000000e-01),float(8.333333582e-02),float(1.666666716e-01),float(1.666666716e-01),float(8.333333582e-02),float(4.166666791e-02),float(4.166666791e-02),float(8.333333768e-03),float(5.000000000e-01),float(5.000000000e-01),float(2.500000000e-01),float(8.333333582e-02),float(2.083333395e-02),float(5.000000000e-01),float(5.000000000e-01),float(2.500000000e-01),float(8.333333582e-02),float(2.500000000e-01),float(2.500000000e-01),float(1.250000000e-01),float(8.333333582e-02),float(8.333333582e-02),float(2.083333395e-02),float(1.666666716e-01),float(1.666666716e-01),float(8.333333582e-02),float(2.777777798e-02),float(1.666666716e-01),float(1.666666716e-01),float(8.333333582e-02),float(8.333333582e-02),float(8.333333582e-02),float(2.777777798e-02),float(4.166666791e-02),float(4.166666791e-02),float(2.083333395e-02),float(4.166666791e-02),float(4.166666791e-02),float(2.083333395e-02),float(8.333333768e-03),float(8.333333768e-03),float(8.333333768e-03),float(1.388888923e-03)};
static __constant__ char phi_Lsrc[83] = { 3,9,19,34,55,83,2,8,18,33,54,82,7,17,32,53,81,16,31,52,80,30,51,79,50,78,77,1,6,15,29,49,76,5,14,28,48,75,13,27,47,74,26,46,73,45,72,71,4,12,25,44,70,11,24,43,69,23,42,68,41,67,66,10,22,40,65,21,39,64,38,63,62,20,37,61,36,60,59,35,58,57,56};
#ifdef __CUDACC__
template<class T>
__device__
tensor_sym<T, 7> L2L_cuda(const tensor_sym<T, 7>& La, array<T,NDIM> X, bool do_phi) {
	const int tid = threadIdx.x;
	tensor_sym<T, 7> Lb;
	for( int i = 0; i < EXPANSION_SIZE; i ++ ) {
		Lb[i] = 0.0f;
	}
	for( int i = tid; i < EXPANSION_SIZE; i += WARP_SIZE ) {
		Lb[i] = La[i];
	}
	tensor_sym<T,7> dx;
	dx[0] = T(1);
	dx[1] = X[0];
	dx[2] = X[1];
	dx[3] = X[2];
	dx[9]= dx[3] * dx[3];
	dx[8]= dx[2] * dx[3];
	dx[7]= dx[2] * dx[2];
	dx[6]= dx[1] * dx[3];
	dx[5]= dx[1] * dx[2];
	dx[4]= dx[1] * dx[1];
	dx[19]= dx[9] * dx[3];
	dx[18]= dx[8] * dx[3];
	dx[17]= dx[8] * dx[2];
	dx[16]= dx[7] * dx[2];
	dx[15]= dx[6] * dx[3];
	dx[14]= dx[5] * dx[3];
	dx[13]= dx[5] * dx[2];
	dx[12]= dx[6] * dx[1];
	dx[11]= dx[5] * dx[1];
	dx[10]= dx[4] * dx[1];
	dx[34]= dx[9] * dx[9];
	dx[33]= dx[8] * dx[9];
	dx[32]= dx[8] * dx[8];
	dx[31]= dx[8] * dx[7];
	dx[30]= dx[7] * dx[7];
	dx[29]= dx[6] * dx[9];
	dx[28]= dx[5] * dx[9];
	dx[27]= dx[5] * dx[8];
	dx[26]= dx[5] * dx[7];
	dx[25]= dx[6] * dx[6];
	dx[24]= dx[5] * dx[6];
	dx[23]= dx[5] * dx[5];
	dx[22]= dx[6] * dx[4];
	dx[21]= dx[5] * dx[4];
	dx[20]= dx[4] * dx[4];
	dx[55]= dx[19] * dx[9];
	dx[54]= dx[18] * dx[9];
	dx[53]= dx[17] * dx[9];
	dx[52]= dx[17] * dx[8];
	dx[51]= dx[17] * dx[7];
	dx[50]= dx[16] * dx[7];
	dx[49]= dx[15] * dx[9];
	dx[48]= dx[14] * dx[9];
	dx[47]= dx[14] * dx[8];
	dx[46]= dx[14] * dx[7];
	dx[45]= dx[13] * dx[7];
	dx[44]= dx[12] * dx[9];
	dx[43]= dx[14] * dx[6];
	dx[42]= dx[14] * dx[5];
	dx[41]= dx[11] * dx[7];
	dx[40]= dx[12] * dx[6];
	dx[39]= dx[14] * dx[4];
	dx[38]= dx[11] * dx[5];
	dx[37]= dx[12] * dx[4];
	dx[36]= dx[11] * dx[4];
	dx[35]= dx[10] * dx[4];
	dx[83]= dx[19] * dx[19];
	dx[82]= dx[18] * dx[19];
	dx[81]= dx[17] * dx[19];
	dx[80]= dx[17] * dx[18];
	dx[79]= dx[17] * dx[17];
	dx[78]= dx[17] * dx[16];
	dx[77]= dx[16] * dx[16];
	dx[76]= dx[15] * dx[19];
	dx[75]= dx[14] * dx[19];
	dx[74]= dx[14] * dx[18];
	dx[73]= dx[14] * dx[17];
	dx[72]= dx[14] * dx[16];
	dx[71]= dx[13] * dx[16];
	dx[70]= dx[12] * dx[19];
	dx[69]= dx[14] * dx[15];
	dx[68]= dx[14] * dx[14];
	dx[67]= dx[14] * dx[13];
	dx[66]= dx[11] * dx[16];
	dx[65]= dx[12] * dx[15];
	dx[64]= dx[14] * dx[12];
	dx[63]= dx[14] * dx[11];
	dx[62]= dx[11] * dx[13];
	dx[61]= dx[12] * dx[12];
	dx[60]= dx[14] * dx[10];
	dx[59]= dx[11] * dx[11];
	dx[58]= dx[12] * dx[10];
	dx[57]= dx[11] * dx[10];
	dx[56]= dx[10] * dx[10];
	for( int i = tid; i < 757; i+=WARP_SIZE) {
		Lb[Ldest1[i]] = fmaf(factor1[i] * dx[xsrc1[i]], La[Lsrc1[i]], Lb[Ldest1[i]]);
	}
	if( do_phi ) {
		for( int i = tid; i < 83; i+=WARP_SIZE) {
			Lb[0] = fmaf(phi_factor[i] * dx[phi_Lsrc[i]], La[phi_Lsrc[i]], Lb[0]);
		}
	}
	for (int P = warpSize / 2; P >= 1; P /= 2) {
		for (int i = 0; i < EXPANSION_SIZE; i++) {
			Lb[i] += __shfl_xor_sync(0xffffffff, Lb[i], P);
		}
	}
	return Lb;
/* FLOPS = 83 + do_phi * 332*/
}
#endif
